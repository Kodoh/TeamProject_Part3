{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\GitHub\\\\TeamProject_Part3\\\\client\\\\src\\\\Components\\\\TaskProgress.js\",\n  _s = $RefreshSig$();\nimport { Button, CircularProgress, CircularProgressLabel, Heading } from '@chakra-ui/react';\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskProgress = _ref => {\n  _s();\n  let {\n    tasks\n  } = _ref;\n  const [taskIndex, setTaskIndex] = useState(0);\n  const handleNextTask = () => {\n    setTaskIndex(currentIndex => {\n      return Math.min(currentIndex + 1, tasks.length);\n    });\n  };\n  const handlePreviousTask = () => {\n    setTaskIndex(currentIndex => {\n      return Math.max(currentIndex - 1, 0);\n    });\n  };\n  useEffect(() => console.log(\"Re rendering task progress compoenent\"), [taskIndex]);\n  if (!tasks.length === 0) {\n    var task_name = \"Loading Task\";\n  } else {\n    var {\n      task_name,\n      hoursCompleted,\n      totalManhours\n    } = task;\n  }\n  const progress = hoursCompleted / totalManhours * 100;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outer progressCircle\",\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      children: \"Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inner progressCircle\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Heading, {\n          size: \"md\",\n          children: task_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"circle\",\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n          capIsRound: true,\n          color: \"red\",\n          size: \"200px\",\n          value: progress,\n          children: /*#__PURE__*/_jsxDEV(CircularProgressLabel, {\n            children: `${progress.toFixed(2)}%`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), taskId > 1 && /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handlePreviousTask,\n        children: \"Previous Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 32\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleNextTask,\n        children: \"Next Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskProgress, \"przpkiNor2XXYZlKA3PzQ20NpFQ=\");\n_c = TaskProgress;\nexport default TaskProgress;\nvar _c;\n$RefreshReg$(_c, \"TaskProgress\");","map":{"version":3,"names":["Button","CircularProgress","CircularProgressLabel","Heading","React","useEffect","useState","jsxDEV","_jsxDEV","TaskProgress","_ref","_s","tasks","taskIndex","setTaskIndex","handleNextTask","currentIndex","Math","min","length","handlePreviousTask","max","console","log","task_name","hoursCompleted","totalManhours","task","progress","className","children","fileName","_jsxFileName","lineNumber","columnNumber","size","capIsRound","color","value","toFixed","taskId","onClick","_c","$RefreshReg$"],"sources":["D:/Documents/GitHub/TeamProject_Part3/client/src/Components/TaskProgress.js"],"sourcesContent":["import { Button, CircularProgress, CircularProgressLabel, Heading } from '@chakra-ui/react';\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nconst TaskProgress = ({ tasks }) => {\r\n    const [taskIndex, setTaskIndex] = useState(0)\r\n\r\n\r\n\r\n    const handleNextTask = () => {\r\n        setTaskIndex(currentIndex => {\r\n            return Math.min(currentIndex + 1, tasks.length)\r\n        })\r\n    };\r\n\r\n    const handlePreviousTask = () => {\r\n        setTaskIndex(currentIndex => {\r\n            return Math.max(currentIndex - 1, 0)\r\n        })\r\n    };\r\n\r\n    useEffect(() => console.log(\"Re rendering task progress compoenent\"), [taskIndex])\r\n\r\n    if (!tasks.length === 0) {\r\n        var task_name = \"Loading Task\"\r\n    } else {\r\n        var { task_name, hoursCompleted, totalManhours } = task;\r\n    }\r\n\r\n\r\n    const progress = (hoursCompleted / totalManhours) * 100;\r\n\r\n    return (\r\n        <div className=\"outer progressCircle\">\r\n            <Heading>Task</Heading>\r\n            <div className=\"inner progressCircle\">\r\n                <div>\r\n                    <Heading size=\"md\">{task_name}</Heading>\r\n                </div>\r\n                <div className=\"circle\">\r\n                    <CircularProgress capIsRound color=\"red\" size=\"200px\" value={progress}>\r\n                        <CircularProgressLabel>{`${progress.toFixed(2)}%`}</CircularProgressLabel>\r\n                    </CircularProgress>\r\n                </div>\r\n                {taskId > 1 && <Button onClick={handlePreviousTask}>Previous Task</Button>}\r\n                <Button onClick={handleNextTask}>Next Task</Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TaskProgress;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}