{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\GitHub\\\\TeamProject_Part3\\\\client\\\\src\\\\Components\\\\ProgressBar.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Heading, Progress, Button, Flex, Text } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProgressBar(_ref) {\n  _s();\n  let {\n    projectData\n  } = _ref;\n  const [startIndex, setStartIndex] = useState(0);\n  const itemsPerPage = 5;\n  useEffect(() => {\n    if (projectData.length > 0) {\n      setStartIndex(0); // reset the start index when projectData changes\n    }\n  }, [projectData]);\n  const handleClickNext = () => {\n    setStartIndex(currStartIndex => {\n      return currStartIndex + itemsPerPage;\n    });\n  };\n  const handleClickPrevious = () => {\n    setStartIndex(currStartIndex => {\n      return currStartIndex - itemsPerPage;\n    });\n  };\n  const renderProgressBars = () => {\n    const visibleProgressBars = projectData.slice(startIndex, startIndex + itemsPerPage);\n    const remainingBars = itemsPerPage - visibleProgressBars.length;\n    const progressBars = visibleProgressBars.map((project, index) => {\n      const date = new Date();\n      const ETA = date.setDate(date.getDate);\n      return /*#__PURE__*/_jsxDEV(Flex, {\n        className: \"temp\",\n        border: \"1px solid gray\",\n        borderRadius: \"0.5em\",\n        padding: \"1em\",\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          size: \"md\",\n          children: project.project_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          flexDir: \"column\",\n          gap: \"0.5em\",\n          children: [/*#__PURE__*/_jsxDEV(Flex, {\n            justify: \"space-between\",\n            align: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              as: \"b\",\n              size: \"xs\",\n              children: new Date(project.start_date).toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              as: \"b\",\n              size: \"xs\",\n              children: new Date(project.end_date).toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Progress, {\n            rounded: \"md\",\n            value: project.progress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            children: [\"Remaining hours: \", project.remaining_hours, \" - Number of staff on project: \", project.total_employee_count, \" - Estimated finish time: \", new Date() + (project.remaining_hours / project.total_employee_count / 7).toFixed(0), \" working days\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this);\n    });\n    for (let i = 0; i < remainingBars; i++) {\n      progressBars.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"temp\",\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          size: \"md\",\n          children: \"\\xA0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Progress, {\n          rounded: \"md\",\n          colorScheme: \"gray\",\n          value: 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, `remaining-${i}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this));\n    }\n    return progressBars;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outer progress\",\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      size: \"lg\",\n      children: \"Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inner progress\",\n      children: renderProgressBars()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), startIndex > 0 && /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleClickPrevious,\n      children: \"Previous\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this), startIndex + itemsPerPage < projectData.length && /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleClickNext,\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n_s(ProgressBar, \"xONUAB7K55wruasu3W4M4x13F+I=\");\n_c = ProgressBar;\nexport default ProgressBar;\nvar _c;\n$RefreshReg$(_c, \"ProgressBar\");","map":{"version":3,"names":["React","useEffect","useState","Heading","Progress","Button","Flex","Text","jsxDEV","_jsxDEV","ProgressBar","_ref","_s","projectData","startIndex","setStartIndex","itemsPerPage","length","handleClickNext","currStartIndex","handleClickPrevious","renderProgressBars","visibleProgressBars","slice","remainingBars","progressBars","map","project","index","date","Date","ETA","setDate","getDate","className","border","borderRadius","padding","children","size","project_name","fileName","_jsxFileName","lineNumber","columnNumber","flexDir","gap","justify","align","as","start_date","toLocaleDateString","end_date","rounded","value","progress","remaining_hours","total_employee_count","toFixed","i","push","colorScheme","onClick","_c","$RefreshReg$"],"sources":["D:/Documents/GitHub/TeamProject_Part3/client/src/Components/ProgressBar.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Heading, Progress, Button, Flex, Text } from '@chakra-ui/react';\r\n\r\nfunction ProgressBar({ projectData }) {\r\n    const [startIndex, setStartIndex] = useState(0);\r\n    const itemsPerPage = 5;\r\n\r\n    useEffect(() => {\r\n        if (projectData.length > 0) {\r\n            setStartIndex(0);  // reset the start index when projectData changes\r\n        }\r\n    }, [projectData]);\r\n\r\n    const handleClickNext = () => {\r\n        setStartIndex(currStartIndex => {\r\n            return currStartIndex + itemsPerPage\r\n        })\r\n    };\r\n\r\n    const handleClickPrevious = () => {\r\n        setStartIndex(currStartIndex => {\r\n            return currStartIndex - itemsPerPage\r\n        })\r\n    };\r\n\r\n    const renderProgressBars = () => {\r\n        const visibleProgressBars = projectData.slice(startIndex, startIndex + itemsPerPage);\r\n        const remainingBars = itemsPerPage - visibleProgressBars.length;\r\n\r\n        const progressBars = visibleProgressBars.map((project, index) => {\r\n            const date = new Date()\r\n            const ETA = date.setDate(date.getDate)\r\n            return (\r\n                <Flex key={index} className='temp' border='1px solid gray' borderRadius='0.5em' padding='1em'>\r\n                    <Heading size='md'>{project.project_name}</Heading>\r\n                    <Flex flexDir='column' gap='0.5em'>\r\n                        <Flex justify='space-between' align='center'>\r\n                            <Text as='b' size='xs'>{new Date(project.start_date).toLocaleDateString()}</Text>\r\n                            <Text as='b' size='xs'>{new Date(project.end_date).toLocaleDateString()}</Text>\r\n                        </Flex>\r\n                        <Progress rounded='md' value={project.progress} />\r\n                        <Text>Remaining hours: {project.remaining_hours} - Number of staff on project: {project.total_employee_count} - Estimated finish time: {new Date + ((project.remaining_hours / project.total_employee_count) / 7).toFixed(0)} working days</Text>\r\n                    </Flex>\r\n                </Flex>\r\n            )\r\n        });\r\n\r\n        for (let i = 0; i < remainingBars; i++) {\r\n            progressBars.push(\r\n                <div key={`remaining-${i}`} className='temp'>\r\n                    <Heading size='md'>&nbsp;</Heading>\r\n                    <Progress rounded='md' colorScheme='gray' value={0} />\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return progressBars;\r\n    };\r\n\r\n    return (\r\n        <div className='outer progress'>\r\n            <Heading size='lg'>Projects</Heading>\r\n            <div className='inner progress'>\r\n                {renderProgressBars()}\r\n            </div>\r\n            {startIndex > 0 && (\r\n                <Button onClick={handleClickPrevious}>\r\n                    Previous\r\n                </Button>\r\n            )}\r\n            {startIndex + itemsPerPage < projectData.length && (\r\n                <Button onClick={handleClickNext}>\r\n                    Next\r\n                </Button>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProgressBar;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}