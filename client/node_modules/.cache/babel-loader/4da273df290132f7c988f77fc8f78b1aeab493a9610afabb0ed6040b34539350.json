{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aidan\\\\Desktop\\\\tempLogin\\\\client\\\\src\\\\ChatWindow.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { HStack, Button, Flex, Heading, Input, InputGroup, InputRightElement, useDisclosure, Stack, List, ListItem, LinkBox, LinkOverlay, IconButton, Divider } from '@chakra-ui/react';\nimport { Drawer, DrawerBody, DrawerFooter, DrawerHeader, DrawerOverlay, DrawerContent, DrawerCloseButton } from '@chakra-ui/react';\nimport { Select } from 'chakra-react-select';\nimport { SettingsIcon, ChatIcon, CalendarIcon } from '@chakra-ui/icons';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport './ChatWindow.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ChatWindow() {\n  _s();\n  const [groupInfo, setGroup] = useState([{}]);\n  const [groups, setGroups] = useState([{}]);\n  const [messages, setMessages] = useState([{}]);\n  const [addSelectOptions, setAddEmployees] = useState([{}]);\n  const [selectedAdd, setAddSelected] = useState([{}]);\n  const [removeSelectOptions, setRemoveEmployees] = useState([{}]);\n  const [selectedRemove, setRemoveSelected] = useState([{}]);\n  let lastSender = '';\n  const {\n    id\n  } = useParams();\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  function containsObject(obj, list) {\n    var i;\n    for (i = 0; i < list.length; i++) {\n      if (list[i].idUser === obj.idUser) {\n        return true;\n      }\n    }\n    return false;\n  }\n  async function fetchGroups() {\n    try {\n      const groups = await fetch(`/users/${sessionStorage.getItem('userId')}/groups`);\n      const groupsData = await groups.json();\n      const privateChats = await fetch(`/users/${sessionStorage.getItem('userId')}/private`);\n      const privateData = await privateChats.json();\n      setGroups(groupsData.data.concat(privateData.data));\n      console.log(groupsData.data.concat(privateData.data));\n    } catch (error) {\n      console.error('Error fetching groups:', error);\n    }\n  }\n  async function fetchGroupInfo() {\n    try {\n      const groupInfo = await (await fetch(`/groups/${id}`)).json();\n      console.log(groupInfo.data);\n      setGroup(groupInfo.data);\n    } catch (error) {\n      console.error('Error fetching group info:', error);\n    }\n  }\n  async function fetchAllUsers() {\n    try {\n      const allUsers = await (await fetch('/users')).json();\n      const groupUsers = await (await fetch(`/groups/${id}/users`)).json();\n      const emps = [];\n      allUsers.data.forEach(item => {\n        if (!containsObject(item, groupUsers.data)) {\n          emps.push({\n            value: item.idUser,\n            label: item.email\n          });\n        }\n      });\n      setAddEmployees(emps);\n    } catch (error) {\n      console.error('Error fetching users:', error);\n    }\n  }\n  async function fetchMessages() {\n    const response = await fetch(`/groups/${id}/messages`);\n    const messages = await response.json();\n    setMessages(messages.data);\n  }\n  async function fetchGroupUsers() {\n    try {\n      const response = await fetch(`/groups/${id}/users`);\n      const data = await response.json();\n      const emps = [];\n      data.data.forEach(item => {\n        if (parseInt(sessionStorage.getItem('userId')) !== item.idUser) {\n          emps.push({\n            value: item.idUser,\n            label: item.email\n          });\n        }\n      });\n      setRemoveEmployees(emps);\n    } catch (error) {\n      console.error('Error fetching users:', error);\n    }\n  }\n  useEffect(() => {\n    fetchGroups();\n    fetchGroupInfo();\n    fetchGroupUsers();\n    fetchAllUsers();\n    fetchMessages();\n  }, []);\n\n  // Navigation onClick functions\n\n  let navigate = useNavigate();\n  const redirectDataAnalytics = () => {\n    return navigate(\"/data-analytics\");\n  };\n  const redirectTextChat = () => {\n    return navigate(\"/text-chat\");\n  };\n  const send = async e => {\n    e.preventDefault();\n    const userId = parseInt(sessionStorage.getItem('userId'));\n    const messageText = document.getElementById('message').value;\n\n    // Only send if message is not empty\n    if (messageText.trim() !== '') {\n      const messageData = {\n        Contents: messageText,\n        Group_idGroup: id,\n        Sender: userId\n      };\n      await fetch('/messages', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(messageData)\n      });\n      document.getElementById('message').focus();\n      fetchMessages();\n    }\n  };\n  const handleChange = selectedOptions => {\n    setAddSelected(selectedOptions);\n  };\n  const addUser = async e => {\n    e.preventDefault();\n    let participantIds = [];\n    selectedAdd.forEach(item => {\n      participantIds.push(item.value);\n    });\n    try {\n      await Promise.all(participantIds.map(async newId => {\n        const response = await fetch('/membership', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            userId: parseInt(newId),\n            groupId: parseInt(id)\n          })\n        });\n        if (!response.ok) {\n          console.error('Error while creating membership:', await response.text());\n        }\n      }));\n    } catch (error) {\n      console.error('Error while creating membership:', error);\n    }\n  };\n  const deleteUser = async e => {\n    e.preventDefault();\n    let participantIds = [];\n    selectedRemove.forEach(item => {\n      participantIds.push(item.value);\n    });\n    try {\n      await Promise.all(participantIds.map(async newId => {\n        const response = await fetch('/membership', {\n          method: 'DELETE',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            userId: parseInt(newId),\n            groupId: parseInt(id)\n          })\n        });\n        if (!response.ok) {\n          console.error('Error while creating membership:', await response.text());\n        }\n      }));\n    } catch (error) {\n      console.error('Error while creating membership:', error);\n    }\n  };\n  const leaveGroup = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('/membership', {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userId: parseInt(sessionStorage.getItem('userId')),\n          groupId: parseInt(id)\n        })\n      });\n      if (!response.ok) {\n        console.error('Error while creating membership:', await response.text());\n      }\n    } catch (error) {\n      console.error('Error while creating membership:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(Drawer, {\n      isOpen: isOpen,\n      onClose: onClose,\n      placement: \"right\",\n      children: [/*#__PURE__*/_jsxDEV(DrawerOverlay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DrawerContent, {\n        children: [/*#__PURE__*/_jsxDEV(DrawerHeader, {\n          children: /*#__PURE__*/_jsxDEV(Heading, {\n            children: \"Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DrawerCloseButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DrawerBody, {\n          children: /*#__PURE__*/_jsxDEV(Stack, {\n            children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                id: \"nameInput\",\n                value: groupInfo[0].Name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(InputRightElement, {\n                width: \"4.5rem\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: send,\n                  children: \"Rename\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              closeMenuOnSelect: false,\n              selectedOptionColorScheme: \"purple\",\n              isMulti: true,\n              name: \"employee-select\",\n              options: addSelectOptions,\n              onChange: handleChange,\n              placeholder: \"Select Employees to add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: addUser,\n              children: \"Add user\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              closeMenuOnSelect: false,\n              selectedOptionColorScheme: \"purple\",\n              isMulti: true,\n              name: \"employee-select\",\n              options: removeSelectOptions,\n              onChange: handleChange,\n              placeholder: \"Select Employees to remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: deleteUser,\n              children: \"Remove user\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DrawerFooter, {\n          children: /*#__PURE__*/_jsxDEV(HStack, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              colorScheme: \"red\",\n              onClick: leaveGroup,\n              children: \"Leave Group\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      flexDir: 'column',\n      bg: \"teal.600\",\n      justify: \"center\",\n      gap: \"10px\",\n      px: \"0.5em\",\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        bg: \"teal.500\",\n        \"aria-label\": \"Data Analytics\",\n        icon: /*#__PURE__*/_jsxDEV(CalendarIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 77\n        }, this),\n        onClick: redirectDataAnalytics\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        bg: \"teal.500\",\n        \"aria-label\": \"Text Chat\",\n        icon: /*#__PURE__*/_jsxDEV(ChatIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 72\n        }, this),\n        onClick: redirectTextChat\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      flexDir: \"column\",\n      bg: \"teal.500\",\n      flexGrow: \"0.1\",\n      children: /*#__PURE__*/_jsxDEV(List, {\n        children: groups.map(item => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(ListItem, {\n            children: /*#__PURE__*/_jsxDEV(LinkBox, {\n              as: \"article\",\n              p: \"3\",\n              _hover: {\n                color: \"white.500\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Heading, {\n                size: \"md\",\n                children: /*#__PURE__*/_jsxDEV(LinkOverlay, {\n                  href: item.idGroup,\n                  children: item.Name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 33\n            }, this)\n          }, item, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      flexDir: \"column\",\n      flexGrow: \"1\",\n      position: \"relative\",\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        p: \"0.5em\",\n        justify: \"center\",\n        bg: \"teal.400\",\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          children: groupInfo[0].Name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          size: \"lg\",\n          ml: \"auto\",\n          mr: \"0\",\n          bg: \"teal.400\",\n          \"aria-label\": \"Data Analytics\",\n          icon: /*#__PURE__*/_jsxDEV(SettingsIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 108\n          }, this),\n          onClick: onOpen,\n          _hover: {\n            transform: \"scale(1.3)\",\n            color: \"white\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"chatMessages\",\n        className: \"messages\",\n        children: messages.map(message => {\n          const userId = parseInt(sessionStorage.getItem('userId'));\n          const isCurrentUser = message.Sender === userId;\n          if (lastSender !== message.Sender) {\n            lastSender = message.Sender;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: isCurrentUser ? 'username user-username' : 'username',\n                children: message.Name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: isCurrentUser ? 'message user-message' : 'message',\n                children: message.Contents\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 37\n              }, this)]\n            }, message.idMessages, true, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 33\n            }, this);\n          } else {\n            lastSender = message.Sender;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-wrapper\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: isCurrentUser ? 'message user-message' : 'message',\n                children: message.Contents\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 37\n              }, this)\n            }, message.idMessages, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 33\n            }, this);\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n        w: \"100%\",\n        position: \"absolute\",\n        bottom: \"0\",\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          pr: \"4.5rem\",\n          type: \"text\",\n          placeholder: \"Type your message\",\n          id: \"message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InputRightElement, {\n          width: \"4.5rem\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            h: \"1.75rem\",\n            size: \"sm\",\n            onClick: send,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 234,\n    columnNumber: 9\n  }, this);\n}\n_s(ChatWindow, \"xnmXuKB40HUrhJFBxNGTcE/hJhw=\", false, function () {\n  return [useParams, useDisclosure, useNavigate];\n});\n_c = ChatWindow;\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["React","useEffect","useState","HStack","Button","Flex","Heading","Input","InputGroup","InputRightElement","useDisclosure","Stack","List","ListItem","LinkBox","LinkOverlay","IconButton","Divider","Drawer","DrawerBody","DrawerFooter","DrawerHeader","DrawerOverlay","DrawerContent","DrawerCloseButton","Select","SettingsIcon","ChatIcon","CalendarIcon","useNavigate","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatWindow","_s","groupInfo","setGroup","groups","setGroups","messages","setMessages","addSelectOptions","setAddEmployees","selectedAdd","setAddSelected","removeSelectOptions","setRemoveEmployees","selectedRemove","setRemoveSelected","lastSender","id","isOpen","onOpen","onClose","containsObject","obj","list","i","length","idUser","fetchGroups","fetch","sessionStorage","getItem","groupsData","json","privateChats","privateData","data","concat","console","log","error","fetchGroupInfo","fetchAllUsers","allUsers","groupUsers","emps","forEach","item","push","value","label","email","fetchMessages","response","fetchGroupUsers","parseInt","navigate","redirectDataAnalytics","redirectTextChat","send","e","preventDefault","userId","messageText","document","getElementById","trim","messageData","Contents","Group_idGroup","Sender","method","headers","body","JSON","stringify","focus","handleChange","selectedOptions","addUser","participantIds","Promise","all","map","newId","groupId","ok","text","deleteUser","leaveGroup","className","children","placement","fileName","_jsxFileName","lineNumber","columnNumber","type","Name","width","onClick","closeMenuOnSelect","selectedOptionColorScheme","isMulti","name","options","onChange","placeholder","colorScheme","flexDir","bg","justify","gap","px","icon","flexGrow","as","p","_hover","color","size","href","idGroup","position","ml","mr","transform","message","isCurrentUser","idMessages","w","bottom","pr","h","_c","$RefreshReg$"],"sources":["C:/Users/aidan/Desktop/tempLogin/client/src/ChatWindow.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { HStack, Button, Flex, Heading, Input, InputGroup, InputRightElement, useDisclosure, Stack, List, ListItem, LinkBox, LinkOverlay, IconButton, Divider } from '@chakra-ui/react'\r\nimport { Drawer, DrawerBody, DrawerFooter, DrawerHeader, DrawerOverlay, DrawerContent, DrawerCloseButton } from '@chakra-ui/react'\r\nimport { Select } from 'chakra-react-select'\r\nimport { SettingsIcon, ChatIcon, CalendarIcon } from '@chakra-ui/icons';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport './ChatWindow.css'\r\n\r\n\r\n\r\nfunction ChatWindow() {\r\n    const [groupInfo, setGroup] = useState([{}])\r\n    const [groups, setGroups] = useState([{}])\r\n    const [messages, setMessages] = useState([{}])\r\n    const [addSelectOptions, setAddEmployees] = useState([{}]);\r\n    const [selectedAdd, setAddSelected] = useState([{}]);\r\n    const [removeSelectOptions, setRemoveEmployees] = useState([{}])\r\n    const [selectedRemove, setRemoveSelected] = useState([{}])\r\n\r\n\r\n    let lastSender = '';\r\n    const { id } = useParams();\r\n    const { isOpen, onOpen, onClose } = useDisclosure()\r\n\r\n    function containsObject(obj, list) {\r\n        var i;\r\n        for (i = 0; i < list.length; i++) {\r\n            if (list[i].idUser === obj.idUser) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    async function fetchGroups() {\r\n        try {\r\n            const groups = await fetch(`/users/${sessionStorage.getItem('userId')}/groups`);\r\n            const groupsData = await groups.json();\r\n\r\n            const privateChats = await fetch(`/users/${sessionStorage.getItem('userId')}/private`);\r\n            const privateData = await privateChats.json();\r\n\r\n            setGroups(groupsData.data.concat(privateData.data));\r\n            console.log(groupsData.data.concat(privateData.data))\r\n        } catch (error) {\r\n            console.error('Error fetching groups:', error);\r\n        }\r\n    }\r\n\r\n    async function fetchGroupInfo() {\r\n        try {\r\n            const groupInfo = await (await fetch(`/groups/${id}`)).json();\r\n            console.log(groupInfo.data)\r\n            setGroup(groupInfo.data)\r\n        } catch (error) {\r\n            console.error('Error fetching group info:', error)\r\n        }\r\n    }\r\n\r\n    async function fetchAllUsers() {\r\n        try {\r\n            const allUsers = await (await fetch('/users')).json();\r\n            const groupUsers = await (await fetch(`/groups/${id}/users`)).json();\r\n            const emps = [];\r\n            allUsers.data.forEach((item) => {\r\n                if (!containsObject(item, groupUsers.data)) {\r\n                    emps.push({\r\n                        value: item.idUser,\r\n                        label: item.email\r\n                    })\r\n                }\r\n            })\r\n            setAddEmployees(emps);\r\n\r\n        } catch (error) {\r\n            console.error('Error fetching users:', error);\r\n        }\r\n    }\r\n\r\n    async function fetchMessages() {\r\n        const response = await fetch(`/groups/${id}/messages`);\r\n        const messages = await response.json();\r\n        setMessages(messages.data)\r\n    }\r\n\r\n    async function fetchGroupUsers() {\r\n        try {\r\n            const response = await fetch(`/groups/${id}/users`);\r\n            const data = await response.json();\r\n            const emps = [];\r\n            data.data.forEach((item) => {\r\n                if (parseInt(sessionStorage.getItem('userId')) !== item.idUser) {\r\n                    emps.push({\r\n                        value: item.idUser,\r\n                        label: item.email\r\n                    })\r\n                }\r\n            })\r\n            setRemoveEmployees(emps);\r\n\r\n        } catch (error) {\r\n            console.error('Error fetching users:', error);\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        fetchGroups();\r\n        fetchGroupInfo();\r\n        fetchGroupUsers();\r\n        fetchAllUsers();\r\n        fetchMessages();\r\n    }, [])\r\n\r\n\r\n    // Navigation onClick functions\r\n\r\n    let navigate = useNavigate();\r\n\r\n    const redirectDataAnalytics = () => {\r\n        return navigate(\"/data-analytics\")\r\n    }\r\n\r\n    const redirectTextChat = () => {\r\n        return navigate(\"/text-chat\")\r\n    }\r\n\r\n\r\n    const send = async (e) => {\r\n        e.preventDefault();\r\n        const userId = parseInt(sessionStorage.getItem('userId'));\r\n        const messageText = document.getElementById('message').value;\r\n\r\n        // Only send if message is not empty\r\n        if (messageText.trim() !== '') {\r\n\r\n            const messageData = {\r\n                Contents: messageText,\r\n                Group_idGroup: id,\r\n                Sender: userId,\r\n            };\r\n\r\n\r\n            await fetch('/messages', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(messageData),\r\n            });\r\n\r\n\r\n            document.getElementById('message').focus();\r\n            fetchMessages();\r\n        }\r\n    }\r\n\r\n    const handleChange = (selectedOptions) => {\r\n        setAddSelected(selectedOptions);\r\n    }\r\n\r\n    const addUser = async (e) => {\r\n        e.preventDefault();\r\n        let participantIds = []\r\n        selectedAdd.forEach((item) => {\r\n            participantIds.push(item.value)\r\n        })\r\n        try {\r\n            await Promise.all(participantIds.map(async (newId) => {\r\n                const response = await fetch('/membership', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify({ userId: parseInt(newId), groupId: parseInt(id) })\r\n                });\r\n\r\n                if (!response.ok) {\r\n                    console.error('Error while creating membership:', await response.text());\r\n                }\r\n            }));\r\n        } catch (error) {\r\n            console.error('Error while creating membership:', error);\r\n        }\r\n    }\r\n\r\n    const deleteUser = async (e) => {\r\n        e.preventDefault();\r\n        let participantIds = []\r\n        selectedRemove.forEach((item) => {\r\n            participantIds.push(item.value)\r\n        })\r\n        try {\r\n            await Promise.all(participantIds.map(async (newId) => {\r\n                const response = await fetch('/membership', {\r\n                    method: 'DELETE',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify({ userId: parseInt(newId), groupId: parseInt(id) })\r\n                });\r\n\r\n                if (!response.ok) {\r\n                    console.error('Error while creating membership:', await response.text());\r\n                }\r\n            }));\r\n        } catch (error) {\r\n            console.error('Error while creating membership:', error);\r\n        }\r\n    }\r\n\r\n    const leaveGroup = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await fetch('/membership', {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ userId: parseInt(sessionStorage.getItem('userId')), groupId: parseInt(id) })\r\n            });\r\n\r\n            if (!response.ok) {\r\n                console.error('Error while creating membership:', await response.text());\r\n            }\r\n\r\n        } catch (error) {\r\n            console.error('Error while creating membership:', error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='wrapper'>\r\n            <Drawer isOpen={isOpen} onClose={onClose} placement='right'>\r\n                <DrawerOverlay />\r\n                <DrawerContent>\r\n                    <DrawerHeader>\r\n                        <Heading>Settings</Heading>\r\n                    </DrawerHeader>\r\n                    <DrawerCloseButton />\r\n                    <DrawerBody>\r\n                        <Stack>\r\n\r\n                            <InputGroup>\r\n                                <Input type='text' id='nameInput' value={groupInfo[0].Name} />\r\n                                <InputRightElement width='4.5rem'>\r\n                                    <Button onClick={send}>\r\n                                        Rename\r\n                                    </Button>\r\n                                </InputRightElement>\r\n                            </InputGroup>\r\n\r\n                            <Select\r\n                                closeMenuOnSelect={false}\r\n                                selectedOptionColorScheme=\"purple\"\r\n                                isMulti\r\n                                name=\"employee-select\"\r\n                                options={addSelectOptions}\r\n                                onChange={handleChange}\r\n                                placeholder='Select Employees to add' />\r\n                            <Button onClick={addUser}>\r\n                                Add user\r\n                            </Button>\r\n                            <Select\r\n                                closeMenuOnSelect={false}\r\n                                selectedOptionColorScheme=\"purple\"\r\n                                isMulti\r\n                                name=\"employee-select\"\r\n                                options={removeSelectOptions}\r\n                                onChange={handleChange}\r\n                                placeholder='Select Employees to remove' />\r\n                            <Button onClick={deleteUser}>\r\n                                Remove user\r\n                            </Button>\r\n                        </Stack>\r\n                    </DrawerBody>\r\n\r\n                    <DrawerFooter>\r\n                        <HStack>\r\n                            <Button colorScheme='red' onClick={leaveGroup}>\r\n                                Leave Group\r\n                            </Button>\r\n                        </HStack>\r\n                    </DrawerFooter>\r\n                </DrawerContent>\r\n            </Drawer>\r\n            <Flex flexDir={'column'} bg='teal.600' justify='center' gap='10px' px='0.5em'>\r\n                <IconButton bg='teal.500' aria-label='Data Analytics' icon={<CalendarIcon />} onClick={redirectDataAnalytics} />\r\n                <IconButton bg='teal.500' aria-label='Text Chat' icon={<ChatIcon />} onClick={redirectTextChat} />\r\n            </Flex>\r\n            <Flex flexDir='column' bg='teal.500' flexGrow='0.1'>\r\n                <List>\r\n                    {groups.map((item) => (\r\n                        <>\r\n                            <ListItem key={item} >\r\n                                <LinkBox as='article' p='3' _hover={{ color: \"white.500\" }}>\r\n                                    <Heading size='md'>\r\n                                        <LinkOverlay href={item.idGroup}>\r\n                                            {item.Name}\r\n                                        </LinkOverlay>\r\n                                    </Heading>\r\n                                </LinkBox>\r\n                            </ListItem>\r\n                            <Divider />\r\n                        </>\r\n                    ))}\r\n                </List>\r\n            </Flex>\r\n            <Flex flexDir='column' flexGrow='1' position='relative'>\r\n                <Flex p='0.5em' justify='center' bg='teal.400'>\r\n                    <Heading>{groupInfo[0].Name}</Heading>\r\n                    <IconButton size='lg' ml='auto' mr='0' bg='teal.400' aria-label='Data Analytics' icon={<SettingsIcon />} onClick={onOpen} _hover={{ transform: \"scale(1.3)\", color: \"white\" }} />\r\n                </Flex>\r\n                <div id='chatMessages' className='messages'>\r\n                    {messages.map((message) => {\r\n                        const userId = parseInt(sessionStorage.getItem('userId'));\r\n                        const isCurrentUser = message.Sender === userId;\r\n                        if (lastSender !== message.Sender) {\r\n                            lastSender = message.Sender;\r\n                            return (\r\n                                <div key={message.idMessages} className='message-wrapper'>\r\n                                    <div className={isCurrentUser ? 'username user-username' : 'username'}>\r\n                                        {message.Name}\r\n                                    </div>\r\n                                    <div className={isCurrentUser ? 'message user-message' : 'message'}>\r\n                                        {message.Contents}\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        } else {\r\n                            lastSender = message.Sender;\r\n                            return (\r\n                                <div key={message.idMessages} className='message-wrapper'>\r\n                                    <div className={isCurrentUser ? 'message user-message' : 'message'}>\r\n                                        {message.Contents}\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n\r\n                    })}\r\n                </div>\r\n                <InputGroup\r\n                    w='100%'\r\n                    position='absolute'\r\n                    bottom='0'>\r\n                    <Input\r\n                        pr='4.5rem'\r\n                        type='text'\r\n                        placeholder='Type your message'\r\n                        id='message' />\r\n                    <InputRightElement width='4.5rem'>\r\n                        <Button h='1.75rem' size='sm' onClick={send}>\r\n                            Send\r\n                        </Button>\r\n                    </InputRightElement>\r\n                </InputGroup>\r\n            </Flex>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChatWindow;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}