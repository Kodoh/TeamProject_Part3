{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\GitHub\\\\TeamProject_Part3\\\\client\\\\src\\\\pages\\\\Analytics.js\",\n  _s = $RefreshSig$();\nimport '../App.css';\nimport { Heading, Flex } from '@chakra-ui/react';\nimport { createColumnHelper, useSortBy } from '@tanstack/react-table';\nimport { DataTable } from '../Components/DataTable';\nimport ProgressBar from '../Components/ProgressBar';\nimport TaskProgress from '../Components/TaskProgress';\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columnHelper = createColumnHelper();\nconst columns = [columnHelper.accessor('Name', {\n  cell: info => info.getValue(),\n  header: 'Name',\n  sortType: 'basic'\n}), columnHelper.accessor('email', {\n  cell: info => info.getValue(),\n  header: 'Email',\n  sortType: 'basic'\n}), columnHelper.accessor('joindate', {\n  cell: info => info.getValue(),\n  header: 'Member since',\n  sortType: 'basic'\n}), columnHelper.accessor('role', {\n  cell: info => info.getValue(),\n  header: 'Role',\n  sortType: 'basic'\n})];\nfunction Analytics() {\n  _s();\n  const [employees, setEmployees] = useState([]);\n  const [taskId, setTaskId] = useState(1);\n  const [projects, setProjects] = useState([]);\n  const [tasks, setTasks] = useState([{}]);\n  const fetchTasks = () => {\n    fetch(`/dataAnalytics/employeeTasks/${sessionStorage.getItem('userId')}`).then(response => response.json()).then(result => setTasks(result.data)).catch(error => console.error('Error fetching task:', error));\n  };\n  useEffect(() => {\n    fetch('/dataAnalytics/employees').then(response => response.json()).then(result => {\n      const mappedData = result.data.map(item => ({\n        Name: item.Name,\n        email: item.email,\n        joindate: new Date(item.joindate).toLocaleDateString(),\n        role: item.role\n      }));\n      setEmployees(mappedData);\n    }).catch(error => console.error(error));\n    fetch('/dataAnalytics/projects').then(response => response.json()).then(result => {\n      setProjects(result.data);\n    }).catch(error => console.error(error));\n    fetchTasks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Flex, {\n      flexDir: \"column\",\n      flexBasis: \"100%\",\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        flexBasis: \"50%\",\n        children: [/*#__PURE__*/_jsxDEV(ProgressBar, {\n          projectData: projects\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TaskProgress, {\n          tasks: tasks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"outer employees\",\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          size: \"lg\",\n          children: \"Employees\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inner employees\",\n          children: /*#__PURE__*/_jsxDEV(DataTable, {\n            columns: columns,\n            data: employees\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n_s(Analytics, \"yzJprIf8ze1oFTLYlSi8jA4/ah0=\");\n_c = Analytics;\nexport default Analytics;\nvar _c;\n$RefreshReg$(_c, \"Analytics\");","map":{"version":3,"names":["Heading","Flex","createColumnHelper","useSortBy","DataTable","ProgressBar","TaskProgress","React","useEffect","useState","jsxDEV","_jsxDEV","columnHelper","columns","accessor","cell","info","getValue","header","sortType","Analytics","_s","employees","setEmployees","taskId","setTaskId","projects","setProjects","tasks","setTasks","fetchTasks","fetch","sessionStorage","getItem","then","response","json","result","data","catch","error","console","mappedData","map","item","Name","email","joindate","Date","toLocaleDateString","role","className","children","flexDir","flexBasis","projectData","fileName","_jsxFileName","lineNumber","columnNumber","size","_c","$RefreshReg$"],"sources":["D:/Documents/GitHub/TeamProject_Part3/client/src/pages/Analytics.js"],"sourcesContent":["import '../App.css';\r\nimport { Heading, Flex } from '@chakra-ui/react';\r\nimport { createColumnHelper, useSortBy } from '@tanstack/react-table';\r\nimport { DataTable } from '../Components/DataTable';\r\nimport ProgressBar from '../Components/ProgressBar';\r\nimport TaskProgress from '../Components/TaskProgress';\r\n\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nconst columnHelper = createColumnHelper();\r\n\r\nconst columns = [\r\n    columnHelper.accessor('Name', {\r\n        cell: (info) => info.getValue(),\r\n        header: 'Name',\r\n        sortType: 'basic'\r\n    }),\r\n    columnHelper.accessor('email', {\r\n        cell: (info) => info.getValue(),\r\n        header: 'Email',\r\n        sortType: 'basic'\r\n    }),\r\n    columnHelper.accessor('joindate', {\r\n        cell: (info) => info.getValue(),\r\n        header: 'Member since',\r\n        sortType: 'basic'\r\n    }),\r\n    columnHelper.accessor('role', {\r\n        cell: (info) => info.getValue(),\r\n        header: 'Role',\r\n        sortType: 'basic'\r\n    })\r\n];\r\n\r\nfunction Analytics() {\r\n    const [employees, setEmployees] = useState([]);\r\n    const [taskId, setTaskId] = useState(1);\r\n    const [projects, setProjects] = useState([]);\r\n    const [tasks, setTasks] = useState([{}])\r\n\r\n    const fetchTasks = () => {\r\n        fetch(`/dataAnalytics/employeeTasks/${sessionStorage.getItem('userId')}`)\r\n            .then((response) => response.json())\r\n            .then((result) => setTasks(result.data))\r\n            .catch((error) => console.error('Error fetching task:', error));\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        fetch('/dataAnalytics/employees')\r\n            .then((response) => response.json())\r\n            .then((result) => {\r\n                const mappedData = result.data.map((item) => ({\r\n                    Name: item.Name,\r\n                    email: item.email,\r\n                    joindate: new Date(item.joindate).toLocaleDateString(),\r\n                    role: item.role\r\n                }));\r\n                setEmployees(mappedData);\r\n            })\r\n            .catch((error) => console.error(error));\r\n        fetch('/dataAnalytics/projects')\r\n            .then((response) => response.json())\r\n            .then((result) => {\r\n                setProjects(result.data);\r\n            })\r\n            .catch((error) => console.error(error));\r\n        fetchTasks();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Flex flexDir='column' flexBasis='100%'>\r\n                <Flex flexBasis='50%'>\r\n                    <ProgressBar projectData={projects} />\r\n                    <TaskProgress tasks={tasks} />\r\n                </Flex>\r\n                <div className=\"outer employees\">\r\n                    <Heading size=\"lg\">Employees</Heading>\r\n                    <div className=\"inner employees\">\r\n                        <DataTable columns={columns} data={employees} />\r\n                    </div>\r\n                </div>\r\n            </Flex>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Analytics;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}