{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\GitHub\\\\TeamProject_Part3\\\\client\\\\src\\\\Components\\\\ChatView.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { HStack, Button, Flex, Heading, Input, InputGroup, InputRightElement, useDisclosure, Stack, IconButton } from '@chakra-ui/react';\nimport { Drawer, DrawerBody, DrawerFooter, DrawerHeader, DrawerOverlay, DrawerContent, DrawerCloseButton } from '@chakra-ui/react';\nimport { Popover, PopoverTrigger, PopoverContent, PopoverArrow, PopoverBody } from '@chakra-ui/react';\nimport { Select } from 'chakra-react-select';\nimport { SettingsIcon } from '@chakra-ui/icons';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ChatView() {\n  _s();\n  const {\n    id\n  } = useParams();\n  let lastSender = '';\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  const [sent, setSent] = useState();\n  const [groupInfo, setGroup] = useState([{}]);\n  const [messages, setMessages] = useState([]);\n  const [addSelectOptions, setAddEmployees] = useState([{}]);\n  const [selectedAdd, setAddSelected] = useState([{}]);\n  const [removeSelectOptions, setRemoveEmployees] = useState([{}]);\n  const [selectedRemove, setRemoveSelected] = useState([{}]);\n  function containsObject(obj, list) {\n    var i;\n    for (i = 0; i < list.length; i++) {\n      if (list[i].idUser === obj.idUser) {\n        return true;\n      }\n    }\n    return false;\n  }\n  async function fetchGroupInfo() {\n    try {\n      const groupInfo = await (await fetch(`/textChat/groups/${id}`)).json();\n      setGroup(groupInfo.data);\n    } catch (error) {\n      console.error('Error fetching group info:', error);\n    }\n  }\n  async function fetchAllUsers() {\n    try {\n      const allUsers = await (await fetch('/textChat/users')).json();\n      const groupUsers = await (await fetch(`/textChat/groups/${id}/users`)).json();\n      const emps = [];\n      allUsers.data.forEach(item => {\n        if (!containsObject(item, groupUsers.data)) {\n          emps.push({\n            value: item.idUser,\n            label: item.email\n          });\n        }\n      });\n      setAddEmployees(emps);\n    } catch (error) {\n      console.error('Error fetching users:', error);\n    }\n  }\n  async function fetchMessages() {\n    try {\n      const response = await fetch(`/textChat/groups/${id}/messages`);\n      const messages = await response.json();\n      setMessages(messages.data);\n    } catch (error) {\n      console.error('There was an error fetching messages:', error);\n    }\n  }\n  async function fetchGroupUsers() {\n    try {\n      const response = await fetch(`/textChat/groups/${id}/users`);\n      const data = await response.json();\n      const emps = [];\n      data.data.forEach(item => {\n        if (parseInt(sessionStorage.getItem('userId')) !== item.idUser) {\n          emps.push({\n            value: item.idUser,\n            label: item.email\n          });\n        }\n      });\n      setRemoveEmployees(emps);\n    } catch (error) {\n      console.error('Error fetching users:', error);\n    }\n  }\n  useEffect(() => {\n    fetchGroupInfo();\n    fetchGroupUsers();\n    fetchAllUsers();\n    fetchMessages();\n  }, [id]);\n  useEffect(() => {\n    fetchGroupInfo();\n    fetchMessages();\n  }, [sent]);\n  const send = async e => {\n    if (e.keyCode === 13) {\n      e.preventDefault();\n      const userId = parseInt(sessionStorage.getItem('userId'));\n      const messageText = document.getElementById('message').value;\n\n      // Only send if message is not empty\n      if (messageText.trim() !== '') {\n        const messageData = {\n          Contents: messageText,\n          Group_idGroup: id,\n          Sender: userId\n        };\n        await fetch('/textChat/messages', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(messageData)\n        });\n        document.getElementById('message').value = '';\n        document.getElementById('message').focus();\n        setSent(!sent);\n      }\n    }\n  };\n  const deleteMessage = async id => {\n    try {\n      await fetch(`/textChat/messages/${id}`, {\n        method: 'DELETE'\n      });\n      setSent(!sent);\n    } catch (error) {\n      console.error('There was an error deleting the message:', error);\n    }\n  };\n  const editMessage = async id => {\n    try {\n      const messageText = document.getElementById(id).value;\n      if (messageText.trim() !== '') {\n        const messageData = {\n          Contents: messageText\n        };\n        await fetch(`/textChat/messages/${id}`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(messageData)\n        });\n        setSent(!sent);\n      }\n    } catch (error) {\n      console.error('There was an error updating your message', error);\n    }\n  };\n  const updateChat = async e => {\n    e.preventDefault();\n    const name = document.getElementById('nameInput').value;\n    try {\n      if (name.trim() !== '') {\n        const messageData = {\n          Name: name\n        };\n        await fetch(`/textChat/groups/${id}`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(messageData)\n        });\n        setSent(!sent);\n      }\n    } catch (error) {\n      console.error('There was an error updating the chat name', error);\n    }\n  };\n  const handleAddChange = selectedOptions => {\n    setAddSelected(selectedOptions);\n  };\n  const handleRemoveChange = selectedOptions => {\n    setRemoveSelected(selectedOptions);\n  };\n  const addUser = async e => {\n    e.preventDefault();\n    let participantIds = [];\n    selectedAdd.forEach(item => {\n      participantIds.push(item.value);\n    });\n    try {\n      await Promise.all(participantIds.map(async newId => {\n        const response = await fetch('/textChat/membership', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            userId: parseInt(newId),\n            groupId: parseInt(id)\n          })\n        });\n        if (!response.ok) {\n          console.error('Error while creating membership:', await response.text());\n        }\n      }));\n    } catch (error) {\n      console.error('Error while creating membership:', error);\n    }\n  };\n  const deleteUser = async e => {\n    e.preventDefault();\n    let participantIds = [];\n    selectedRemove.forEach(item => {\n      participantIds.push(item.value);\n    });\n    try {\n      await Promise.all(participantIds.map(async newId => {\n        const response = await fetch('/textChat/membership', {\n          method: 'DELETE',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            userId: parseInt(newId),\n            groupId: parseInt(id)\n          })\n        });\n        if (!response.ok) {\n          console.error('Error while creating membership:', await response.text());\n        }\n      }));\n    } catch (error) {\n      console.error('Error while creating membership:', error);\n    }\n  };\n  const leaveGroup = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('/textChat/membership', {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userId: parseInt(sessionStorage.getItem('userId')),\n          groupId: parseInt(id)\n        })\n      });\n      if (!response.ok) {\n        console.error('Error while creating membership:', await response.text());\n      }\n    } catch (error) {\n      console.error('Error while creating membership:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Drawer, {\n      isOpen: isOpen,\n      onClose: onClose,\n      placement: \"right\",\n      children: [/*#__PURE__*/_jsxDEV(DrawerOverlay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DrawerContent, {\n        children: [/*#__PURE__*/_jsxDEV(DrawerHeader, {\n          children: /*#__PURE__*/_jsxDEV(Heading, {\n            children: \"Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DrawerCloseButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DrawerBody, {\n          children: /*#__PURE__*/_jsxDEV(Stack, {\n            children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n              size: \"md\",\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                pr: \"5em\",\n                type: \"text\",\n                id: \"nameInput\",\n                defaultValue: groupInfo[0].Name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(InputRightElement, {\n                width: \"4.5rem\",\n                pr: \"0.5em\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: updateChat,\n                  h: \"1.75rem\",\n                  size: \"sm\",\n                  children: \"Rename\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              closeMenuOnSelect: false,\n              selectedOptionColorScheme: \"purple\",\n              isMulti: true,\n              name: \"employee-select\",\n              options: addSelectOptions,\n              onChange: handleChange,\n              placeholder: \"Select Employees to add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: addUser,\n              children: \"Add user\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              closeMenuOnSelect: false,\n              selectedOptionColorScheme: \"purple\",\n              isMulti: true,\n              name: \"employee-select\",\n              options: removeSelectOptions,\n              onChange: handleChange,\n              placeholder: \"Select Employees to remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: deleteUser,\n              children: \"Remove user\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DrawerFooter, {\n          children: /*#__PURE__*/_jsxDEV(HStack, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              colorScheme: \"red\",\n              onClick: leaveGroup,\n              children: \"Leave Group\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      flexDir: \"column\",\n      flexGrow: \"1\",\n      position: \"relative\",\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        p: \"0.5em\",\n        justify: \"center\",\n        bg: \"#535357\",\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          color: \"whiteAlpha.900\",\n          pl: \"0.5em\",\n          children: groupInfo[0].Name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          size: \"lg\",\n          ml: \"auto\",\n          mr: \"0\",\n          color: \"whiteAlpha.700\",\n          bg: \"\",\n          \"aria-label\": \"Data Analytics\",\n          icon: /*#__PURE__*/_jsxDEV(SettingsIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 123\n          }, this),\n          onClick: onOpen,\n          _hover: {\n            color: 'white',\n            backgroundColor: '#F4442E'\n          },\n          _active: {\n            color: \"white\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"chatMessages\",\n        className: \"messages\",\n        children: messages.map(message => {\n          const userId = parseInt(sessionStorage.getItem('userId'));\n          const isCurrentUser = message.Sender === userId;\n          if (lastSender !== message.Sender) {\n            lastSender = message.Sender;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: isCurrentUser ? 'username user-username' : 'username',\n                children: message.Name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Popover, {\n                children: [/*#__PURE__*/_jsxDEV(PopoverTrigger, {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: isCurrentUser ? 'message user-message' : 'message other-message',\n                    children: message.Contents\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 346,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 345,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(PopoverContent, {\n                  children: [/*#__PURE__*/_jsxDEV(PopoverArrow, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 351,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(PopoverBody, {\n                    children: /*#__PURE__*/_jsxDEV(Stack, {\n                      children: [/*#__PURE__*/_jsxDEV(HStack, {\n                        children: [/*#__PURE__*/_jsxDEV(Input, {\n                          id: message.idMessages,\n                          defaultValue: message.Contents\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 355,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(Button, {\n                          colorScheme: \"orange\",\n                          onClick: () => editMessage(message.idMessages),\n                          children: \"Edit\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 356,\n                          columnNumber: 57\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 354,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(Button, {\n                        colorScheme: \"red\",\n                        onClick: () => deleteMessage(message.idMessages),\n                        children: \"Delete\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 360,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 353,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 352,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 350,\n                  columnNumber: 41\n                }, this)]\n              }, message.idMessages, true, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 33\n            }, this);\n          } else {\n            lastSender = message.Sender;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-wrapper\",\n              children: /*#__PURE__*/_jsxDEV(Popover, {\n                children: [/*#__PURE__*/_jsxDEV(PopoverTrigger, {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: isCurrentUser ? 'message user-message' : 'message other-message',\n                    children: message.Contents\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 375,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 374,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(PopoverContent, {\n                  children: [/*#__PURE__*/_jsxDEV(PopoverArrow, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 380,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(PopoverBody, {\n                    children: /*#__PURE__*/_jsxDEV(Stack, {\n                      children: [/*#__PURE__*/_jsxDEV(HStack, {\n                        children: [/*#__PURE__*/_jsxDEV(Input, {\n                          id: message.idMessages,\n                          defaultValue: message.Contents\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 384,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(Button, {\n                          colorScheme: \"orange\",\n                          onClick: () => editMessage(message.idMessages),\n                          children: \"Edit\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 385,\n                          columnNumber: 57\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 383,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(Button, {\n                        colorScheme: \"red\",\n                        onClick: () => deleteMessage(message.idMessages),\n                        children: \"Delete\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 389,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 382,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 381,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 379,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 37\n              }, this)\n            }, message.idMessages, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 33\n            }, this);\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n        w: \"100%\",\n        pb: \"1em\",\n        px: \"1em\",\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          pr: \"4.5rem\",\n          type: \"text\",\n          placeholder: \"Type your message\",\n          id: \"message\",\n          onKeyDown: send\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(ChatView, \"kSbW6aTPfiENZWz+LwKg8YUojjQ=\", false, function () {\n  return [useParams, useDisclosure];\n});\n_c = ChatView;\nexport default ChatView;\nvar _c;\n$RefreshReg$(_c, \"ChatView\");","map":{"version":3,"names":["React","useEffect","useState","HStack","Button","Flex","Heading","Input","InputGroup","InputRightElement","useDisclosure","Stack","IconButton","Drawer","DrawerBody","DrawerFooter","DrawerHeader","DrawerOverlay","DrawerContent","DrawerCloseButton","Popover","PopoverTrigger","PopoverContent","PopoverArrow","PopoverBody","Select","SettingsIcon","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatView","_s","id","lastSender","isOpen","onOpen","onClose","sent","setSent","groupInfo","setGroup","messages","setMessages","addSelectOptions","setAddEmployees","selectedAdd","setAddSelected","removeSelectOptions","setRemoveEmployees","selectedRemove","setRemoveSelected","containsObject","obj","list","i","length","idUser","fetchGroupInfo","fetch","json","data","error","console","fetchAllUsers","allUsers","groupUsers","emps","forEach","item","push","value","label","email","fetchMessages","response","fetchGroupUsers","parseInt","sessionStorage","getItem","send","e","keyCode","preventDefault","userId","messageText","document","getElementById","trim","messageData","Contents","Group_idGroup","Sender","method","headers","body","JSON","stringify","focus","deleteMessage","editMessage","updateChat","name","Name","handleAddChange","selectedOptions","handleRemoveChange","addUser","participantIds","Promise","all","map","newId","groupId","ok","text","deleteUser","leaveGroup","children","placement","fileName","_jsxFileName","lineNumber","columnNumber","size","pr","type","defaultValue","width","onClick","h","closeMenuOnSelect","selectedOptionColorScheme","isMulti","options","onChange","handleChange","placeholder","colorScheme","flexDir","flexGrow","position","p","justify","bg","color","pl","ml","mr","icon","_hover","backgroundColor","_active","className","message","isCurrentUser","idMessages","w","pb","px","onKeyDown","_c","$RefreshReg$"],"sources":["D:/Documents/GitHub/TeamProject_Part3/client/src/Components/ChatView.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { HStack, Button, Flex, Heading, Input, InputGroup, InputRightElement, useDisclosure, Stack, IconButton } from '@chakra-ui/react'\r\nimport { Drawer, DrawerBody, DrawerFooter, DrawerHeader, DrawerOverlay, DrawerContent, DrawerCloseButton } from '@chakra-ui/react'\r\nimport { Popover, PopoverTrigger, PopoverContent, PopoverArrow, PopoverBody } from '@chakra-ui/react'\r\nimport { Select } from 'chakra-react-select'\r\nimport { SettingsIcon } from '@chakra-ui/icons';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nfunction ChatView() {\r\n    const { id } = useParams();\r\n    let lastSender = '';\r\n    const { isOpen, onOpen, onClose } = useDisclosure()\r\n    const [sent, setSent] = useState();\r\n    const [groupInfo, setGroup] = useState([{}])\r\n    const [messages, setMessages] = useState([])\r\n    const [addSelectOptions, setAddEmployees] = useState([{}]);\r\n    const [selectedAdd, setAddSelected] = useState([{}]);\r\n    const [removeSelectOptions, setRemoveEmployees] = useState([{}])\r\n    const [selectedRemove, setRemoveSelected] = useState([{}])\r\n\r\n    function containsObject(obj, list) {\r\n        var i;\r\n        for (i = 0; i < list.length; i++) {\r\n            if (list[i].idUser === obj.idUser) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    async function fetchGroupInfo() {\r\n        try {\r\n            const groupInfo = await (await fetch(`/textChat/groups/${id}`)).json();\r\n            setGroup(groupInfo.data)\r\n        } catch (error) {\r\n            console.error('Error fetching group info:', error)\r\n        }\r\n    }\r\n\r\n    async function fetchAllUsers() {\r\n        try {\r\n            const allUsers = await (await fetch('/textChat/users')).json();\r\n            const groupUsers = await (await fetch(`/textChat/groups/${id}/users`)).json();\r\n            const emps = [];\r\n            allUsers.data.forEach((item) => {\r\n                if (!containsObject(item, groupUsers.data)) {\r\n                    emps.push({\r\n                        value: item.idUser,\r\n                        label: item.email\r\n                    })\r\n                }\r\n            })\r\n            setAddEmployees(emps);\r\n\r\n        } catch (error) {\r\n            console.error('Error fetching users:', error);\r\n        }\r\n    }\r\n\r\n    async function fetchMessages() {\r\n        try {\r\n            const response = await fetch(`/textChat/groups/${id}/messages`);\r\n            const messages = await response.json();\r\n            setMessages(messages.data)\r\n        } catch (error) {\r\n            console.error('There was an error fetching messages:', error)\r\n        }\r\n\r\n    }\r\n\r\n    async function fetchGroupUsers() {\r\n        try {\r\n            const response = await fetch(`/textChat/groups/${id}/users`);\r\n            const data = await response.json();\r\n            const emps = [];\r\n            data.data.forEach((item) => {\r\n                if (parseInt(sessionStorage.getItem('userId')) !== item.idUser) {\r\n                    emps.push({\r\n                        value: item.idUser,\r\n                        label: item.email\r\n                    })\r\n                }\r\n            })\r\n            setRemoveEmployees(emps);\r\n\r\n        } catch (error) {\r\n            console.error('Error fetching users:', error);\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        fetchGroupInfo();\r\n        fetchGroupUsers();\r\n        fetchAllUsers();\r\n        fetchMessages();\r\n    }, [id])\r\n\r\n    useEffect(() => {\r\n        fetchGroupInfo();\r\n        fetchMessages();\r\n    }, [sent])\r\n\r\n    const send = async (e) => {\r\n        if (e.keyCode === 13) {\r\n            e.preventDefault();\r\n            const userId = parseInt(sessionStorage.getItem('userId'));\r\n            const messageText = document.getElementById('message').value;\r\n\r\n            // Only send if message is not empty\r\n            if (messageText.trim() !== '') {\r\n\r\n                const messageData = {\r\n                    Contents: messageText,\r\n                    Group_idGroup: id,\r\n                    Sender: userId,\r\n                };\r\n\r\n\r\n                await fetch('/textChat/messages', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify(messageData),\r\n                });\r\n\r\n                document.getElementById('message').value = '';\r\n                document.getElementById('message').focus();\r\n                setSent(!sent);\r\n            }\r\n        }\r\n    }\r\n\r\n    const deleteMessage = async (id) => {\r\n        try {\r\n            await fetch(`/textChat/messages/${id}`, {\r\n                method: 'DELETE'\r\n            })\r\n            setSent(!sent)\r\n        } catch (error) {\r\n            console.error('There was an error deleting the message:', error)\r\n        }\r\n    }\r\n\r\n    const editMessage = async (id) => {\r\n        try {\r\n            const messageText = document.getElementById(id).value\r\n            if (messageText.trim() !== '') {\r\n                const messageData = {\r\n                    Contents: messageText\r\n                }\r\n\r\n                await fetch(`/textChat/messages/${id}`, {\r\n                    method: 'PUT',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify(messageData)\r\n                })\r\n                setSent(!sent)\r\n            }\r\n\r\n        } catch (error) {\r\n            console.error('There was an error updating your message', error)\r\n        }\r\n    }\r\n\r\n    const updateChat = async (e) => {\r\n        e.preventDefault();\r\n        const name = document.getElementById('nameInput').value;\r\n        try {\r\n            if (name.trim() !== '') {\r\n\r\n                const messageData = {\r\n                    Name: name\r\n                };\r\n\r\n\r\n                await fetch(`/textChat/groups/${id}`, {\r\n                    method: 'PUT',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify(messageData),\r\n                });\r\n                setSent(!sent);\r\n            }\r\n        } catch (error) {\r\n            console.error('There was an error updating the chat name', error)\r\n        }\r\n    }\r\n\r\n    const handleAddChange = (selectedOptions) => {\r\n        setAddSelected(selectedOptions);\r\n    }\r\n\r\n    const handleRemoveChange = (selectedOptions) => {\r\n        setRemoveSelected(selectedOptions)\r\n    }\r\n\r\n    const addUser = async (e) => {\r\n        e.preventDefault();\r\n        let participantIds = []\r\n        selectedAdd.forEach((item) => {\r\n            participantIds.push(item.value)\r\n        })\r\n        try {\r\n            await Promise.all(participantIds.map(async (newId) => {\r\n                const response = await fetch('/textChat/membership', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify({ userId: parseInt(newId), groupId: parseInt(id) })\r\n                });\r\n\r\n                if (!response.ok) {\r\n                    console.error('Error while creating membership:', await response.text());\r\n                }\r\n            }));\r\n        } catch (error) {\r\n            console.error('Error while creating membership:', error);\r\n        }\r\n    }\r\n\r\n    const deleteUser = async (e) => {\r\n        e.preventDefault();\r\n        let participantIds = []\r\n        selectedRemove.forEach((item) => {\r\n            participantIds.push(item.value)\r\n        })\r\n        try {\r\n            await Promise.all(participantIds.map(async (newId) => {\r\n                const response = await fetch('/textChat/membership', {\r\n                    method: 'DELETE',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify({ userId: parseInt(newId), groupId: parseInt(id) })\r\n                });\r\n\r\n                if (!response.ok) {\r\n                    console.error('Error while creating membership:', await response.text());\r\n                }\r\n            }));\r\n        } catch (error) {\r\n            console.error('Error while creating membership:', error);\r\n        }\r\n    }\r\n\r\n    const leaveGroup = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await fetch('/textChat/membership', {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ userId: parseInt(sessionStorage.getItem('userId')), groupId: parseInt(id) })\r\n            });\r\n\r\n            if (!response.ok) {\r\n                console.error('Error while creating membership:', await response.text());\r\n            }\r\n\r\n        } catch (error) {\r\n            console.error('Error while creating membership:', error);\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Drawer isOpen={isOpen} onClose={onClose} placement='right'>\r\n                <DrawerOverlay />\r\n                <DrawerContent>\r\n                    <DrawerHeader>\r\n                        <Heading>Settings</Heading>\r\n                    </DrawerHeader>\r\n                    <DrawerCloseButton />\r\n                    <DrawerBody>\r\n                        <Stack>\r\n\r\n                            <InputGroup size='md'>\r\n                                <Input pr='5em' type='text' id='nameInput' defaultValue={groupInfo[0].Name} />\r\n                                <InputRightElement width='4.5rem' pr='0.5em'>\r\n                                    <Button onClick={updateChat} h='1.75rem' size='sm'>\r\n                                        Rename\r\n                                    </Button>\r\n                                </InputRightElement>\r\n                            </InputGroup>\r\n\r\n                            <Select\r\n                                closeMenuOnSelect={false}\r\n                                selectedOptionColorScheme=\"purple\"\r\n                                isMulti\r\n                                name=\"employee-select\"\r\n                                options={addSelectOptions}\r\n                                onChange={handleChange}\r\n                                placeholder='Select Employees to add' />\r\n                            <Button onClick={addUser}>\r\n                                Add user\r\n                            </Button>\r\n                            <Select\r\n                                closeMenuOnSelect={false}\r\n                                selectedOptionColorScheme=\"purple\"\r\n                                isMulti\r\n                                name=\"employee-select\"\r\n                                options={removeSelectOptions}\r\n                                onChange={handleChange}\r\n                                placeholder='Select Employees to remove' />\r\n                            <Button onClick={deleteUser}>\r\n                                Remove user\r\n                            </Button>\r\n                        </Stack>\r\n                    </DrawerBody>\r\n\r\n                    <DrawerFooter>\r\n                        <HStack>\r\n                            <Button colorScheme='red' onClick={leaveGroup}>\r\n                                Leave Group\r\n                            </Button>\r\n                        </HStack>\r\n                    </DrawerFooter>\r\n                </DrawerContent>\r\n            </Drawer>\r\n            <Flex flexDir='column' flexGrow='1' position='relative'>\r\n                <Flex p='0.5em' justify='center' bg='#535357'>\r\n                    <Heading color='whiteAlpha.900' pl='0.5em'>{groupInfo[0].Name}</Heading>\r\n                    <IconButton size='lg' ml='auto' mr='0' color='whiteAlpha.700' bg='' aria-label='Data Analytics' icon={<SettingsIcon />} onClick={onOpen} _hover={{ color: 'white', backgroundColor: '#F4442E' }} _active={{ color: \"white\" }} />\r\n                </Flex>\r\n                <div id='chatMessages' className='messages'>\r\n                    {messages.map((message) => {\r\n                        const userId = parseInt(sessionStorage.getItem('userId'));\r\n                        const isCurrentUser = message.Sender === userId;\r\n                        if (lastSender !== message.Sender) {\r\n                            lastSender = message.Sender;\r\n                            return (\r\n                                <div className='message-wrapper'>\r\n                                    <div className={isCurrentUser ? 'username user-username' : 'username'}>\r\n                                        {message.Name}\r\n                                    </div>\r\n                                    <Popover key={message.idMessages}>\r\n                                        <PopoverTrigger>\r\n                                            <div className={isCurrentUser ? 'message user-message' : 'message other-message'}>\r\n                                                {message.Contents}\r\n                                            </div>\r\n                                        </PopoverTrigger>\r\n                                        <PopoverContent>\r\n                                            <PopoverArrow />\r\n                                            <PopoverBody>\r\n                                                <Stack>\r\n                                                    <HStack>\r\n                                                        <Input id={message.idMessages} defaultValue={message.Contents} />\r\n                                                        <Button colorScheme='orange' onClick={() => editMessage(message.idMessages)}>\r\n                                                            Edit\r\n                                                        </Button>\r\n                                                    </HStack>\r\n                                                    <Button colorScheme='red' onClick={() => deleteMessage(message.idMessages)}>\r\n                                                        Delete\r\n                                                    </Button>\r\n                                                </Stack>\r\n                                            </PopoverBody>\r\n                                        </PopoverContent>\r\n                                    </Popover>\r\n                                </div>\r\n                            )\r\n                        } else {\r\n                            lastSender = message.Sender;\r\n                            return (\r\n                                <div key={message.idMessages} className='message-wrapper'>\r\n                                    <Popover>\r\n                                        <PopoverTrigger>\r\n                                            <div className={isCurrentUser ? 'message user-message' : 'message other-message'}>\r\n                                                {message.Contents}\r\n                                            </div>\r\n                                        </PopoverTrigger>\r\n                                        <PopoverContent>\r\n                                            <PopoverArrow />\r\n                                            <PopoverBody>\r\n                                                <Stack>\r\n                                                    <HStack>\r\n                                                        <Input id={message.idMessages} defaultValue={message.Contents} />\r\n                                                        <Button colorScheme='orange' onClick={() => editMessage(message.idMessages)}>\r\n                                                            Edit\r\n                                                        </Button>\r\n                                                    </HStack>\r\n                                                    <Button colorScheme='red' onClick={() => deleteMessage(message.idMessages)}>\r\n                                                        Delete\r\n                                                    </Button>\r\n                                                </Stack>\r\n                                            </PopoverBody>\r\n                                        </PopoverContent>\r\n                                    </Popover>\r\n                                </div>\r\n                            )\r\n                        }\r\n\r\n                    })}\r\n                </div>\r\n                <InputGroup\r\n                    w='100%'\r\n                    pb='1em'\r\n                    px='1em'>\r\n                    <Input\r\n                        pr='4.5rem'\r\n                        type='text'\r\n                        placeholder='Type your message'\r\n                        id='message'\r\n                        onKeyDown={send} />\r\n                </InputGroup>\r\n            </Flex>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ChatView;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}