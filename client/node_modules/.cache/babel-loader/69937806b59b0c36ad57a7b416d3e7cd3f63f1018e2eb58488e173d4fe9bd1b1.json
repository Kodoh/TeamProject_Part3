{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\GitHub\\\\TeamProject_Part3\\\\client\\\\src\\\\Components\\\\ProgressBar.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Heading, Progress, Button } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProgressBar(_ref) {\n  _s();\n  let {\n    projectData\n  } = _ref;\n  const [startIndex, setStartIndex] = useState(0);\n  const itemsPerPage = 5;\n  useEffect(() => {\n    if (projectData.length > 0) {\n      setStartIndex(0); // reset the start index when projectData changes\n    }\n  }, [projectData]);\n  const handleClickNext = () => {\n    setStartIndex(start);\n    const nextIndex = startIndex + itemsPerPage;\n    setStartIndex(nextIndex);\n  };\n  const handleClickPrevious = () => {\n    const previousIndex = startIndex - itemsPerPage;\n    setStartIndex(previousIndex);\n  };\n  const renderProgressBars = () => {\n    const visibleProgressBars = projectData.slice(startIndex, startIndex + itemsPerPage);\n    const remainingBars = itemsPerPage - visibleProgressBars.length;\n    const progressBars = visibleProgressBars.map((project, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"temp\",\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        size: \"md\",\n        children: project.project_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Progress, {\n        hasStripe: true,\n        value: project.hoursCompleted / project.totalManHours\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this));\n    for (let i = 0; i < remainingBars; i++) {\n      progressBars.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"temp\",\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          size: \"md\",\n          children: \"\\xA0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Progress, {\n          colorScheme: \"gray\",\n          value: 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, `remaining-${i}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this));\n    }\n    return progressBars;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outer progress\",\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      size: \"lg\",\n      children: \"Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inner progress\",\n      children: renderProgressBars()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), startIndex > 0 && /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleClickPrevious,\n      children: \"Previous\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this), startIndex + itemsPerPage < projectData.length && /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleClickNext,\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n_s(ProgressBar, \"xONUAB7K55wruasu3W4M4x13F+I=\");\n_c = ProgressBar;\nexport default ProgressBar;\nvar _c;\n$RefreshReg$(_c, \"ProgressBar\");","map":{"version":3,"names":["React","useEffect","useState","Heading","Progress","Button","jsxDEV","_jsxDEV","ProgressBar","_ref","_s","projectData","startIndex","setStartIndex","itemsPerPage","length","handleClickNext","start","nextIndex","handleClickPrevious","previousIndex","renderProgressBars","visibleProgressBars","slice","remainingBars","progressBars","map","project","index","className","children","size","project_name","fileName","_jsxFileName","lineNumber","columnNumber","hasStripe","value","hoursCompleted","totalManHours","i","push","colorScheme","onClick","_c","$RefreshReg$"],"sources":["D:/Documents/GitHub/TeamProject_Part3/client/src/Components/ProgressBar.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Heading, Progress, Button } from '@chakra-ui/react';\r\n\r\nfunction ProgressBar({ projectData }) {\r\n    const [startIndex, setStartIndex] = useState(0);\r\n    const itemsPerPage = 5;\r\n\r\n    useEffect(() => {\r\n        if (projectData.length > 0) {\r\n            setStartIndex(0);  // reset the start index when projectData changes\r\n        }\r\n    }, [projectData]);\r\n\r\n    const handleClickNext = () => {\r\n        setStartIndex(start)\r\n        const nextIndex = startIndex + itemsPerPage;\r\n        setStartIndex(nextIndex);\r\n    };\r\n\r\n    const handleClickPrevious = () => {\r\n        const previousIndex = startIndex - itemsPerPage;\r\n        setStartIndex(previousIndex);\r\n    };\r\n\r\n    const renderProgressBars = () => {\r\n        const visibleProgressBars = projectData.slice(startIndex, startIndex + itemsPerPage);\r\n        const remainingBars = itemsPerPage - visibleProgressBars.length;\r\n\r\n        const progressBars = visibleProgressBars.map((project, index) => (\r\n            <div key={index} className='temp'>\r\n                <Heading size='md'>{project.project_name}</Heading>\r\n                <Progress hasStripe value={project.hoursCompleted / project.totalManHours} />\r\n            </div>\r\n        ));\r\n\r\n        for (let i = 0; i < remainingBars; i++) {\r\n            progressBars.push(\r\n                <div key={`remaining-${i}`} className='temp'>\r\n                    <Heading size='md'>&nbsp;</Heading>\r\n                    <Progress colorScheme='gray' value={0} />\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return progressBars;\r\n    };\r\n\r\n    return (\r\n        <div className='outer progress'>\r\n            <Heading size='lg'>Projects</Heading>\r\n            <div className='inner progress'>\r\n                {renderProgressBars()}\r\n            </div>\r\n            {startIndex > 0 && (\r\n                <Button onClick={handleClickPrevious}>\r\n                    Previous\r\n                </Button>\r\n            )}\r\n            {startIndex + itemsPerPage < projectData.length && (\r\n                <Button onClick={handleClickNext}>\r\n                    Next\r\n                </Button>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProgressBar;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}