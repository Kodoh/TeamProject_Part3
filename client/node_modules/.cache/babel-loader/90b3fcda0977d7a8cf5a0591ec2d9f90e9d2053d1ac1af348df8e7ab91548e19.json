{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\GitHub\\\\TeamProject_Part3\\\\client\\\\src\\\\Components\\\\ProgressBar.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Heading, Progress, Button, Flex, Text } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProgressBar(_ref) {\n  _s();\n  let {\n    projectData\n  } = _ref;\n  const [startIndex, setStartIndex] = useState(0);\n  const itemsPerPage = 5;\n  useEffect(() => {\n    if (projectData.length > 0) {\n      setStartIndex(0); // reset the start index when projectData changes\n    }\n  }, [projectData]);\n  const handleClickNext = () => {\n    setStartIndex(currStartIndex => {\n      return currStartIndex + itemsPerPage;\n    });\n  };\n  const handleClickPrevious = () => {\n    setStartIndex(currStartIndex => {\n      return currStartIndex - itemsPerPage;\n    });\n  };\n  const renderProgressBars = () => {\n    const visibleProgressBars = projectData.slice(startIndex, startIndex + itemsPerPage);\n    const remainingBars = itemsPerPage - visibleProgressBars.length;\n    const progressBars = visibleProgressBars.map((project, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"temp\",\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        size: \"md\",\n        children: project.project_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        flexDir: \"column\",\n        gap: \"0.5em\",\n        children: [/*#__PURE__*/_jsxDEV(Flex, {\n          justify: \"space-between\",\n          align: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            size: \"sm\",\n            children: new Date(project.start_date).toLocaleDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            size: \"sm\",\n            children: new Date(project.end_date).toLocaleDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Progress, {\n          rounded: \"md\",\n          value: project.Progress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this));\n    for (let i = 0; i < remainingBars; i++) {\n      progressBars.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"temp\",\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          size: \"md\",\n          children: \"\\xA0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Progress, {\n          colorScheme: \"gray\",\n          value: 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, `remaining-${i}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this));\n    }\n    return progressBars;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outer progress\",\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      size: \"lg\",\n      children: \"Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inner progress\",\n      children: renderProgressBars()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), startIndex > 0 && /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleClickPrevious,\n      children: \"Previous\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this), startIndex + itemsPerPage < projectData.length && /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleClickNext,\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n_s(ProgressBar, \"xONUAB7K55wruasu3W4M4x13F+I=\");\n_c = ProgressBar;\nexport default ProgressBar;\nvar _c;\n$RefreshReg$(_c, \"ProgressBar\");","map":{"version":3,"names":["React","useEffect","useState","Heading","Progress","Button","Flex","Text","jsxDEV","_jsxDEV","ProgressBar","_ref","_s","projectData","startIndex","setStartIndex","itemsPerPage","length","handleClickNext","currStartIndex","handleClickPrevious","renderProgressBars","visibleProgressBars","slice","remainingBars","progressBars","map","project","index","className","children","size","project_name","fileName","_jsxFileName","lineNumber","columnNumber","flexDir","gap","justify","align","Date","start_date","toLocaleDateString","end_date","rounded","value","i","push","colorScheme","onClick","_c","$RefreshReg$"],"sources":["D:/Documents/GitHub/TeamProject_Part3/client/src/Components/ProgressBar.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Heading, Progress, Button, Flex, Text } from '@chakra-ui/react';\r\n\r\nfunction ProgressBar({ projectData }) {\r\n    const [startIndex, setStartIndex] = useState(0);\r\n    const itemsPerPage = 5;\r\n\r\n    useEffect(() => {\r\n        if (projectData.length > 0) {\r\n            setStartIndex(0);  // reset the start index when projectData changes\r\n        }\r\n    }, [projectData]);\r\n\r\n    const handleClickNext = () => {\r\n        setStartIndex(currStartIndex => {\r\n            return currStartIndex + itemsPerPage\r\n        })\r\n    };\r\n\r\n    const handleClickPrevious = () => {\r\n        setStartIndex(currStartIndex => {\r\n            return currStartIndex - itemsPerPage\r\n        })\r\n    };\r\n\r\n    const renderProgressBars = () => {\r\n        const visibleProgressBars = projectData.slice(startIndex, startIndex + itemsPerPage);\r\n        const remainingBars = itemsPerPage - visibleProgressBars.length;\r\n\r\n        const progressBars = visibleProgressBars.map((project, index) => (\r\n            <div key={index} className='temp'>\r\n                <Heading size='md'>{project.project_name}</Heading>\r\n                <Flex flexDir='column' gap='0.5em'>\r\n                    <Flex justify='space-between' align='center'>\r\n                        <Text size='sm'>{new Date(project.start_date).toLocaleDateString()}</Text>\r\n                        <Text size='sm'>{new Date(project.end_date).toLocaleDateString()}</Text>\r\n                    </Flex>\r\n                    <Progress rounded='md' value={project.Progress} />\r\n                </Flex>\r\n            </div>\r\n        ));\r\n\r\n        for (let i = 0; i < remainingBars; i++) {\r\n            progressBars.push(\r\n                <div key={`remaining-${i}`} className='temp'>\r\n                    <Heading size='md'>&nbsp;</Heading>\r\n                    <Progress colorScheme='gray' value={0} />\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return progressBars;\r\n    };\r\n\r\n    return (\r\n        <div className='outer progress'>\r\n            <Heading size='lg'>Projects</Heading>\r\n            <div className='inner progress'>\r\n                {renderProgressBars()}\r\n            </div>\r\n            {startIndex > 0 && (\r\n                <Button onClick={handleClickPrevious}>\r\n                    Previous\r\n                </Button>\r\n            )}\r\n            {startIndex + itemsPerPage < projectData.length && (\r\n                <Button onClick={handleClickNext}>\r\n                    Next\r\n                </Button>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProgressBar;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}