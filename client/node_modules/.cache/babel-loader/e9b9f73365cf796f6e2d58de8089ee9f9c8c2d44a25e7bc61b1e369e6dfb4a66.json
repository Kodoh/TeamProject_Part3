{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aidan\\\\Desktop\\\\tempLogin\\\\client\\\\src\\\\ChatWindow.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Flex, Heading, List, ListItem, LinkBox, LinkOverlay, Divider } from '@chakra-ui/react';\nimport './ChatWindow.css';\nimport ChatView from './Components/ChatView';\nimport Nav from './Components/Nav';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ChatWindow() {\n  _s();\n  const [groups, setGroups] = useState([{}]);\n  async function fetchGroups() {\n    try {\n      const groups = await fetch(`/users/${sessionStorage.getItem('userId')}/groups`);\n      const groupsData = await groups.json();\n      const privateChats = await fetch(`/users/${sessionStorage.getItem('userId')}/private`);\n      const privateData = await privateChats.json();\n      setGroups(groupsData.data.concat(privateData.data));\n      console.log(groupsData.data.concat(privateData.data));\n    } catch (error) {\n      console.error('Error fetching groups:', error);\n    }\n  }\n  useEffect(() => {\n    fetchGroups();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      flexDir: \"column\",\n      bg: \"teal.500\",\n      flexGrow: \"0.1\",\n      children: /*#__PURE__*/_jsxDEV(List, {\n        children: groups.map(item => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(ListItem, {\n            children: /*#__PURE__*/_jsxDEV(LinkBox, {\n              as: \"article\",\n              p: \"3\",\n              _hover: {\n                color: \"white.500\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Heading, {\n                size: \"md\",\n                children: /*#__PURE__*/_jsxDEV(LinkOverlay, {\n                  href: item.idGroup,\n                  children: item.Name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 45,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 33\n            }, this)\n          }, item, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ChatView, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_s(ChatWindow, \"nt2aclD+4sBPqulQmie2UhsflRY=\");\n_c = ChatWindow;\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["React","useEffect","useState","Flex","Heading","List","ListItem","LinkBox","LinkOverlay","Divider","ChatView","Nav","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatWindow","_s","groups","setGroups","fetchGroups","fetch","sessionStorage","getItem","groupsData","json","privateChats","privateData","data","concat","console","log","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","flexDir","bg","flexGrow","map","item","as","p","_hover","color","size","href","idGroup","Name","_c","$RefreshReg$"],"sources":["C:/Users/aidan/Desktop/tempLogin/client/src/ChatWindow.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Flex, Heading, List, ListItem, LinkBox, LinkOverlay, Divider } from '@chakra-ui/react'\r\nimport './ChatWindow.css'\r\nimport ChatView from './Components/ChatView'\r\nimport Nav from './Components/Nav'\r\n\r\n\r\n\r\nfunction ChatWindow() {\r\n    const [groups, setGroups] = useState([{}])\r\n\r\n\r\n    async function fetchGroups() {\r\n        try {\r\n            const groups = await fetch(`/users/${sessionStorage.getItem('userId')}/groups`);\r\n            const groupsData = await groups.json();\r\n\r\n            const privateChats = await fetch(`/users/${sessionStorage.getItem('userId')}/private`);\r\n            const privateData = await privateChats.json();\r\n\r\n            setGroups(groupsData.data.concat(privateData.data));\r\n            console.log(groupsData.data.concat(privateData.data))\r\n        } catch (error) {\r\n            console.error('Error fetching groups:', error);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchGroups();\r\n    }, [])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className='wrapper'>\r\n            <Nav />\r\n            <Flex flexDir='column' bg='teal.500' flexGrow='0.1'>\r\n                <List>\r\n                    {groups.map((item) => (\r\n                        <>\r\n                            <ListItem key={item} >\r\n                                <LinkBox as='article' p='3' _hover={{ color: \"white.500\" }}>\r\n                                    <Heading size='md'>\r\n                                        <LinkOverlay href={item.idGroup}>\r\n                                            {item.Name}\r\n                                        </LinkOverlay>\r\n                                    </Heading>\r\n                                </LinkBox>\r\n                            </ListItem>\r\n                            <Divider />\r\n                        </>\r\n                    ))}\r\n                </List>\r\n            </Flex>\r\n            <ChatView />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChatWindow;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}