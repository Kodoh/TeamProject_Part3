{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aidan\\\\Desktop\\\\tempLogin\\\\client\\\\src\\\\ChatWindow.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { HStack, Button, Flex, Heading, Input, InputGroup, InputRightElement, useDisclosure, Stack } from '@chakra-ui/react';\nimport { Modal, ModalOverlay, ModalContent, ModalHeader, ModalFooter, ModalBody, ModalCloseButton } from '@chakra-ui/react';\nimport { Select } from 'chakra-react-select';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport './ChatWindow.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatWindow() {\n  _s();\n  const [messages, setMessages] = useState([{}]);\n  const [users, setUsers] = useState([{}]);\n  const [addSelectOptions, setAddEmployees] = useState([{}]);\n  const [selectedAdd, setAddSelected] = useState([{}]);\n  const [removeSelectOptions, setRemoveEmployees] = useState([{}]);\n  const [selectedRemove, setRemoveSelected] = useState([{}]);\n  let lastSender = '';\n  const {\n    id\n  } = useParams();\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  async function fetchAllUsers() {\n    try {\n      const allUsers = (await fetch('/users')).json(); // Use the full URL here\n      const groupUsers = (await fetch('/groups/')).json();\n      const emps = [];\n      allUsers.data.forEach(item => {\n        if (!groupUsers.includes(item)) {\n          emps.push({\n            value: item.idUser,\n            label: item.email\n          });\n        }\n      });\n      setAddEmployees(emps);\n    } catch (error) {\n      console.error('Error fetching users:', error);\n    }\n  }\n  async function fetchMessages() {\n    const response = await fetch(`/groups/${id}/messages`);\n    const messages = await response.json();\n    setMessages(messages.data);\n  }\n  async function fetchGroupUsers() {\n    try {\n      const response = await fetch(`/groups/${id}/users`);\n      const data = await response.json();\n      setUsers(data.data);\n      const emps = [];\n      data.data.forEach(item => {\n        if (parseInt(sessionStorage.getItem('userId')) !== item.idUser) {\n          emps.push({\n            value: item.idUser,\n            label: item.email\n          });\n        }\n      });\n      setRemoveEmployees(emps);\n    } catch (error) {\n      console.error('Error fetching users:', error);\n    }\n  }\n  useEffect(() => {\n    fetchGroupUsers();\n    fetchAllUsers();\n    fetchMessages();\n  }, []);\n\n  // Navigation onClick functions\n\n  let navigate = useNavigate();\n  const redirectDataAnalytics = () => {\n    return navigate(\"/data-analytics\");\n  };\n  const redirectTextChat = () => {\n    return navigate(\"/text-chat\");\n  };\n  const send = async e => {\n    e.preventDefault();\n    const userId = parseInt(sessionStorage.getItem('userId'));\n    const messageText = document.getElementById('message').value;\n\n    // Only send if message is not empty\n    if (messageText.trim() !== '') {\n      const messageData = {\n        Contents: messageText,\n        Group_idGroup: id,\n        Sender: userId\n      };\n      await fetch('/messages', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(messageData)\n      });\n      document.getElementById('message').focus();\n      fetchMessages();\n    }\n  };\n  const handleChange = selectedOptions => {\n    setAddSelected(selectedOptions);\n  };\n  const addUser = async e => {\n    e.preventDefault();\n    let participantIds = [];\n    selectedAdd.forEach(item => {\n      participantIds.push(item.value);\n    });\n    try {\n      await Promise.all(participantIds.map(async newId => {\n        const response = await fetch('/membership', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            userId: parseInt(newId),\n            groupId: parseInt(id)\n          })\n        });\n        if (!response.ok) {\n          console.error('Error while creating membership:', await response.text());\n        }\n      }));\n    } catch (error) {\n      console.error('Error while creating membership:', error);\n    }\n  };\n  const deleteUser = async e => {\n    e.preventDefault();\n    let participantIds = [];\n    selectedRemove.forEach(item => {\n      participantIds.push(item.value);\n    });\n    try {\n      await Promise.all(participantIds.map(async newId => {\n        const response = await fetch('/membership', {\n          method: 'DELETE',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            userId: parseInt(newId),\n            groupId: parseInt(id)\n          })\n        });\n        if (!response.ok) {\n          console.error('Error while creating membership:', await response.text());\n        }\n      }));\n    } catch (error) {\n      console.error('Error while creating membership:', error);\n    }\n  };\n  const back = () => {\n    return navigate('/text-chat');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isOpen,\n      onClose: onClose,\n      children: [/*#__PURE__*/_jsxDEV(ModalOverlay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          children: \"Modal Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ModalCloseButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          children: /*#__PURE__*/_jsxDEV(Stack, {\n            children: [/*#__PURE__*/_jsxDEV(Heading, {\n              children: \"Settings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                placeholder: \"Rename chat\",\n                id: \"nameInput\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(InputRightElement, {\n                width: \"4.5rem\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: send,\n                  children: \"Rename\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              closeMenuOnSelect: false,\n              selectedOptionColorScheme: \"purple\",\n              isMulti: true,\n              name: \"employee-select\",\n              options: addSelectOptions,\n              onChange: handleChange,\n              placeholder: \"Select Employees to add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: addUser,\n              children: \"Add user\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              closeMenuOnSelect: false,\n              selectedOptionColorScheme: \"purple\",\n              isMulti: true,\n              name: \"employee-select\",\n              options: removeSelectOptions,\n              onChange: handleChange,\n              placeholder: \"Select Employees to remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: deleteUser,\n              children: \"Add user\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            colorScheme: \"blue\",\n            onClick: onClose,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(HStack, {\n        justify: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: redirectDataAnalytics,\n          children: \"Data Analytics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: redirectTextChat,\n          children: \"Text Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      flexDir: \"column\",\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        px: \"1em\",\n        justify: \"space-between\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: back,\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Heading, {\n          children: [\"Group Chat \", id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: onOpen,\n          children: \"Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"chatMessages\",\n        className: \"messages\",\n        children: messages.map(message => {\n          const userId = parseInt(sessionStorage.getItem('userId'));\n          const isCurrentUser = message.Sender === userId;\n          if (lastSender !== message.Sender) {\n            lastSender = message.Sender;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: isCurrentUser ? 'username user-username' : 'username',\n                children: message.Sender\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: isCurrentUser ? 'message user-message' : 'message',\n                children: message.Contents\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 37\n              }, this)]\n            }, message.idMessages, true, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 33\n            }, this);\n          } else {\n            lastSender = message.Sender;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-wrapper\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: isCurrentUser ? 'message user-message' : 'message',\n                children: message.Contents\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 37\n              }, this)\n            }, message.idMessages, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 33\n            }, this);\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n      size: \"md\",\n      position: \"absolute\",\n      bottom: \"0\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        pr: \"4.5rem\",\n        type: \"text\",\n        placeholder: \"Type your message\",\n        id: \"message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputRightElement, {\n        width: \"4.5rem\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          h: \"1.75rem\",\n          size: \"sm\",\n          onClick: send,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 9\n  }, this);\n}\n_s(ChatWindow, \"ElMir4lK+kxKrizuojXBv4oyi8k=\", false, function () {\n  return [useParams, useDisclosure, useNavigate];\n});\n_c = ChatWindow;\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["React","useEffect","useState","HStack","Button","Flex","Heading","Input","InputGroup","InputRightElement","useDisclosure","Stack","Modal","ModalOverlay","ModalContent","ModalHeader","ModalFooter","ModalBody","ModalCloseButton","Select","useNavigate","useParams","jsxDEV","_jsxDEV","ChatWindow","_s","messages","setMessages","users","setUsers","addSelectOptions","setAddEmployees","selectedAdd","setAddSelected","removeSelectOptions","setRemoveEmployees","selectedRemove","setRemoveSelected","lastSender","id","isOpen","onOpen","onClose","fetchAllUsers","allUsers","fetch","json","groupUsers","emps","data","forEach","item","includes","push","value","idUser","label","email","error","console","fetchMessages","response","fetchGroupUsers","parseInt","sessionStorage","getItem","navigate","redirectDataAnalytics","redirectTextChat","send","e","preventDefault","userId","messageText","document","getElementById","trim","messageData","Contents","Group_idGroup","Sender","method","headers","body","JSON","stringify","focus","handleChange","selectedOptions","addUser","participantIds","Promise","all","map","newId","groupId","ok","text","deleteUser","back","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","width","onClick","closeMenuOnSelect","selectedOptionColorScheme","isMulti","name","options","onChange","colorScheme","justify","flexDir","px","message","isCurrentUser","idMessages","size","position","bottom","pr","h","_c","$RefreshReg$"],"sources":["C:/Users/aidan/Desktop/tempLogin/client/src/ChatWindow.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { HStack, Button, Flex, Heading, Input, InputGroup, InputRightElement, useDisclosure, Stack } from '@chakra-ui/react'\r\nimport {\r\n    Modal,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalHeader,\r\n    ModalFooter,\r\n    ModalBody,\r\n    ModalCloseButton,\r\n} from '@chakra-ui/react'\r\nimport { Select } from 'chakra-react-select'\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport './ChatWindow.css'\r\n\r\n\r\n\r\nfunction ChatWindow() {\r\n    const [messages, setMessages] = useState([{}])\r\n    const [users, setUsers] = useState([{}])\r\n    const [addSelectOptions, setAddEmployees] = useState([{}]);\r\n    const [selectedAdd, setAddSelected] = useState([{}]);\r\n    const [removeSelectOptions, setRemoveEmployees] = useState([{}])\r\n    const [selectedRemove, setRemoveSelected] = useState([{}])\r\n\r\n\r\n    let lastSender = '';\r\n    const { id } = useParams();\r\n    const { isOpen, onOpen, onClose } = useDisclosure()\r\n\r\n\r\n    async function fetchAllUsers() {\r\n        try {\r\n            const allUsers = (await fetch('/users')).json(); // Use the full URL here\r\n            const groupUsers = (await fetch('/groups/')).json();\r\n\r\n\r\n            const emps = [];\r\n            allUsers.data.forEach((item) => {\r\n                if (!groupUsers.includes(item)) {\r\n                    emps.push({\r\n                        value: item.idUser,\r\n                        label: item.email\r\n                    })\r\n                }\r\n            })\r\n            setAddEmployees(emps);\r\n\r\n        } catch (error) {\r\n            console.error('Error fetching users:', error);\r\n        }\r\n    }\r\n\r\n    async function fetchMessages() {\r\n        const response = await fetch(`/groups/${id}/messages`);\r\n        const messages = await response.json();\r\n        setMessages(messages.data)\r\n    }\r\n\r\n    async function fetchGroupUsers() {\r\n        try {\r\n            const response = await fetch(`/groups/${id}/users`);\r\n            const data = await response.json();\r\n            setUsers(data.data)\r\n            const emps = [];\r\n            data.data.forEach((item) => {\r\n                if (parseInt(sessionStorage.getItem('userId')) !== item.idUser) {\r\n                    emps.push({\r\n                        value: item.idUser,\r\n                        label: item.email\r\n                    })\r\n                }\r\n            })\r\n            setRemoveEmployees(emps);\r\n\r\n        } catch (error) {\r\n            console.error('Error fetching users:', error);\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        fetchGroupUsers();\r\n        fetchAllUsers();\r\n        fetchMessages();\r\n    }, [])\r\n\r\n\r\n    // Navigation onClick functions\r\n\r\n    let navigate = useNavigate();\r\n\r\n    const redirectDataAnalytics = () => {\r\n        return navigate(\"/data-analytics\")\r\n    }\r\n\r\n    const redirectTextChat = () => {\r\n        return navigate(\"/text-chat\")\r\n    }\r\n\r\n\r\n    const send = async (e) => {\r\n        e.preventDefault();\r\n        const userId = parseInt(sessionStorage.getItem('userId'));\r\n        const messageText = document.getElementById('message').value;\r\n\r\n        // Only send if message is not empty\r\n        if (messageText.trim() !== '') {\r\n\r\n            const messageData = {\r\n                Contents: messageText,\r\n                Group_idGroup: id,\r\n                Sender: userId,\r\n            };\r\n\r\n\r\n            await fetch('/messages', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(messageData),\r\n            });\r\n\r\n\r\n            document.getElementById('message').focus();\r\n            fetchMessages();\r\n        }\r\n    }\r\n\r\n    const handleChange = (selectedOptions) => {\r\n        setAddSelected(selectedOptions);\r\n    }\r\n\r\n    const addUser = async (e) => {\r\n        e.preventDefault();\r\n        let participantIds = []\r\n        selectedAdd.forEach((item) => {\r\n            participantIds.push(item.value)\r\n        })\r\n        try {\r\n            await Promise.all(participantIds.map(async (newId) => {\r\n                const response = await fetch('/membership', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify({ userId: parseInt(newId), groupId: parseInt(id) })\r\n                });\r\n\r\n                if (!response.ok) {\r\n                    console.error('Error while creating membership:', await response.text());\r\n                }\r\n            }));\r\n        } catch (error) {\r\n            console.error('Error while creating membership:', error);\r\n        }\r\n    }\r\n\r\n    const deleteUser = async (e) => {\r\n        e.preventDefault();\r\n        let participantIds = []\r\n        selectedRemove.forEach((item) => {\r\n            participantIds.push(item.value)\r\n        })\r\n        try {\r\n            await Promise.all(participantIds.map(async (newId) => {\r\n                const response = await fetch('/membership', {\r\n                    method: 'DELETE',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify({ userId: parseInt(newId), groupId: parseInt(id) })\r\n                });\r\n\r\n                if (!response.ok) {\r\n                    console.error('Error while creating membership:', await response.text());\r\n                }\r\n            }));\r\n        } catch (error) {\r\n            console.error('Error while creating membership:', error);\r\n        }\r\n    }\r\n\r\n    const back = () => {\r\n        return navigate('/text-chat')\r\n    }\r\n\r\n    return (\r\n        <div className='wrapper'>\r\n            <Modal isOpen={isOpen} onClose={onClose}>\r\n                <ModalOverlay />\r\n                <ModalContent>\r\n                    <ModalHeader>Modal Title</ModalHeader>\r\n                    <ModalCloseButton />\r\n                    <ModalBody>\r\n                        <Stack>\r\n                            <Heading>Settings</Heading>\r\n                            <InputGroup>\r\n                                <Input\r\n                                    type='text'\r\n                                    placeholder='Rename chat'\r\n                                    id='nameInput' />\r\n                                <InputRightElement width='4.5rem'>\r\n                                    <Button onClick={send}>\r\n                                        Rename\r\n                                    </Button>\r\n                                </InputRightElement>\r\n                            </InputGroup>\r\n\r\n                            <Select\r\n                                closeMenuOnSelect={false}\r\n                                selectedOptionColorScheme=\"purple\"\r\n                                isMulti\r\n                                name=\"employee-select\"\r\n                                options={addSelectOptions}\r\n                                onChange={handleChange}\r\n                                placeholder='Select Employees to add' />\r\n                            <Button onClick={addUser}>\r\n                                Add user\r\n                            </Button>\r\n                            <Select\r\n                                closeMenuOnSelect={false}\r\n                                selectedOptionColorScheme=\"purple\"\r\n                                isMulti\r\n                                name=\"employee-select\"\r\n                                options={removeSelectOptions}\r\n                                onChange={handleChange}\r\n                                placeholder='Select Employees to remove' />\r\n                            <Button onClick={deleteUser}>\r\n                                Add user\r\n                            </Button>\r\n                        </Stack>\r\n                    </ModalBody>\r\n\r\n                    <ModalFooter>\r\n                        <Button colorScheme='blue' onClick={onClose}>\r\n                            Close\r\n                        </Button>\r\n                    </ModalFooter>\r\n                </ModalContent>\r\n            </Modal>\r\n            <header>\r\n                <HStack justify=\"center\">\r\n                    <Button onClick={redirectDataAnalytics}>Data Analytics</Button>\r\n                    <Button onClick={redirectTextChat}>Text Chat</Button>\r\n                </HStack>\r\n            </header>\r\n            <Flex flexDir='column'>\r\n                <Flex px='1em' justify='space-between'>\r\n                    <Button onClick={back}>Back</Button>\r\n                    <Heading>Group Chat {id}</Heading>\r\n                    <Button onClick={onOpen}>Settings</Button>\r\n                </Flex>\r\n                <div id='chatMessages' className='messages'>\r\n                    {messages.map((message) => {\r\n                        const userId = parseInt(sessionStorage.getItem('userId'));\r\n                        const isCurrentUser = message.Sender === userId;\r\n                        if (lastSender !== message.Sender) {\r\n                            lastSender = message.Sender;\r\n                            return (\r\n                                <div key={message.idMessages} className='message-wrapper'>\r\n                                    <div className={isCurrentUser ? 'username user-username' : 'username'}>\r\n                                        {message.Sender}\r\n                                    </div>\r\n                                    <div className={isCurrentUser ? 'message user-message' : 'message'}>\r\n                                        {message.Contents}\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        } else {\r\n                            lastSender = message.Sender;\r\n                            return (\r\n                                <div key={message.idMessages} className='message-wrapper'>\r\n                                    <div className={isCurrentUser ? 'message user-message' : 'message'}>\r\n                                        {message.Contents}\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n\r\n                    })}\r\n                </div>\r\n            </Flex>\r\n            <InputGroup\r\n                size='md'\r\n                position='absolute'\r\n                bottom='0'>\r\n                <Input\r\n                    pr='4.5rem'\r\n                    type='text'\r\n                    placeholder='Type your message'\r\n                    id='message' />\r\n                <InputRightElement width='4.5rem'>\r\n                    <Button h='1.75rem' size='sm' onClick={send}>\r\n                        Send\r\n                    </Button>\r\n                </InputRightElement>\r\n            </InputGroup>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChatWindow;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}