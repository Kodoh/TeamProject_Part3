{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\GitHub\\\\TeamProject_Part3\\\\client\\\\src\\\\Components\\\\TaskProgress.js\",\n  _s = $RefreshSig$();\nimport { Button, CircularProgress, CircularProgressLabel, Heading, Flex, Text } from '@chakra-ui/react';\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskProgress = _ref => {\n  _s();\n  let {\n    tasks\n  } = _ref;\n  const [taskIndex, setTaskIndex] = useState(0);\n  console.log(tasks);\n  const handleNextTask = () => {\n    setTaskIndex(currentIndex => {\n      return Math.min(currentIndex + 1, tasks.length);\n    });\n  };\n  const handlePreviousTask = () => {\n    setTaskIndex(currentIndex => {\n      return Math.max(currentIndex - 1, 0);\n    });\n  };\n  useEffect(() => {\n    console.log(\"Re rendering task progress compoenent\");\n  }, [taskIndex]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outer progressCircle\",\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      children: \"Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inner progressCircle\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Flex, {\n          justify: \"space-between\",\n          align: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Heading, {\n            size: \"md\",\n            children: tasks.length === 0 ? 'No tasks' : tasks[taskIndex].task_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            as: \"b\",\n            children: [taskIndex, \"/\", tasks.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"circle\",\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n          capIsRound: true,\n          color: \"red\",\n          size: \"200px\",\n          value: tasks.length === 0 ? 'NAN' : tasks[taskIndex].hoursCompleted / tasks[taskIndex].totalManHours,\n          children: /*#__PURE__*/_jsxDEV(CircularProgressLabel, {\n            children: tasks.length === 0 ? 'NAN' : (tasks[taskIndex].hoursCompleted / tasks[taskIndex].totalManHours).toFixed(2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), taskIndex > 1 && /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handlePreviousTask,\n        children: \"Previous Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 35\n      }, this), tasks.length - 1 > taskIndex && /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleNextTask,\n        children: \"Next Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 50\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskProgress, \"przpkiNor2XXYZlKA3PzQ20NpFQ=\");\n_c = TaskProgress;\nexport default TaskProgress;\nvar _c;\n$RefreshReg$(_c, \"TaskProgress\");","map":{"version":3,"names":["Button","CircularProgress","CircularProgressLabel","Heading","Flex","Text","React","useEffect","useState","jsxDEV","_jsxDEV","TaskProgress","_ref","_s","tasks","taskIndex","setTaskIndex","console","log","handleNextTask","currentIndex","Math","min","length","handlePreviousTask","max","className","children","fileName","_jsxFileName","lineNumber","columnNumber","justify","align","size","task_name","as","capIsRound","color","value","hoursCompleted","totalManHours","toFixed","onClick","_c","$RefreshReg$"],"sources":["D:/Documents/GitHub/TeamProject_Part3/client/src/Components/TaskProgress.js"],"sourcesContent":["import { Button, CircularProgress, CircularProgressLabel, Heading, Flex, Text } from '@chakra-ui/react';\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nconst TaskProgress = ({ tasks }) => {\r\n    const [taskIndex, setTaskIndex] = useState(0)\r\n    console.log(tasks)\r\n    const handleNextTask = () => {\r\n        setTaskIndex(currentIndex => {\r\n            return Math.min(currentIndex + 1, tasks.length)\r\n        })\r\n    };\r\n\r\n    const handlePreviousTask = () => {\r\n        setTaskIndex(currentIndex => {\r\n            return Math.max(currentIndex - 1, 0)\r\n        })\r\n    };\r\n\r\n    useEffect(() => {\r\n        console.log(\"Re rendering task progress compoenent\");\r\n    }, [taskIndex])\r\n\r\n    return (\r\n        <div className=\"outer progressCircle\">\r\n            <Heading>Task</Heading>\r\n            <div className=\"inner progressCircle\">\r\n                <div>\r\n                    <Flex justify='space-between' align='center'>\r\n                        <Heading size=\"md\">{tasks.length === 0 ? 'No tasks' : tasks[taskIndex].task_name}</Heading>\r\n                        <Text as='b'>{taskIndex}/{tasks.length}</Text>\r\n                    </Flex>\r\n                </div>\r\n                <div className=\"circle\">\r\n                    <CircularProgress capIsRound color=\"red\" size=\"200px\" value={tasks.length === 0 ? 'NAN' : (tasks[taskIndex].hoursCompleted / tasks[taskIndex].totalManHours)}>\r\n                        <CircularProgressLabel>{tasks.length === 0 ? 'NAN' : (tasks[taskIndex].hoursCompleted / tasks[taskIndex].totalManHours).toFixed(2)}</CircularProgressLabel>\r\n                    </CircularProgress>\r\n                </div>\r\n                {taskIndex > 1 && <Button onClick={handlePreviousTask}>Previous Task</Button>}\r\n                {tasks.length - 1 > taskIndex && <Button onClick={handleNextTask}>Next Task</Button>}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TaskProgress;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}