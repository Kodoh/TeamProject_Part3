{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aidan\\\\Desktop\\\\tempLogin\\\\client\\\\src\\\\Components\\\\ChatView.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { HStack, Button, Flex, Heading, Input, InputGroup, InputRightElement, useDisclosure, Stack, IconButton } from '@chakra-ui/react';\nimport { Drawer, DrawerBody, DrawerFooter, DrawerHeader, DrawerOverlay, DrawerContent, DrawerCloseButton } from '@chakra-ui/react';\nimport { Select } from 'chakra-react-select';\nimport { SettingsIcon } from '@chakra-ui/icons';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ChatView() {\n  _s();\n  const {\n    id\n  } = useParams();\n  let lastSender = '';\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  const [groupInfo, setGroup] = useState([{}]);\n  const [messages, setMessages] = useState([{}]);\n  const [addSelectOptions, setAddEmployees] = useState([{}]);\n  const [selectedAdd, setAddSelected] = useState([{}]);\n  const [removeSelectOptions, setRemoveEmployees] = useState([{}]);\n  const [selectedRemove, setRemoveSelected] = useState([{}]);\n  function containsObject(obj, list) {\n    var i;\n    for (i = 0; i < list.length; i++) {\n      if (list[i].idUser === obj.idUser) {\n        return true;\n      }\n    }\n    return false;\n  }\n  async function fetchGroupInfo() {\n    try {\n      const groupInfo = await (await fetch(`/groups/${id}`)).json();\n      console.log(groupInfo.data);\n      setGroup(groupInfo.data);\n    } catch (error) {\n      console.error('Error fetching group info:', error);\n    }\n  }\n  async function fetchAllUsers() {\n    try {\n      const allUsers = await (await fetch('/users')).json();\n      const groupUsers = await (await fetch(`/groups/${id}/users`)).json();\n      const emps = [];\n      allUsers.data.forEach(item => {\n        if (!containsObject(item, groupUsers.data)) {\n          emps.push({\n            value: item.idUser,\n            label: item.email\n          });\n        }\n      });\n      setAddEmployees(emps);\n    } catch (error) {\n      console.error('Error fetching users:', error);\n    }\n  }\n  async function fetchMessages() {\n    const response = await fetch(`/groups/${id}/messages`);\n    const messages = await response.json();\n    setMessages(messages.data);\n  }\n  async function fetchGroupUsers() {\n    try {\n      const response = await fetch(`/groups/${id}/users`);\n      const data = await response.json();\n      const emps = [];\n      data.data.forEach(item => {\n        if (parseInt(sessionStorage.getItem('userId')) !== item.idUser) {\n          emps.push({\n            value: item.idUser,\n            label: item.email\n          });\n        }\n      });\n      setRemoveEmployees(emps);\n    } catch (error) {\n      console.error('Error fetching users:', error);\n    }\n  }\n  useEffect(() => {\n    fetchGroupInfo();\n    fetchGroupUsers();\n    fetchAllUsers();\n    fetchMessages();\n  }, []);\n  const send = async e => {\n    if (e.keyCode === 13) {\n      e.preventDefault();\n      const userId = parseInt(sessionStorage.getItem('userId'));\n      const messageText = document.getElementById('message').value;\n\n      // Only send if message is not empty\n      if (messageText.trim() !== '') {\n        const messageData = {\n          Contents: messageText,\n          Group_idGroup: id,\n          Sender: userId\n        };\n        await fetch('/messages', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(messageData)\n        });\n        document.getElementById('message').value = '';\n        document.getElementById('message').focus();\n        fetchMessages();\n      }\n    }\n  };\n  const handleChange = selectedOptions => {\n    setAddSelected(selectedOptions);\n  };\n  const addUser = async e => {\n    e.preventDefault();\n    let participantIds = [];\n    selectedAdd.forEach(item => {\n      participantIds.push(item.value);\n    });\n    try {\n      await Promise.all(participantIds.map(async newId => {\n        const response = await fetch('/membership', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            userId: parseInt(newId),\n            groupId: parseInt(id)\n          })\n        });\n        if (!response.ok) {\n          console.error('Error while creating membership:', await response.text());\n        }\n      }));\n    } catch (error) {\n      console.error('Error while creating membership:', error);\n    }\n  };\n  const deleteUser = async e => {\n    e.preventDefault();\n    let participantIds = [];\n    selectedRemove.forEach(item => {\n      participantIds.push(item.value);\n    });\n    try {\n      await Promise.all(participantIds.map(async newId => {\n        const response = await fetch('/membership', {\n          method: 'DELETE',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            userId: parseInt(newId),\n            groupId: parseInt(id)\n          })\n        });\n        if (!response.ok) {\n          console.error('Error while creating membership:', await response.text());\n        }\n      }));\n    } catch (error) {\n      console.error('Error while creating membership:', error);\n    }\n  };\n  const leaveGroup = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('/membership', {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userId: parseInt(sessionStorage.getItem('userId')),\n          groupId: parseInt(id)\n        })\n      });\n      if (!response.ok) {\n        console.error('Error while creating membership:', await response.text());\n      }\n    } catch (error) {\n      console.error('Error while creating membership:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Drawer, {\n      isOpen: isOpen,\n      onClose: onClose,\n      placement: \"right\",\n      children: [/*#__PURE__*/_jsxDEV(DrawerOverlay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DrawerContent, {\n        children: [/*#__PURE__*/_jsxDEV(DrawerHeader, {\n          children: /*#__PURE__*/_jsxDEV(Heading, {\n            children: \"Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DrawerCloseButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DrawerBody, {\n          children: /*#__PURE__*/_jsxDEV(Stack, {\n            children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                id: \"nameInput\",\n                value: groupInfo[0].Name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(InputRightElement, {\n                width: \"4.5rem\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: send,\n                  children: \"Rename\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              closeMenuOnSelect: false,\n              selectedOptionColorScheme: \"purple\",\n              isMulti: true,\n              name: \"employee-select\",\n              options: addSelectOptions,\n              onChange: handleChange,\n              placeholder: \"Select Employees to add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: addUser,\n              children: \"Add user\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              closeMenuOnSelect: false,\n              selectedOptionColorScheme: \"purple\",\n              isMulti: true,\n              name: \"employee-select\",\n              options: removeSelectOptions,\n              onChange: handleChange,\n              placeholder: \"Select Employees to remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: deleteUser,\n              children: \"Remove user\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DrawerFooter, {\n          children: /*#__PURE__*/_jsxDEV(HStack, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              colorScheme: \"red\",\n              onClick: leaveGroup,\n              children: \"Leave Group\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      flexDir: \"column\",\n      flexGrow: \"1\",\n      position: \"relative\",\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        p: \"0.5em\",\n        justify: \"center\",\n        bg: \"teal.400\",\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          children: groupInfo[0].Name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          size: \"lg\",\n          ml: \"auto\",\n          mr: \"0\",\n          bg: \"teal.400\",\n          \"aria-label\": \"Data Analytics\",\n          icon: /*#__PURE__*/_jsxDEV(SettingsIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 108\n          }, this),\n          onClick: onOpen,\n          _hover: {\n            color: \"white\"\n          },\n          _active: {\n            color: \"white\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"chatMessages\",\n        className: \"messages\",\n        children: messages.map(message => {\n          const userId = parseInt(sessionStorage.getItem('userId'));\n          const isCurrentUser = message.Sender === userId;\n          if (lastSender !== message.Sender) {\n            lastSender = message.Sender;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: isCurrentUser ? 'username user-username' : 'username',\n                children: message.Name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: isCurrentUser ? 'message user-message' : 'message',\n                children: message.Contents\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 37\n              }, this)]\n            }, message.idMessages, true, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 33\n            }, this);\n          } else {\n            lastSender = message.Sender;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-wrapper\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: isCurrentUser ? 'message user-message' : 'message',\n                children: message.Contents\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 37\n              }, this)\n            }, message.idMessages, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 33\n            }, this);\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n        w: \"100%\",\n        pb: \"1em\",\n        px: \"1em\",\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          pr: \"4.5rem\",\n          type: \"text\",\n          placeholder: \"Type your message\",\n          id: \"message\",\n          onKeyDown: send\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(ChatView, \"hCUOmaH/o9Sl4slnVg5wJ5BU9T0=\", false, function () {\n  return [useParams, useDisclosure];\n});\n_c = ChatView;\nexport default ChatView;\nexport const chatViewLoader = async _ref => {\n  let {\n    params\n  } = _ref;\n};\nvar _c;\n$RefreshReg$(_c, \"ChatView\");","map":{"version":3,"names":["React","useEffect","useState","HStack","Button","Flex","Heading","Input","InputGroup","InputRightElement","useDisclosure","Stack","IconButton","Drawer","DrawerBody","DrawerFooter","DrawerHeader","DrawerOverlay","DrawerContent","DrawerCloseButton","Select","SettingsIcon","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatView","_s","id","lastSender","isOpen","onOpen","onClose","groupInfo","setGroup","messages","setMessages","addSelectOptions","setAddEmployees","selectedAdd","setAddSelected","removeSelectOptions","setRemoveEmployees","selectedRemove","setRemoveSelected","containsObject","obj","list","i","length","idUser","fetchGroupInfo","fetch","json","console","log","data","error","fetchAllUsers","allUsers","groupUsers","emps","forEach","item","push","value","label","email","fetchMessages","response","fetchGroupUsers","parseInt","sessionStorage","getItem","send","e","keyCode","preventDefault","userId","messageText","document","getElementById","trim","messageData","Contents","Group_idGroup","Sender","method","headers","body","JSON","stringify","focus","handleChange","selectedOptions","addUser","participantIds","Promise","all","map","newId","groupId","ok","text","deleteUser","leaveGroup","children","placement","fileName","_jsxFileName","lineNumber","columnNumber","type","Name","width","onClick","closeMenuOnSelect","selectedOptionColorScheme","isMulti","name","options","onChange","placeholder","colorScheme","flexDir","flexGrow","position","p","justify","bg","size","ml","mr","icon","_hover","color","_active","className","message","isCurrentUser","idMessages","w","pb","px","pr","onKeyDown","_c","chatViewLoader","_ref","params","$RefreshReg$"],"sources":["C:/Users/aidan/Desktop/tempLogin/client/src/Components/ChatView.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { HStack, Button, Flex, Heading, Input, InputGroup, InputRightElement, useDisclosure, Stack, IconButton } from '@chakra-ui/react'\r\nimport { Drawer, DrawerBody, DrawerFooter, DrawerHeader, DrawerOverlay, DrawerContent, DrawerCloseButton } from '@chakra-ui/react'\r\nimport { Select } from 'chakra-react-select'\r\nimport { SettingsIcon } from '@chakra-ui/icons';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nfunction ChatView() {\r\n    const { id } = useParams();\r\n    let lastSender = '';\r\n    const { isOpen, onOpen, onClose } = useDisclosure()\r\n    const [groupInfo, setGroup] = useState([{}])\r\n    const [messages, setMessages] = useState([{}])\r\n    const [addSelectOptions, setAddEmployees] = useState([{}]);\r\n    const [selectedAdd, setAddSelected] = useState([{}]);\r\n    const [removeSelectOptions, setRemoveEmployees] = useState([{}])\r\n    const [selectedRemove, setRemoveSelected] = useState([{}])\r\n\r\n    function containsObject(obj, list) {\r\n        var i;\r\n        for (i = 0; i < list.length; i++) {\r\n            if (list[i].idUser === obj.idUser) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    async function fetchGroupInfo() {\r\n        try {\r\n            const groupInfo = await (await fetch(`/groups/${id}`)).json();\r\n            console.log(groupInfo.data)\r\n            setGroup(groupInfo.data)\r\n        } catch (error) {\r\n            console.error('Error fetching group info:', error)\r\n        }\r\n    }\r\n\r\n    async function fetchAllUsers() {\r\n        try {\r\n            const allUsers = await (await fetch('/users')).json();\r\n            const groupUsers = await (await fetch(`/groups/${id}/users`)).json();\r\n            const emps = [];\r\n            allUsers.data.forEach((item) => {\r\n                if (!containsObject(item, groupUsers.data)) {\r\n                    emps.push({\r\n                        value: item.idUser,\r\n                        label: item.email\r\n                    })\r\n                }\r\n            })\r\n            setAddEmployees(emps);\r\n\r\n        } catch (error) {\r\n            console.error('Error fetching users:', error);\r\n        }\r\n    }\r\n\r\n    async function fetchMessages() {\r\n        const response = await fetch(`/groups/${id}/messages`);\r\n        const messages = await response.json();\r\n        setMessages(messages.data)\r\n    }\r\n\r\n    async function fetchGroupUsers() {\r\n        try {\r\n            const response = await fetch(`/groups/${id}/users`);\r\n            const data = await response.json();\r\n            const emps = [];\r\n            data.data.forEach((item) => {\r\n                if (parseInt(sessionStorage.getItem('userId')) !== item.idUser) {\r\n                    emps.push({\r\n                        value: item.idUser,\r\n                        label: item.email\r\n                    })\r\n                }\r\n            })\r\n            setRemoveEmployees(emps);\r\n\r\n        } catch (error) {\r\n            console.error('Error fetching users:', error);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchGroupInfo();\r\n        fetchGroupUsers();\r\n        fetchAllUsers();\r\n        fetchMessages();\r\n    }, [])\r\n\r\n    const send = async (e) => {\r\n        if (e.keyCode === 13) {\r\n            e.preventDefault();\r\n            const userId = parseInt(sessionStorage.getItem('userId'));\r\n            const messageText = document.getElementById('message').value;\r\n\r\n            // Only send if message is not empty\r\n            if (messageText.trim() !== '') {\r\n\r\n                const messageData = {\r\n                    Contents: messageText,\r\n                    Group_idGroup: id,\r\n                    Sender: userId,\r\n                };\r\n\r\n\r\n                await fetch('/messages', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify(messageData),\r\n                });\r\n\r\n                document.getElementById('message').value = '';\r\n                document.getElementById('message').focus();\r\n                fetchMessages();\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleChange = (selectedOptions) => {\r\n        setAddSelected(selectedOptions);\r\n    }\r\n\r\n    const addUser = async (e) => {\r\n        e.preventDefault();\r\n        let participantIds = []\r\n        selectedAdd.forEach((item) => {\r\n            participantIds.push(item.value)\r\n        })\r\n        try {\r\n            await Promise.all(participantIds.map(async (newId) => {\r\n                const response = await fetch('/membership', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify({ userId: parseInt(newId), groupId: parseInt(id) })\r\n                });\r\n\r\n                if (!response.ok) {\r\n                    console.error('Error while creating membership:', await response.text());\r\n                }\r\n            }));\r\n        } catch (error) {\r\n            console.error('Error while creating membership:', error);\r\n        }\r\n    }\r\n\r\n    const deleteUser = async (e) => {\r\n        e.preventDefault();\r\n        let participantIds = []\r\n        selectedRemove.forEach((item) => {\r\n            participantIds.push(item.value)\r\n        })\r\n        try {\r\n            await Promise.all(participantIds.map(async (newId) => {\r\n                const response = await fetch('/membership', {\r\n                    method: 'DELETE',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify({ userId: parseInt(newId), groupId: parseInt(id) })\r\n                });\r\n\r\n                if (!response.ok) {\r\n                    console.error('Error while creating membership:', await response.text());\r\n                }\r\n            }));\r\n        } catch (error) {\r\n            console.error('Error while creating membership:', error);\r\n        }\r\n    }\r\n\r\n    const leaveGroup = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await fetch('/membership', {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ userId: parseInt(sessionStorage.getItem('userId')), groupId: parseInt(id) })\r\n            });\r\n\r\n            if (!response.ok) {\r\n                console.error('Error while creating membership:', await response.text());\r\n            }\r\n\r\n        } catch (error) {\r\n            console.error('Error while creating membership:', error);\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Drawer isOpen={isOpen} onClose={onClose} placement='right'>\r\n                <DrawerOverlay />\r\n                <DrawerContent>\r\n                    <DrawerHeader>\r\n                        <Heading>Settings</Heading>\r\n                    </DrawerHeader>\r\n                    <DrawerCloseButton />\r\n                    <DrawerBody>\r\n                        <Stack>\r\n\r\n                            <InputGroup>\r\n                                <Input type='text' id='nameInput' value={groupInfo[0].Name} />\r\n                                <InputRightElement width='4.5rem'>\r\n                                    <Button onClick={send}>\r\n                                        Rename\r\n                                    </Button>\r\n                                </InputRightElement>\r\n                            </InputGroup>\r\n\r\n                            <Select\r\n                                closeMenuOnSelect={false}\r\n                                selectedOptionColorScheme=\"purple\"\r\n                                isMulti\r\n                                name=\"employee-select\"\r\n                                options={addSelectOptions}\r\n                                onChange={handleChange}\r\n                                placeholder='Select Employees to add' />\r\n                            <Button onClick={addUser}>\r\n                                Add user\r\n                            </Button>\r\n                            <Select\r\n                                closeMenuOnSelect={false}\r\n                                selectedOptionColorScheme=\"purple\"\r\n                                isMulti\r\n                                name=\"employee-select\"\r\n                                options={removeSelectOptions}\r\n                                onChange={handleChange}\r\n                                placeholder='Select Employees to remove' />\r\n                            <Button onClick={deleteUser}>\r\n                                Remove user\r\n                            </Button>\r\n                        </Stack>\r\n                    </DrawerBody>\r\n\r\n                    <DrawerFooter>\r\n                        <HStack>\r\n                            <Button colorScheme='red' onClick={leaveGroup}>\r\n                                Leave Group\r\n                            </Button>\r\n                        </HStack>\r\n                    </DrawerFooter>\r\n                </DrawerContent>\r\n            </Drawer>\r\n            <Flex flexDir='column' flexGrow='1' position='relative'>\r\n                <Flex p='0.5em' justify='center' bg='teal.400'>\r\n                    <Heading>{groupInfo[0].Name}</Heading>\r\n                    <IconButton size='lg' ml='auto' mr='0' bg='teal.400' aria-label='Data Analytics' icon={<SettingsIcon />} onClick={onOpen} _hover={{ color: \"white\" }} _active={{ color: \"white\" }} />\r\n                </Flex>\r\n                <div id='chatMessages' className='messages'>\r\n                    {messages.map((message) => {\r\n                        const userId = parseInt(sessionStorage.getItem('userId'));\r\n                        const isCurrentUser = message.Sender === userId;\r\n                        if (lastSender !== message.Sender) {\r\n                            lastSender = message.Sender;\r\n                            return (\r\n                                <div key={message.idMessages} className='message-wrapper'>\r\n                                    <div className={isCurrentUser ? 'username user-username' : 'username'}>\r\n                                        {message.Name}\r\n                                    </div>\r\n                                    <div className={isCurrentUser ? 'message user-message' : 'message'}>\r\n                                        {message.Contents}\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        } else {\r\n                            lastSender = message.Sender;\r\n                            return (\r\n                                <div key={message.idMessages} className='message-wrapper'>\r\n                                    <div className={isCurrentUser ? 'message user-message' : 'message'}>\r\n                                        {message.Contents}\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n\r\n                    })}\r\n                </div>\r\n                <InputGroup\r\n                    w='100%'\r\n                    pb='1em'\r\n                    px='1em'>\r\n                    <Input\r\n                        pr='4.5rem'\r\n                        type='text'\r\n                        placeholder='Type your message'\r\n                        id='message'\r\n                        onKeyDown={send} />\r\n                </InputGroup>\r\n            </Flex>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ChatView;\r\n\r\nexport const chatViewLoader = async ({ params }) => {\r\n\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}