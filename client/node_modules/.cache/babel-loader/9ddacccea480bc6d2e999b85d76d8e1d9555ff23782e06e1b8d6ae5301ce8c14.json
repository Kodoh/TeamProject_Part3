{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aidan\\\\Desktop\\\\tempLogin\\\\client\\\\src\\\\Components\\\\ChatView.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { HStack, Button, Flex, Heading, Input, InputGroup, InputRightElement, useDisclosure, Stack, IconButton } from '@chakra-ui/react';\nimport { Drawer, DrawerBody, DrawerFooter, DrawerHeader, DrawerOverlay, DrawerContent, DrawerCloseButton } from '@chakra-ui/react';\nimport { SettingsIcon } from '@chakra-ui/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ChatView(_ref) {\n  _s();\n  let {\n    id\n  } = _ref;\n  let lastSender = '';\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  const [groupInfo, setGroup] = useState([{}]);\n  const [messages, setMessages] = useState([{}]);\n  const [addSelectOptions, setAddEmployees] = useState([{}]);\n  const [selectedAdd, setAddSelected] = useState([{}]);\n  const [removeSelectOptions, setRemoveEmployees] = useState([{}]);\n  const [selectedRemove, setRemoveSelected] = useState([{}]);\n  async function fetchGroupInfo() {\n    try {\n      const groupInfo = await (await fetch(`/groups/${id}`)).json();\n      console.log(groupInfo.data);\n      setGroup(groupInfo.data);\n    } catch (error) {\n      console.error('Error fetching group info:', error);\n    }\n  }\n  async function fetchAllUsers() {\n    try {\n      const allUsers = await (await fetch('/users')).json();\n      const groupUsers = await (await fetch(`/groups/${id}/users`)).json();\n      const emps = [];\n      allUsers.data.forEach(item => {\n        if (!containsObject(item, groupUsers.data)) {\n          emps.push({\n            value: item.idUser,\n            label: item.email\n          });\n        }\n      });\n      setAddEmployees(emps);\n    } catch (error) {\n      console.error('Error fetching users:', error);\n    }\n  }\n  async function fetchMessages() {\n    const response = await fetch(`/groups/${id}/messages`);\n    const messages = await response.json();\n    setMessages(messages.data);\n  }\n  async function fetchGroupUsers() {\n    try {\n      const response = await fetch(`/groups/${id}/users`);\n      const data = await response.json();\n      const emps = [];\n      data.data.forEach(item => {\n        if (parseInt(sessionStorage.getItem('userId')) !== item.idUser) {\n          emps.push({\n            value: item.idUser,\n            label: item.email\n          });\n        }\n      });\n      setRemoveEmployees(emps);\n    } catch (error) {\n      console.error('Error fetching users:', error);\n    }\n  }\n  useEffect(() => {\n    fetchGroupInfo();\n    fetchGroupUsers();\n    fetchAllUsers();\n    fetchMessages();\n  });\n  const send = async e => {\n    if (e.keyCode === 13) {\n      e.preventDefault();\n      const userId = parseInt(sessionStorage.getItem('userId'));\n      const messageText = document.getElementById('message').value;\n\n      // Only send if message is not empty\n      if (messageText.trim() !== '') {\n        const messageData = {\n          Contents: messageText,\n          Group_idGroup: id,\n          Sender: userId\n        };\n        await fetch('/messages', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(messageData)\n        });\n        document.getElementById('message').value = '';\n        document.getElementById('message').focus();\n        fetchMessages();\n      }\n    }\n  };\n  const handleChange = selectedOptions => {\n    setAddSelected(selectedOptions);\n  };\n  const addUser = async e => {\n    e.preventDefault();\n    let participantIds = [];\n    selectedAdd.forEach(item => {\n      participantIds.push(item.value);\n    });\n    try {\n      await Promise.all(participantIds.map(async newId => {\n        const response = await fetch('/membership', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            userId: parseInt(newId),\n            groupId: parseInt(id)\n          })\n        });\n        if (!response.ok) {\n          console.error('Error while creating membership:', await response.text());\n        }\n      }));\n    } catch (error) {\n      console.error('Error while creating membership:', error);\n    }\n  };\n  const deleteUser = async e => {\n    e.preventDefault();\n    let participantIds = [];\n    selectedRemove.forEach(item => {\n      participantIds.push(item.value);\n    });\n    try {\n      await Promise.all(participantIds.map(async newId => {\n        const response = await fetch('/membership', {\n          method: 'DELETE',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            userId: parseInt(newId),\n            groupId: parseInt(id)\n          })\n        });\n        if (!response.ok) {\n          console.error('Error while creating membership:', await response.text());\n        }\n      }));\n    } catch (error) {\n      console.error('Error while creating membership:', error);\n    }\n  };\n  const leaveGroup = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('/membership', {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userId: parseInt(sessionStorage.getItem('userId')),\n          groupId: parseInt(id)\n        })\n      });\n      if (!response.ok) {\n        console.error('Error while creating membership:', await response.text());\n      }\n    } catch (error) {\n      console.error('Error while creating membership:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Drawer, {\n      isOpen: isOpen,\n      onClose: onClose,\n      placement: \"right\",\n      children: [/*#__PURE__*/_jsxDEV(DrawerOverlay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DrawerContent, {\n        children: [/*#__PURE__*/_jsxDEV(DrawerHeader, {\n          children: /*#__PURE__*/_jsxDEV(Heading, {\n            children: \"Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DrawerCloseButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DrawerBody, {\n          children: /*#__PURE__*/_jsxDEV(Stack, {\n            children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                id: \"nameInput\",\n                value: groupInfo[0].Name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(InputRightElement, {\n                width: \"4.5rem\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: send,\n                  children: \"Rename\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              closeMenuOnSelect: false,\n              selectedOptionColorScheme: \"purple\",\n              isMulti: true,\n              name: \"employee-select\",\n              options: addSelectOptions,\n              onChange: handleChange,\n              placeholder: \"Select Employees to add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: addUser,\n              children: \"Add user\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              closeMenuOnSelect: false,\n              selectedOptionColorScheme: \"purple\",\n              isMulti: true,\n              name: \"employee-select\",\n              options: removeSelectOptions,\n              onChange: handleChange,\n              placeholder: \"Select Employees to remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: deleteUser,\n              children: \"Remove user\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DrawerFooter, {\n          children: /*#__PURE__*/_jsxDEV(HStack, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              colorScheme: \"red\",\n              onClick: leaveGroup,\n              children: \"Leave Group\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      flexDir: \"column\",\n      flexGrow: \"1\",\n      position: \"relative\",\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        p: \"0.5em\",\n        justify: \"center\",\n        bg: \"teal.400\",\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          children: groupInfo[0].Name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          size: \"lg\",\n          ml: \"auto\",\n          mr: \"0\",\n          bg: \"teal.400\",\n          \"aria-label\": \"Data Analytics\",\n          icon: /*#__PURE__*/_jsxDEV(SettingsIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 108\n          }, this),\n          onClick: onOpen,\n          _hover: {\n            color: \"white\"\n          },\n          _active: {\n            color: \"white\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"chatMessages\",\n        className: \"messages\",\n        children: messages.map(message => {\n          const userId = parseInt(sessionStorage.getItem('userId'));\n          const isCurrentUser = message.Sender === userId;\n          if (lastSender !== message.Sender) {\n            lastSender = message.Sender;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: isCurrentUser ? 'username user-username' : 'username',\n                children: message.Name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: isCurrentUser ? 'message user-message' : 'message',\n                children: message.Contents\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 37\n              }, this)]\n            }, message.idMessages, true, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 33\n            }, this);\n          } else {\n            lastSender = message.Sender;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-wrapper\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: isCurrentUser ? 'message user-message' : 'message',\n                children: message.Contents\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 37\n              }, this)\n            }, message.idMessages, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 33\n            }, this);\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n        w: \"100%\",\n        pb: \"1em\",\n        px: \"1em\",\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          pr: \"4.5rem\",\n          type: \"text\",\n          placeholder: \"Type your message\",\n          id: \"message\",\n          onKeyDown: send\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(ChatView, \"U1pFxtV6tLi4k9jOSSdjpaaVD+8=\", false, function () {\n  return [useDisclosure];\n});\n_c = ChatView;\nexport default ChatView();\nvar _c;\n$RefreshReg$(_c, \"ChatView\");","map":{"version":3,"names":["React","useEffect","useState","HStack","Button","Flex","Heading","Input","InputGroup","InputRightElement","useDisclosure","Stack","IconButton","Drawer","DrawerBody","DrawerFooter","DrawerHeader","DrawerOverlay","DrawerContent","DrawerCloseButton","SettingsIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatView","_ref","_s","id","lastSender","isOpen","onOpen","onClose","groupInfo","setGroup","messages","setMessages","addSelectOptions","setAddEmployees","selectedAdd","setAddSelected","removeSelectOptions","setRemoveEmployees","selectedRemove","setRemoveSelected","fetchGroupInfo","fetch","json","console","log","data","error","fetchAllUsers","allUsers","groupUsers","emps","forEach","item","containsObject","push","value","idUser","label","email","fetchMessages","response","fetchGroupUsers","parseInt","sessionStorage","getItem","send","e","keyCode","preventDefault","userId","messageText","document","getElementById","trim","messageData","Contents","Group_idGroup","Sender","method","headers","body","JSON","stringify","focus","handleChange","selectedOptions","addUser","participantIds","Promise","all","map","newId","groupId","ok","text","deleteUser","leaveGroup","children","placement","fileName","_jsxFileName","lineNumber","columnNumber","type","Name","width","onClick","Select","closeMenuOnSelect","selectedOptionColorScheme","isMulti","name","options","onChange","placeholder","colorScheme","flexDir","flexGrow","position","p","justify","bg","size","ml","mr","icon","_hover","color","_active","className","message","isCurrentUser","idMessages","w","pb","px","pr","onKeyDown","_c","$RefreshReg$"],"sources":["C:/Users/aidan/Desktop/tempLogin/client/src/Components/ChatView.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { HStack, Button, Flex, Heading, Input, InputGroup, InputRightElement, useDisclosure, Stack, IconButton } from '@chakra-ui/react'\r\nimport { Drawer, DrawerBody, DrawerFooter, DrawerHeader, DrawerOverlay, DrawerContent, DrawerCloseButton } from '@chakra-ui/react'\r\nimport { SettingsIcon } from '@chakra-ui/icons';\r\n\r\nfunction ChatView({ id }) {\r\n    let lastSender = '';\r\n    const { isOpen, onOpen, onClose } = useDisclosure()\r\n    const [groupInfo, setGroup] = useState([{}])\r\n    const [messages, setMessages] = useState([{}])\r\n    const [addSelectOptions, setAddEmployees] = useState([{}]);\r\n    const [selectedAdd, setAddSelected] = useState([{}]);\r\n    const [removeSelectOptions, setRemoveEmployees] = useState([{}])\r\n    const [selectedRemove, setRemoveSelected] = useState([{}])\r\n\r\n    async function fetchGroupInfo() {\r\n        try {\r\n            const groupInfo = await (await fetch(`/groups/${id}`)).json();\r\n            console.log(groupInfo.data)\r\n            setGroup(groupInfo.data)\r\n        } catch (error) {\r\n            console.error('Error fetching group info:', error)\r\n        }\r\n    }\r\n\r\n    async function fetchAllUsers() {\r\n        try {\r\n            const allUsers = await (await fetch('/users')).json();\r\n            const groupUsers = await (await fetch(`/groups/${id}/users`)).json();\r\n            const emps = [];\r\n            allUsers.data.forEach((item) => {\r\n                if (!containsObject(item, groupUsers.data)) {\r\n                    emps.push({\r\n                        value: item.idUser,\r\n                        label: item.email\r\n                    })\r\n                }\r\n            })\r\n            setAddEmployees(emps);\r\n\r\n        } catch (error) {\r\n            console.error('Error fetching users:', error);\r\n        }\r\n    }\r\n\r\n    async function fetchMessages() {\r\n        const response = await fetch(`/groups/${id}/messages`);\r\n        const messages = await response.json();\r\n        setMessages(messages.data)\r\n    }\r\n\r\n    async function fetchGroupUsers() {\r\n        try {\r\n            const response = await fetch(`/groups/${id}/users`);\r\n            const data = await response.json();\r\n            const emps = [];\r\n            data.data.forEach((item) => {\r\n                if (parseInt(sessionStorage.getItem('userId')) !== item.idUser) {\r\n                    emps.push({\r\n                        value: item.idUser,\r\n                        label: item.email\r\n                    })\r\n                }\r\n            })\r\n            setRemoveEmployees(emps);\r\n\r\n        } catch (error) {\r\n            console.error('Error fetching users:', error);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchGroupInfo();\r\n        fetchGroupUsers();\r\n        fetchAllUsers();\r\n        fetchMessages();\r\n    })\r\n\r\n    const send = async (e) => {\r\n        if (e.keyCode === 13) {\r\n            e.preventDefault();\r\n            const userId = parseInt(sessionStorage.getItem('userId'));\r\n            const messageText = document.getElementById('message').value;\r\n\r\n            // Only send if message is not empty\r\n            if (messageText.trim() !== '') {\r\n\r\n                const messageData = {\r\n                    Contents: messageText,\r\n                    Group_idGroup: id,\r\n                    Sender: userId,\r\n                };\r\n\r\n\r\n                await fetch('/messages', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify(messageData),\r\n                });\r\n\r\n                document.getElementById('message').value = '';\r\n                document.getElementById('message').focus();\r\n                fetchMessages();\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleChange = (selectedOptions) => {\r\n        setAddSelected(selectedOptions);\r\n    }\r\n\r\n    const addUser = async (e) => {\r\n        e.preventDefault();\r\n        let participantIds = []\r\n        selectedAdd.forEach((item) => {\r\n            participantIds.push(item.value)\r\n        })\r\n        try {\r\n            await Promise.all(participantIds.map(async (newId) => {\r\n                const response = await fetch('/membership', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify({ userId: parseInt(newId), groupId: parseInt(id) })\r\n                });\r\n\r\n                if (!response.ok) {\r\n                    console.error('Error while creating membership:', await response.text());\r\n                }\r\n            }));\r\n        } catch (error) {\r\n            console.error('Error while creating membership:', error);\r\n        }\r\n    }\r\n\r\n    const deleteUser = async (e) => {\r\n        e.preventDefault();\r\n        let participantIds = []\r\n        selectedRemove.forEach((item) => {\r\n            participantIds.push(item.value)\r\n        })\r\n        try {\r\n            await Promise.all(participantIds.map(async (newId) => {\r\n                const response = await fetch('/membership', {\r\n                    method: 'DELETE',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify({ userId: parseInt(newId), groupId: parseInt(id) })\r\n                });\r\n\r\n                if (!response.ok) {\r\n                    console.error('Error while creating membership:', await response.text());\r\n                }\r\n            }));\r\n        } catch (error) {\r\n            console.error('Error while creating membership:', error);\r\n        }\r\n    }\r\n\r\n    const leaveGroup = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await fetch('/membership', {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ userId: parseInt(sessionStorage.getItem('userId')), groupId: parseInt(id) })\r\n            });\r\n\r\n            if (!response.ok) {\r\n                console.error('Error while creating membership:', await response.text());\r\n            }\r\n\r\n        } catch (error) {\r\n            console.error('Error while creating membership:', error);\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Drawer isOpen={isOpen} onClose={onClose} placement='right'>\r\n                <DrawerOverlay />\r\n                <DrawerContent>\r\n                    <DrawerHeader>\r\n                        <Heading>Settings</Heading>\r\n                    </DrawerHeader>\r\n                    <DrawerCloseButton />\r\n                    <DrawerBody>\r\n                        <Stack>\r\n\r\n                            <InputGroup>\r\n                                <Input type='text' id='nameInput' value={groupInfo[0].Name} />\r\n                                <InputRightElement width='4.5rem'>\r\n                                    <Button onClick={send}>\r\n                                        Rename\r\n                                    </Button>\r\n                                </InputRightElement>\r\n                            </InputGroup>\r\n\r\n                            <Select\r\n                                closeMenuOnSelect={false}\r\n                                selectedOptionColorScheme=\"purple\"\r\n                                isMulti\r\n                                name=\"employee-select\"\r\n                                options={addSelectOptions}\r\n                                onChange={handleChange}\r\n                                placeholder='Select Employees to add' />\r\n                            <Button onClick={addUser}>\r\n                                Add user\r\n                            </Button>\r\n                            <Select\r\n                                closeMenuOnSelect={false}\r\n                                selectedOptionColorScheme=\"purple\"\r\n                                isMulti\r\n                                name=\"employee-select\"\r\n                                options={removeSelectOptions}\r\n                                onChange={handleChange}\r\n                                placeholder='Select Employees to remove' />\r\n                            <Button onClick={deleteUser}>\r\n                                Remove user\r\n                            </Button>\r\n                        </Stack>\r\n                    </DrawerBody>\r\n\r\n                    <DrawerFooter>\r\n                        <HStack>\r\n                            <Button colorScheme='red' onClick={leaveGroup}>\r\n                                Leave Group\r\n                            </Button>\r\n                        </HStack>\r\n                    </DrawerFooter>\r\n                </DrawerContent>\r\n            </Drawer>\r\n            <Flex flexDir='column' flexGrow='1' position='relative'>\r\n                <Flex p='0.5em' justify='center' bg='teal.400'>\r\n                    <Heading>{groupInfo[0].Name}</Heading>\r\n                    <IconButton size='lg' ml='auto' mr='0' bg='teal.400' aria-label='Data Analytics' icon={<SettingsIcon />} onClick={onOpen} _hover={{ color: \"white\" }} _active={{ color: \"white\" }} />\r\n                </Flex>\r\n                <div id='chatMessages' className='messages'>\r\n                    {messages.map((message) => {\r\n                        const userId = parseInt(sessionStorage.getItem('userId'));\r\n                        const isCurrentUser = message.Sender === userId;\r\n                        if (lastSender !== message.Sender) {\r\n                            lastSender = message.Sender;\r\n                            return (\r\n                                <div key={message.idMessages} className='message-wrapper'>\r\n                                    <div className={isCurrentUser ? 'username user-username' : 'username'}>\r\n                                        {message.Name}\r\n                                    </div>\r\n                                    <div className={isCurrentUser ? 'message user-message' : 'message'}>\r\n                                        {message.Contents}\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        } else {\r\n                            lastSender = message.Sender;\r\n                            return (\r\n                                <div key={message.idMessages} className='message-wrapper'>\r\n                                    <div className={isCurrentUser ? 'message user-message' : 'message'}>\r\n                                        {message.Contents}\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n\r\n                    })}\r\n                </div>\r\n                <InputGroup\r\n                    w='100%'\r\n                    pb='1em'\r\n                    px='1em'>\r\n                    <Input\r\n                        pr='4.5rem'\r\n                        type='text'\r\n                        placeholder='Type your message'\r\n                        id='message'\r\n                        onKeyDown={send} />\r\n                </InputGroup>\r\n            </Flex>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ChatView();"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}