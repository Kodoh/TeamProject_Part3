{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aidan\\\\Desktop\\\\tempLogin\\\\client\\\\src\\\\TextChat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { HStack, Button, Container, FormControl, FormLabel, Heading, Stack, List, ListItem, LinkBox, LinkOverlay } from '@chakra-ui/react';\nimport { Select } from 'chakra-react-select';\nimport { useNavigate } from 'react-router-dom';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TextChat() {\n  _s();\n  const [employeeSelectOptions, setEmployees] = useState([{}]);\n  const [groups, setGroups] = useState([{}]);\n  const [selected, setSelected] = useState([{}]);\n  useEffect(() => {\n    async function fetchAllUsers() {\n      try {\n        const response = await fetch('/users'); // Use the full URL here\n        const data = await response.json();\n        const emps = [];\n        data.data.forEach(item => {\n          if (sessionStorage.getItem('userId') != item.idUser) {\n            emps.push({\n              value: item.idUser,\n              label: item.email\n            });\n          }\n        });\n        setEmployees(emps);\n      } catch (error) {\n        console.error('Error fetching users:', error);\n      }\n    }\n    async function fetchGroups() {\n      try {\n        const response = await fetch(`/groups/${sessionStorage.getItem('userId')}`);\n        const data = await response.json();\n        setGroups(data.data);\n      } catch (error) {\n        console.error('Error fetching groups:', error);\n      }\n    }\n    fetchAllUsers();\n    fetchGroups();\n  }, []);\n  let navigate = useNavigate();\n  const redirectDataAnalytics = () => {\n    return navigate(\"/data-analytics\");\n  };\n  const redirectTextChat = () => {\n    return navigate(\"/text-chat\");\n  };\n  const handleChange = selectedOptions => {\n    setSelected(selectedOptions);\n  };\n  const createChat = e => {\n    e.preventDefault();\n    console.log(selectedO);\n    /*\r\n    const employees = document.getElementById('employees').selectedOptions;\r\n    const participants = Array.from(employees).map(e => e.value).join(', ');\r\n    const chatList = document.getElementById('chatList');\r\n      const newChat = document.createElement('li');\r\n    newChat.textContent = `Chat with ${participants}`;\r\n    newChat.addEventListener('click', function () {\r\n        // TODO\r\n        window.location.href = `chat_instance.html?chatId=${Date.now()}`;\r\n    });\r\n      chatList.appendChild(newChat);\r\n    */\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(HStack, {\n        justify: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: redirectDataAnalytics,\n          children: \"Data Analytics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: redirectTextChat,\n          children: \"Text Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"inner progress\",\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: /*#__PURE__*/_jsxDEV(Heading, {\n              size: \"md\",\n              children: \"Select Employees\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            closeMenuOnSelect: false,\n            selectedOptionColorScheme: \"purple\",\n            isMulti: true,\n            name: \"employee-select\",\n            options: employeeSelectOptions,\n            onChange: handleChange,\n            placeholder: \"Select Employees to add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: createChat,\n        children: \"Create Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"inner progress\",\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        size: \"md\",\n        children: \"Existing Chats\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        spacing: 3,\n        children: groups.map(item => /*#__PURE__*/_jsxDEV(ListItem, {\n          children: /*#__PURE__*/_jsxDEV(LinkBox, {\n            as: \"article\",\n            p: \"3\",\n            borderWidth: \"1px\",\n            rounded: \"md\",\n            _hover: {\n              color: \"teal.500\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Heading, {\n              size: \"md\",\n              children: /*#__PURE__*/_jsxDEV(LinkOverlay, {\n                href: `text-chat/${item.idGroup}`,\n                children: item.Name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 29\n          }, this)\n        }, item, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n}\n_s(TextChat, \"7mFOE5/+WC4dhRFmTxKzF0QV6Ss=\", false, function () {\n  return [useNavigate];\n});\n_c = TextChat;\nexport default TextChat;\nvar _c;\n$RefreshReg$(_c, \"TextChat\");","map":{"version":3,"names":["React","useEffect","useState","HStack","Button","Container","FormControl","FormLabel","Heading","Stack","List","ListItem","LinkBox","LinkOverlay","Select","useNavigate","jsxDEV","_jsxDEV","TextChat","_s","employeeSelectOptions","setEmployees","groups","setGroups","selected","setSelected","fetchAllUsers","response","fetch","data","json","emps","forEach","item","sessionStorage","getItem","idUser","push","value","label","email","error","console","fetchGroups","navigate","redirectDataAnalytics","redirectTextChat","handleChange","selectedOptions","createChat","e","preventDefault","log","selectedO","className","children","justify","onClick","fileName","_jsxFileName","lineNumber","columnNumber","size","closeMenuOnSelect","selectedOptionColorScheme","isMulti","name","options","onChange","placeholder","spacing","map","as","p","borderWidth","rounded","_hover","color","href","idGroup","Name","_c","$RefreshReg$"],"sources":["C:/Users/aidan/Desktop/tempLogin/client/src/TextChat.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { HStack, Button, Container, FormControl, FormLabel, Heading, Stack, List, ListItem, LinkBox, LinkOverlay } from '@chakra-ui/react'\r\nimport { Select } from 'chakra-react-select'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './App.css'\r\n\r\n\r\nfunction TextChat() {\r\n\r\n    const [employeeSelectOptions, setEmployees] = useState([{}]);\r\n    const [groups, setGroups] = useState([{}]);\r\n    const [selected, setSelected] = useState([{}]);\r\n\r\n    useEffect(() => {\r\n        async function fetchAllUsers() {\r\n            try {\r\n                const response = await fetch('/users'); // Use the full URL here\r\n                const data = await response.json();\r\n                const emps = [];\r\n                data.data.forEach((item) => {\r\n                    if (sessionStorage.getItem('userId') != item.idUser) {\r\n                        emps.push({\r\n                            value: item.idUser,\r\n                            label: item.email\r\n                        })\r\n                    }\r\n                })\r\n                setEmployees(emps);\r\n            } catch (error) {\r\n                console.error('Error fetching users:', error);\r\n            }\r\n        }\r\n\r\n        async function fetchGroups() {\r\n            try {\r\n                const response = await fetch(`/groups/${sessionStorage.getItem('userId')}`);\r\n                const data = await response.json();\r\n                setGroups(data.data);\r\n            } catch (error) {\r\n                console.error('Error fetching groups:', error);\r\n            }\r\n        }\r\n        fetchAllUsers();\r\n        fetchGroups();\r\n    }, [])\r\n\r\n    let navigate = useNavigate();\r\n    const redirectDataAnalytics = () => {\r\n        return navigate(\"/data-analytics\")\r\n    }\r\n    const redirectTextChat = () => {\r\n        return navigate(\"/text-chat\")\r\n    }\r\n    const handleChange = (selectedOptions) => {\r\n        setSelected(selectedOptions);\r\n    }\r\n    const createChat = (e) => {\r\n        e.preventDefault();\r\n        console.log(selectedO)\r\n        /*\r\n        const employees = document.getElementById('employees').selectedOptions;\r\n        const participants = Array.from(employees).map(e => e.value).join(', ');\r\n        const chatList = document.getElementById('chatList');\r\n\r\n        const newChat = document.createElement('li');\r\n        newChat.textContent = `Chat with ${participants}`;\r\n        newChat.addEventListener('click', function () {\r\n            // TODO\r\n            window.location.href = `chat_instance.html?chatId=${Date.now()}`;\r\n        });\r\n\r\n        chatList.appendChild(newChat);\r\n        */\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <header>\r\n                <HStack justify=\"center\">\r\n                    <Button onClick={redirectDataAnalytics}>Data Analytics</Button>\r\n                    <Button onClick={redirectTextChat}>Text Chat</Button>\r\n                </HStack>\r\n            </header>\r\n            <Container className='inner progress'>\r\n                <FormControl>\r\n                    <Stack>\r\n                        <FormLabel>\r\n                            <Heading size=\"md\">Select Employees</Heading>\r\n                        </FormLabel>\r\n                        <Select\r\n                            closeMenuOnSelect={false}\r\n                            selectedOptionColorScheme=\"purple\"\r\n                            isMulti\r\n                            name=\"employee-select\"\r\n                            options={employeeSelectOptions}\r\n                            onChange={handleChange}\r\n                            placeholder='Select Employees to add' />\r\n                    </Stack>\r\n                </FormControl>\r\n                <Button onClick={createChat}>Create Chat</Button>\r\n            </Container>\r\n            <Container className='inner progress'>\r\n                <Heading size=\"md\">Existing Chats</Heading>\r\n                <List spacing={3}>\r\n                    {groups.map((item) => (\r\n                        <ListItem key={item}>\r\n                            <LinkBox as='article' p='3' borderWidth='1px' rounded='md' _hover={{ color: \"teal.500\" }}>\r\n                                <Heading size='md'>\r\n                                    <LinkOverlay href={`text-chat/${item.idGroup}`}>\r\n                                        {item.Name}\r\n                                    </LinkOverlay>\r\n                                </Heading>\r\n                            </LinkBox>\r\n                        </ListItem>\r\n                    ))}\r\n                </List>\r\n            </Container>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default TextChat;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}