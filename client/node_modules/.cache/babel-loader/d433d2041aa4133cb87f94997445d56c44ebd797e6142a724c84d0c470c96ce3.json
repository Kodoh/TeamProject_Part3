{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aidan\\\\Desktop\\\\tempLogin\\\\client\\\\src\\\\ChatWindow.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { HStack, Button, Flex, Heading, Input, InputGroup, InputRightElement } from '@chakra-ui/react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport './ChatWindow.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatWindow() {\n  _s();\n  const [] = useState();\n  let navigate = useNavigate();\n  const redirectDataAnalytics = () => {\n    return navigate(\"/data-analytics\");\n  };\n  const redirectTextChat = () => {\n    return navigate(\"/text-chat\");\n  };\n  const {\n    id\n  } = useParams();\n  function getRandomUser() {\n    // function for my own front-end testing purposes only to mimic multiple different people chatting\n    const users = ['John Boggins', 'Alice Simmons', 'Bob Builder'];\n    return users[Math.floor(Math.random() * users.length)];\n  }\n  async function fetchMessages(groupId) {\n    const response = await fetch(`/groups/message/${groupId}`);\n    const messages = await response.json();\n    return messages.data;\n  }\n  let lastSender = '';\n  const send = e => {\n    e.preventDefault();\n    const messageText = document.getElementById('message').value;\n    const username = getRandomUser(); // will need to modify to get actual usernames\n\n    if (messageText.trim() !== '') {\n      // checks to ensure message is not an empty string\n      const chatMessages = document.getElementById('chatMessages');\n      const newMessageWrapper = document.createElement('div'); // creates a new message on the screen\n      newMessageWrapper.className = 'message-wrapper';\n      if (lastSender !== username) {\n        // if same user sends multiple messages page adds message under previous without re-adding their name. This messagw will add the name of the user adding a message\n        const usernameElement = document.createElement('div');\n        usernameElement.className = username === 'John Boggins' ? 'username user-username' : 'username';\n        usernameElement.textContent = username;\n        newMessageWrapper.appendChild(usernameElement);\n      }\n      const newMessage = document.createElement('div');\n      newMessage.className = username === 'John Boggins' ? 'message user-message' : 'message';\n      newMessage.textContent = messageText;\n      newMessageWrapper.appendChild(newMessage);\n      chatMessages.appendChild(newMessageWrapper);\n      chatMessages.scrollTop = chatMessages.scrollHeight;\n      document.getElementById('message').value = '';\n      lastSender = username;\n      document.getElementById('message').focus();\n    }\n  };\n  const back = () => {\n    return navigate('/text-chat');\n  };\n  const settings = () => {\n    alert(\"settings\");\n  };\n\n  // event listeners for opening and closing settings button\n  /*\r\n      document.getElementById('settingsButton').addEventListener('click', function () {\r\n          document.querySelector('.settings-overlay').classList.remove('hidden');\r\n          const updateChatNameButton = document.getElementById('updateChatName');\r\n          const chatNameInput = document.getElementById('chatName');\r\n          const chatTitle = document.querySelector('header h1');\r\n  \r\n          updateChatNameButton.addEventListener('click', () => {\r\n              const newChatName = chatNameInput.value.trim();\r\n              if (newChatName) {\r\n                  chatTitle.textContent = newChatName;\r\n              }\r\n          });\r\n  \r\n          document.getElementById('closeSettings').addEventListener('click', function () {\r\n              document.querySelector('.settings-overlay').classList.add('hidden');\r\n          });\r\n  \r\n          document.getElementById('backButton').addEventListener('click', function () {\r\n              window.location.href = 'Chat_creation.html';\r\n          });\r\n      });\r\n      */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(HStack, {\n        justify: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: redirectDataAnalytics,\n          children: \"Data Analytics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: redirectTextChat,\n          children: \"Text Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      flexDir: \"column\",\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        px: \"1em\",\n        justify: \"space-between\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: back,\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Heading, {\n          children: [\"Group Chat \", id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: settings,\n          children: \"Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"chatMessages\",\n        class: \"messages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n      size: \"md\",\n      position: \"absolute\",\n      bottom: \"0\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        pr: \"4.5rem\",\n        type: \"text\",\n        placeholder: \"Type your message\",\n        id: \"message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputRightElement, {\n        width: \"4.5rem\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          h: \"1.75rem\",\n          size: \"sm\",\n          onClick: send,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 9\n  }, this);\n}\n_s(ChatWindow, \"ffkV++IAIlQjy/6fpRnkyq6qavs=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = ChatWindow;\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["React","HStack","Button","Flex","Heading","Input","InputGroup","InputRightElement","useNavigate","useParams","jsxDEV","_jsxDEV","ChatWindow","_s","useState","navigate","redirectDataAnalytics","redirectTextChat","id","getRandomUser","users","Math","floor","random","length","fetchMessages","groupId","response","fetch","messages","json","data","lastSender","send","e","preventDefault","messageText","document","getElementById","value","username","trim","chatMessages","newMessageWrapper","createElement","className","usernameElement","textContent","appendChild","newMessage","scrollTop","scrollHeight","focus","back","settings","alert","children","justify","onClick","fileName","_jsxFileName","lineNumber","columnNumber","flexDir","px","class","size","position","bottom","pr","type","placeholder","width","h","_c","$RefreshReg$"],"sources":["C:/Users/aidan/Desktop/tempLogin/client/src/ChatWindow.js"],"sourcesContent":["import React from 'react';\r\nimport { HStack, Button, Flex, Heading, Input, InputGroup, InputRightElement } from '@chakra-ui/react'\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport './ChatWindow.css'\r\n\r\n\r\nfunction ChatWindow() {\r\n\r\n    const [] = useState()\r\n\r\n    let navigate = useNavigate();\r\n\r\n    const redirectDataAnalytics = () => {\r\n        return navigate(\"/data-analytics\")\r\n    }\r\n\r\n    const redirectTextChat = () => {\r\n        return navigate(\"/text-chat\")\r\n    }\r\n    const { id } = useParams();\r\n\r\n    function getRandomUser() {  // function for my own front-end testing purposes only to mimic multiple different people chatting\r\n        const users = ['John Boggins', 'Alice Simmons', 'Bob Builder'];\r\n        return users[Math.floor(Math.random() * users.length)];\r\n    }\r\n\r\n    async function fetchMessages(groupId) {\r\n        const response = await fetch(`/groups/message/${groupId}`);\r\n        const messages = await response.json();\r\n        return messages.data;\r\n    }\r\n\r\n    let lastSender = '';\r\n\r\n    const send = (e) => {\r\n        e.preventDefault();\r\n        const messageText = document.getElementById('message').value;\r\n        const username = getRandomUser(); // will need to modify to get actual usernames\r\n\r\n        if (messageText.trim() !== '') { // checks to ensure message is not an empty string\r\n            const chatMessages = document.getElementById('chatMessages');\r\n            const newMessageWrapper = document.createElement('div'); // creates a new message on the screen\r\n            newMessageWrapper.className = 'message-wrapper';\r\n\r\n            if (lastSender !== username) { // if same user sends multiple messages page adds message under previous without re-adding their name. This messagw will add the name of the user adding a message\r\n                const usernameElement = document.createElement('div');\r\n                usernameElement.className = username === 'John Boggins' ? 'username user-username' : 'username';\r\n                usernameElement.textContent = username;\r\n\r\n                newMessageWrapper.appendChild(usernameElement);\r\n            }\r\n\r\n            const newMessage = document.createElement('div');\r\n            newMessage.className = username === 'John Boggins' ? 'message user-message' : 'message';\r\n            newMessage.textContent = messageText;\r\n\r\n            newMessageWrapper.appendChild(newMessage);\r\n            chatMessages.appendChild(newMessageWrapper);\r\n            chatMessages.scrollTop = chatMessages.scrollHeight;\r\n            document.getElementById('message').value = '';\r\n\r\n            lastSender = username;\r\n            document.getElementById('message').focus();\r\n        }\r\n    }\r\n\r\n    const back = () => {\r\n        return navigate('/text-chat')\r\n    }\r\n\r\n    const settings = () => {\r\n        alert(\"settings\")\r\n    }\r\n\r\n    // event listeners for opening and closing settings button\r\n    /*\r\n        document.getElementById('settingsButton').addEventListener('click', function () {\r\n            document.querySelector('.settings-overlay').classList.remove('hidden');\r\n            const updateChatNameButton = document.getElementById('updateChatName');\r\n            const chatNameInput = document.getElementById('chatName');\r\n            const chatTitle = document.querySelector('header h1');\r\n    \r\n            updateChatNameButton.addEventListener('click', () => {\r\n                const newChatName = chatNameInput.value.trim();\r\n                if (newChatName) {\r\n                    chatTitle.textContent = newChatName;\r\n                }\r\n            });\r\n    \r\n            document.getElementById('closeSettings').addEventListener('click', function () {\r\n                document.querySelector('.settings-overlay').classList.add('hidden');\r\n            });\r\n    \r\n            document.getElementById('backButton').addEventListener('click', function () {\r\n                window.location.href = 'Chat_creation.html';\r\n            });\r\n        });\r\n        */\r\n\r\n    return (\r\n        <div className='wrapper'>\r\n            <header>\r\n                <HStack justify=\"center\">\r\n                    <Button onClick={redirectDataAnalytics}>Data Analytics</Button>\r\n                    <Button onClick={redirectTextChat}>Text Chat</Button>\r\n                </HStack>\r\n            </header>\r\n            <Flex flexDir='column'>\r\n                <Flex px='1em' justify='space-between'>\r\n                    <Button onClick={back}>Back</Button>\r\n                    <Heading>Group Chat {id}</Heading>\r\n                    <Button onClick={settings}>Settings</Button>\r\n                </Flex>\r\n                <div id='chatMessages' class='messages'></div>\r\n            </Flex>\r\n            <InputGroup\r\n                size='md'\r\n                position='absolute'\r\n                bottom='0'>\r\n                <Input\r\n                    pr='4.5rem'\r\n                    type='text'\r\n                    placeholder='Type your message'\r\n                    id='message' />\r\n                <InputRightElement width='4.5rem'>\r\n                    <Button h='1.75rem' size='sm' onClick={send}>\r\n                        Send\r\n                    </Button>\r\n                </InputRightElement>\r\n            </InputGroup>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChatWindow;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}