{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\GitHub\\\\TeamProject_Part3\\\\client\\\\src\\\\pages\\\\Analytics.js\",\n  _s = $RefreshSig$();\nimport '../App.css';\nimport { Heading } from '@chakra-ui/react';\nimport { createColumnHelper, useSortBy } from '@tanstack/react-table';\nimport { DataTable } from '../Components/DataTable';\nimport ProgressBar from '../Components/ProgressBar';\nimport TaskProgress from '../Components/TaskProgress';\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columnHelper = createColumnHelper();\nconst columns = [columnHelper.accessor('avatar', {\n  cell: info => info.getValue(),\n  header: ''\n}), columnHelper.accessor('employee_name', {\n  cell: info => info.getValue(),\n  header: 'Employee',\n  sortType: 'basic'\n}), columnHelper.accessor('email', {\n  cell: info => info.getValue(),\n  header: 'Email',\n  sortType: 'basic'\n}), columnHelper.accessor('joindate', {\n  cell: info => info.getValue(),\n  header: 'Member since'\n}), columnHelper.accessor('role', {\n  cell: info => info.getValue(),\n  header: 'Role',\n  sortType: 'basic'\n})];\nfunction Analytics() {\n  _s();\n  const [employees, setEmployees] = useState([]);\n  const [task, setTask] = useState(null);\n  const [taskId, setTaskId] = useState(1);\n  const [projects, setProjects] = useState([]);\n  const fetchTask = id => {\n    fetch(`/dataAnalytics/task/${id}`).then(response => response.json()).then(result => {\n      if (result.data.length > 0) {\n        setTask(result.data[0]);\n      } else {\n        console.log('No task data received');\n      }\n    }).catch(error => console.error('Error fetching task:', error));\n  };\n  const handleNextTask = () => {\n    const nextId = taskId + 1;\n    fetchTask(nextId);\n    setTaskId(nextId);\n  };\n  const handlePreviousTask = () => {\n    const prevId = Math.max(1, taskId - 1); // Ensure the ID is not less than 1\n    fetchTask(prevId);\n    setTaskId(prevId);\n  };\n  useEffect(() => {\n    fetch('/dataAnalytics/employees').then(response => response.json()).then(result => {\n      const mappedData = result.data.map(item => ({\n        avatar: '',\n        // Placeholder for Avatar\n        employee_name: item.employee_name,\n        email: item.email,\n        joindate: new Date(item.joindate).toLocaleDateString(),\n        role: item.role\n      }));\n      setEmployees(mappedData);\n    }).catch(error => console.error(error));\n    fetchTask(taskId);\n    fetch('/dataAnalytics/projects').then(response => response.json()).then(result => {\n      setProjects(result.data);\n    }).catch(error => console.error(error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(ProgressBar, {\n      projectData: projects\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TaskProgress, {\n      task: task,\n      handleNextTask: handleNextTask,\n      handlePreviousTask: handlePreviousTask,\n      taskId: taskId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"outer employees\",\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        size: \"lg\",\n        children: \"Employees\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inner employees\",\n        children: /*#__PURE__*/_jsxDEV(DataTable, {\n          columns: columns,\n          data: employees\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n}\n_s(Analytics, \"Z+lcqcbBQoM0KCPNRjA7IdBJmt8=\");\n_c = Analytics;\nexport default Analytics;\nvar _c;\n$RefreshReg$(_c, \"Analytics\");","map":{"version":3,"names":["Heading","createColumnHelper","useSortBy","DataTable","ProgressBar","TaskProgress","React","useEffect","useState","jsxDEV","_jsxDEV","columnHelper","columns","accessor","cell","info","getValue","header","sortType","Analytics","_s","employees","setEmployees","task","setTask","taskId","setTaskId","projects","setProjects","fetchTask","id","fetch","then","response","json","result","data","length","console","log","catch","error","handleNextTask","nextId","handlePreviousTask","prevId","Math","max","mappedData","map","item","avatar","employee_name","email","joindate","Date","toLocaleDateString","role","className","children","projectData","fileName","_jsxFileName","lineNumber","columnNumber","size","_c","$RefreshReg$"],"sources":["D:/Documents/GitHub/TeamProject_Part3/client/src/pages/Analytics.js"],"sourcesContent":["import '../App.css';\r\nimport { Heading } from '@chakra-ui/react';\r\nimport { createColumnHelper, useSortBy } from '@tanstack/react-table';\r\nimport { DataTable } from '../Components/DataTable';\r\nimport ProgressBar from '../Components/ProgressBar';\r\nimport TaskProgress from '../Components/TaskProgress';\r\n\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nconst columnHelper = createColumnHelper();\r\n\r\nconst columns = [\r\n    columnHelper.accessor('avatar', {\r\n        cell: (info) => info.getValue(),\r\n        header: ''\r\n    }),\r\n    columnHelper.accessor('employee_name', {\r\n        cell: (info) => info.getValue(),\r\n        header: 'Employee',\r\n        sortType: 'basic'\r\n    }),\r\n    columnHelper.accessor('email', {\r\n        cell: (info) => info.getValue(),\r\n        header: 'Email',\r\n        sortType: 'basic'\r\n    }),\r\n    columnHelper.accessor('joindate', {\r\n        cell: (info) => info.getValue(),\r\n        header: 'Member since'\r\n    }),\r\n    columnHelper.accessor('role', {\r\n        cell: (info) => info.getValue(),\r\n        header: 'Role',\r\n        sortType: 'basic'\r\n    })\r\n];\r\n\r\nfunction Analytics() {\r\n    const [employees, setEmployees] = useState([]);\r\n    const [task, setTask] = useState(null);\r\n    const [taskId, setTaskId] = useState(1);\r\n    const [projects, setProjects] = useState([]);\r\n\r\n    const fetchTask = (id) => {\r\n        fetch(`/dataAnalytics/task/${id}`)\r\n            .then((response) => response.json())\r\n            .then((result) => {\r\n                if (result.data.length > 0) {\r\n                    setTask(result.data[0]);\r\n                } else {\r\n                    console.log('No task data received');\r\n                }\r\n            })\r\n            .catch((error) => console.error('Error fetching task:', error));\r\n    }\r\n\r\n\r\n\r\n    const handleNextTask = () => {\r\n        const nextId = taskId + 1;\r\n        fetchTask(nextId);\r\n        setTaskId(nextId);\r\n    };\r\n\r\n    const handlePreviousTask = () => {\r\n        const prevId = Math.max(1, taskId - 1);  // Ensure the ID is not less than 1\r\n        fetchTask(prevId);\r\n        setTaskId(prevId);\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetch('/dataAnalytics/employees')\r\n            .then((response) => response.json())\r\n            .then((result) => {\r\n                const mappedData = result.data.map((item) => ({\r\n                    avatar: '', // Placeholder for Avatar\r\n                    employee_name: item.employee_name,\r\n                    email: item.email,\r\n                    joindate: new Date(item.joindate).toLocaleDateString(),\r\n                    role: item.role\r\n                }));\r\n                setEmployees(mappedData);\r\n            })\r\n            .catch((error) => console.error(error));\r\n\r\n        fetchTask(taskId);\r\n        fetch('/dataAnalytics/projects')\r\n            .then((response) => response.json())\r\n            .then((result) => {\r\n                setProjects(result.data);\r\n            })\r\n            .catch((error) => console.error(error));\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <ProgressBar projectData={projects} />\r\n                <TaskProgress task={task} handleNextTask={handleNextTask} handlePreviousTask={handlePreviousTask} taskId={taskId} />\r\n\r\n            <div className=\"outer employees\">\r\n                <Heading size=\"lg\">Employees</Heading>\r\n                <div className=\"inner employees\">\r\n                    <DataTable columns={columns} data={employees} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Analytics;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}