{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aidan\\\\Desktop\\\\tempLogin\\\\client\\\\src\\\\Components\\\\ChatView.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useLayoutEffect, useState } from 'react';\nimport { HStack, Button, Flex, Heading, Input, InputGroup, InputRightElement, useDisclosure, Stack, IconButton } from '@chakra-ui/react';\nimport { Drawer, DrawerBody, DrawerFooter, DrawerHeader, DrawerOverlay, DrawerContent, DrawerCloseButton } from '@chakra-ui/react';\nimport { Select } from 'chakra-react-select';\nimport { SettingsIcon } from '@chakra-ui/icons';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ChatView() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const location = useLocation();\n  let lastSender = '';\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  const [groupInfo, setGroup] = useState([{}]);\n  const [messages, setMessages] = useState([{}]);\n  const [addSelectOptions, setAddEmployees] = useState([{}]);\n  const [selectedAdd, setAddSelected] = useState([{}]);\n  const [removeSelectOptions, setRemoveEmployees] = useState([{}]);\n  const [selectedRemove, setRemoveSelected] = useState([{}]);\n  function containsObject(obj, list) {\n    var i;\n    for (i = 0; i < list.length; i++) {\n      if (list[i].idUser === obj.idUser) {\n        return true;\n      }\n    }\n    return false;\n  }\n  async function fetchGroupInfo() {\n    try {\n      const groupInfo = await (await fetch(`/groups/${id}`)).json();\n      setGroup(groupInfo.data);\n    } catch (error) {\n      console.error('Error fetching group info:', error);\n    }\n  }\n  async function fetchAllUsers() {\n    try {\n      const allUsers = await (await fetch('/users')).json();\n      const groupUsers = await (await fetch(`/groups/${id}/users`)).json();\n      const emps = [];\n      allUsers.data.forEach(item => {\n        if (!containsObject(item, groupUsers.data)) {\n          emps.push({\n            value: item.idUser,\n            label: item.email\n          });\n        }\n      });\n      setAddEmployees(emps);\n    } catch (error) {\n      console.error('Error fetching users:', error);\n    }\n  }\n  async function fetchMessages() {\n    const response = await fetch(`/groups/${id}/messages`);\n    const messages = await response.json();\n    setMessages(messages.data);\n  }\n  async function fetchGroupUsers() {\n    try {\n      const response = await fetch(`/groups/${id}/users`);\n      const data = await response.json();\n      const emps = [];\n      data.data.forEach(item => {\n        if (parseInt(sessionStorage.getItem('userId')) !== item.idUser) {\n          emps.push({\n            value: item.idUser,\n            label: item.email\n          });\n        }\n      });\n      setRemoveEmployees(emps);\n    } catch (error) {\n      console.error('Error fetching users:', error);\n    }\n  }\n  useLayoutEffect(() => {\n    console.log(\"location\", location);\n    fetchGroupInfo();\n    fetchGroupUsers();\n    fetchAllUsers();\n    fetchMessages();\n  }, [location]);\n  const send = async e => {\n    if (e.keyCode === 13) {\n      e.preventDefault();\n      const userId = parseInt(sessionStorage.getItem('userId'));\n      const messageText = document.getElementById('message').value;\n\n      // Only send if message is not empty\n      if (messageText.trim() !== '') {\n        const messageData = {\n          Contents: messageText,\n          Group_idGroup: id,\n          Sender: userId\n        };\n        await fetch('/messages', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(messageData)\n        });\n        document.getElementById('message').value = '';\n        document.getElementById('message').focus();\n        fetchMessages();\n      }\n    }\n  };\n  const updateChat = e => {\n    e.preventDefault();\n    const name = document.getElementById('nameInput').value;\n    try {} catch (error) {\n      console.error('There was an error updating the chat name', error);\n    }\n  };\n  const handleChange = selectedOptions => {\n    setAddSelected(selectedOptions);\n  };\n  const addUser = async e => {\n    e.preventDefault();\n    let participantIds = [];\n    selectedAdd.forEach(item => {\n      participantIds.push(item.value);\n    });\n    try {\n      await Promise.all(participantIds.map(async newId => {\n        const response = await fetch('/membership', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            userId: parseInt(newId),\n            groupId: parseInt(id)\n          })\n        });\n        if (!response.ok) {\n          console.error('Error while creating membership:', await response.text());\n        }\n      }));\n    } catch (error) {\n      console.error('Error while creating membership:', error);\n    }\n  };\n  const deleteUser = async e => {\n    e.preventDefault();\n    let participantIds = [];\n    selectedRemove.forEach(item => {\n      participantIds.push(item.value);\n    });\n    try {\n      await Promise.all(participantIds.map(async newId => {\n        const response = await fetch('/membership', {\n          method: 'DELETE',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            userId: parseInt(newId),\n            groupId: parseInt(id)\n          })\n        });\n        if (!response.ok) {\n          console.error('Error while creating membership:', await response.text());\n        }\n      }));\n    } catch (error) {\n      console.error('Error while creating membership:', error);\n    }\n  };\n  const leaveGroup = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('/membership', {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userId: parseInt(sessionStorage.getItem('userId')),\n          groupId: parseInt(id)\n        })\n      });\n      if (!response.ok) {\n        console.error('Error while creating membership:', await response.text());\n      }\n    } catch (error) {\n      console.error('Error while creating membership:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Drawer, {\n      isOpen: isOpen,\n      onClose: onClose,\n      placement: \"right\",\n      children: [/*#__PURE__*/_jsxDEV(DrawerOverlay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DrawerContent, {\n        children: [/*#__PURE__*/_jsxDEV(DrawerHeader, {\n          children: /*#__PURE__*/_jsxDEV(Heading, {\n            children: \"Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DrawerCloseButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DrawerBody, {\n          children: /*#__PURE__*/_jsxDEV(Stack, {\n            children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n              size: \"md\",\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                pr: \"5em\",\n                type: \"text\",\n                id: \"nameInput\",\n                defaultValue: groupInfo[0].Name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(InputRightElement, {\n                width: \"4.5rem\",\n                pr: \"0.5em\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: updateChat,\n                  h: \"1.75rem\",\n                  size: \"sm\",\n                  children: \"Rename\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              closeMenuOnSelect: false,\n              selectedOptionColorScheme: \"purple\",\n              isMulti: true,\n              name: \"employee-select\",\n              options: addSelectOptions,\n              onChange: handleChange,\n              placeholder: \"Select Employees to add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: addUser,\n              children: \"Add user\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              closeMenuOnSelect: false,\n              selectedOptionColorScheme: \"purple\",\n              isMulti: true,\n              name: \"employee-select\",\n              options: removeSelectOptions,\n              onChange: handleChange,\n              placeholder: \"Select Employees to remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: deleteUser,\n              children: \"Remove user\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DrawerFooter, {\n          children: /*#__PURE__*/_jsxDEV(HStack, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              colorScheme: \"red\",\n              onClick: leaveGroup,\n              children: \"Leave Group\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      flexDir: \"column\",\n      flexGrow: \"1\",\n      position: \"relative\",\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        p: \"0.5em\",\n        justify: \"center\",\n        bg: \"#535357\",\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          color: \"whiteAlpha.900\",\n          pl: \"0.5em\",\n          children: groupInfo[0].Name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          size: \"lg\",\n          ml: \"auto\",\n          mr: \"0\",\n          color: \"whiteAlpha.700\",\n          bg: \"\",\n          \"aria-label\": \"Data Analytics\",\n          icon: /*#__PURE__*/_jsxDEV(SettingsIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 123\n          }, this),\n          onClick: onOpen,\n          _hover: {\n            color: 'white',\n            backgroundColor: '#F4442E'\n          },\n          _active: {\n            color: \"white\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"chatMessages\",\n        className: \"messages\",\n        children: messages.map(message => {\n          const userId = parseInt(sessionStorage.getItem('userId'));\n          const isCurrentUser = message.Sender === userId;\n          if (lastSender !== message.Sender) {\n            lastSender = message.Sender;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: isCurrentUser ? 'username user-username' : 'username',\n                children: message.Name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: isCurrentUser ? 'message user-message' : 'message',\n                children: message.Contents\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 37\n              }, this)]\n            }, message.idMessages, true, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 33\n            }, this);\n          } else {\n            lastSender = message.Sender;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-wrapper\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: isCurrentUser ? 'message user-message' : 'message',\n                children: message.Contents\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 37\n              }, this)\n            }, message.idMessages, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 33\n            }, this);\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n        w: \"100%\",\n        pb: \"1em\",\n        px: \"1em\",\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          pr: \"4.5rem\",\n          type: \"text\",\n          placeholder: \"Type your message\",\n          id: \"message\",\n          onKeyDown: send\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(ChatView, \"9odFCnvySmMl/D/V8woWNXXt0t0=\", false, function () {\n  return [useParams, useLocation, useDisclosure];\n});\n_c = ChatView;\nexport default ChatView;\nvar _c;\n$RefreshReg$(_c, \"ChatView\");","map":{"version":3,"names":["React","useEffect","useLayoutEffect","useState","HStack","Button","Flex","Heading","Input","InputGroup","InputRightElement","useDisclosure","Stack","IconButton","Drawer","DrawerBody","DrawerFooter","DrawerHeader","DrawerOverlay","DrawerContent","DrawerCloseButton","Select","SettingsIcon","useLocation","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatView","_s","id","location","lastSender","isOpen","onOpen","onClose","groupInfo","setGroup","messages","setMessages","addSelectOptions","setAddEmployees","selectedAdd","setAddSelected","removeSelectOptions","setRemoveEmployees","selectedRemove","setRemoveSelected","containsObject","obj","list","i","length","idUser","fetchGroupInfo","fetch","json","data","error","console","fetchAllUsers","allUsers","groupUsers","emps","forEach","item","push","value","label","email","fetchMessages","response","fetchGroupUsers","parseInt","sessionStorage","getItem","log","send","e","keyCode","preventDefault","userId","messageText","document","getElementById","trim","messageData","Contents","Group_idGroup","Sender","method","headers","body","JSON","stringify","focus","updateChat","name","handleChange","selectedOptions","addUser","participantIds","Promise","all","map","newId","groupId","ok","text","deleteUser","leaveGroup","children","placement","fileName","_jsxFileName","lineNumber","columnNumber","size","pr","type","defaultValue","Name","width","onClick","h","closeMenuOnSelect","selectedOptionColorScheme","isMulti","options","onChange","placeholder","colorScheme","flexDir","flexGrow","position","p","justify","bg","color","pl","ml","mr","icon","_hover","backgroundColor","_active","className","message","isCurrentUser","idMessages","w","pb","px","onKeyDown","_c","$RefreshReg$"],"sources":["C:/Users/aidan/Desktop/tempLogin/client/src/Components/ChatView.js"],"sourcesContent":["import React, { useEffect, useLayoutEffect, useState } from 'react';\r\nimport { HStack, Button, Flex, Heading, Input, InputGroup, InputRightElement, useDisclosure, Stack, IconButton } from '@chakra-ui/react'\r\nimport { Drawer, DrawerBody, DrawerFooter, DrawerHeader, DrawerOverlay, DrawerContent, DrawerCloseButton } from '@chakra-ui/react'\r\nimport { Select } from 'chakra-react-select'\r\nimport { SettingsIcon } from '@chakra-ui/icons';\r\nimport { useLocation, useParams } from 'react-router-dom';\r\n\r\nfunction ChatView() {\r\n    const { id } = useParams();\r\n    const location = useLocation();\r\n    let lastSender = '';\r\n    const { isOpen, onOpen, onClose } = useDisclosure()\r\n    const [groupInfo, setGroup] = useState([{}])\r\n    const [messages, setMessages] = useState([{}])\r\n    const [addSelectOptions, setAddEmployees] = useState([{}]);\r\n    const [selectedAdd, setAddSelected] = useState([{}]);\r\n    const [removeSelectOptions, setRemoveEmployees] = useState([{}])\r\n    const [selectedRemove, setRemoveSelected] = useState([{}])\r\n\r\n    function containsObject(obj, list) {\r\n        var i;\r\n        for (i = 0; i < list.length; i++) {\r\n            if (list[i].idUser === obj.idUser) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    async function fetchGroupInfo() {\r\n        try {\r\n            const groupInfo = await (await fetch(`/groups/${id}`)).json();\r\n            setGroup(groupInfo.data)\r\n        } catch (error) {\r\n            console.error('Error fetching group info:', error)\r\n        }\r\n    }\r\n\r\n    async function fetchAllUsers() {\r\n        try {\r\n            const allUsers = await (await fetch('/users')).json();\r\n            const groupUsers = await (await fetch(`/groups/${id}/users`)).json();\r\n            const emps = [];\r\n            allUsers.data.forEach((item) => {\r\n                if (!containsObject(item, groupUsers.data)) {\r\n                    emps.push({\r\n                        value: item.idUser,\r\n                        label: item.email\r\n                    })\r\n                }\r\n            })\r\n            setAddEmployees(emps);\r\n\r\n        } catch (error) {\r\n            console.error('Error fetching users:', error);\r\n        }\r\n    }\r\n\r\n    async function fetchMessages() {\r\n        const response = await fetch(`/groups/${id}/messages`);\r\n        const messages = await response.json();\r\n        setMessages(messages.data)\r\n    }\r\n\r\n    async function fetchGroupUsers() {\r\n        try {\r\n            const response = await fetch(`/groups/${id}/users`);\r\n            const data = await response.json();\r\n            const emps = [];\r\n            data.data.forEach((item) => {\r\n                if (parseInt(sessionStorage.getItem('userId')) !== item.idUser) {\r\n                    emps.push({\r\n                        value: item.idUser,\r\n                        label: item.email\r\n                    })\r\n                }\r\n            })\r\n            setRemoveEmployees(emps);\r\n\r\n        } catch (error) {\r\n            console.error('Error fetching users:', error);\r\n        }\r\n    }\r\n\r\n\r\n    useLayoutEffect(() => {\r\n        console.log(\"location\", location)\r\n        fetchGroupInfo();\r\n        fetchGroupUsers();\r\n        fetchAllUsers();\r\n        fetchMessages();\r\n    }, [location])\r\n\r\n    const send = async (e) => {\r\n        if (e.keyCode === 13) {\r\n            e.preventDefault();\r\n            const userId = parseInt(sessionStorage.getItem('userId'));\r\n            const messageText = document.getElementById('message').value;\r\n\r\n            // Only send if message is not empty\r\n            if (messageText.trim() !== '') {\r\n\r\n                const messageData = {\r\n                    Contents: messageText,\r\n                    Group_idGroup: id,\r\n                    Sender: userId,\r\n                };\r\n\r\n\r\n                await fetch('/messages', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify(messageData),\r\n                });\r\n\r\n                document.getElementById('message').value = '';\r\n                document.getElementById('message').focus();\r\n                fetchMessages();\r\n            }\r\n        }\r\n    }\r\n\r\n    const updateChat = (e) => {\r\n        e.preventDefault();\r\n        const name = document.getElementById('nameInput').value;\r\n        try {\r\n\r\n        } catch (error) {\r\n            console.error('There was an error updating the chat name', error)\r\n        }\r\n    }\r\n\r\n    const handleChange = (selectedOptions) => {\r\n        setAddSelected(selectedOptions);\r\n    }\r\n\r\n    const addUser = async (e) => {\r\n        e.preventDefault();\r\n        let participantIds = []\r\n        selectedAdd.forEach((item) => {\r\n            participantIds.push(item.value)\r\n        })\r\n        try {\r\n            await Promise.all(participantIds.map(async (newId) => {\r\n                const response = await fetch('/membership', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify({ userId: parseInt(newId), groupId: parseInt(id) })\r\n                });\r\n\r\n                if (!response.ok) {\r\n                    console.error('Error while creating membership:', await response.text());\r\n                }\r\n            }));\r\n        } catch (error) {\r\n            console.error('Error while creating membership:', error);\r\n        }\r\n    }\r\n\r\n    const deleteUser = async (e) => {\r\n        e.preventDefault();\r\n        let participantIds = []\r\n        selectedRemove.forEach((item) => {\r\n            participantIds.push(item.value)\r\n        })\r\n        try {\r\n            await Promise.all(participantIds.map(async (newId) => {\r\n                const response = await fetch('/membership', {\r\n                    method: 'DELETE',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify({ userId: parseInt(newId), groupId: parseInt(id) })\r\n                });\r\n\r\n                if (!response.ok) {\r\n                    console.error('Error while creating membership:', await response.text());\r\n                }\r\n            }));\r\n        } catch (error) {\r\n            console.error('Error while creating membership:', error);\r\n        }\r\n    }\r\n\r\n    const leaveGroup = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await fetch('/membership', {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ userId: parseInt(sessionStorage.getItem('userId')), groupId: parseInt(id) })\r\n            });\r\n\r\n            if (!response.ok) {\r\n                console.error('Error while creating membership:', await response.text());\r\n            }\r\n\r\n        } catch (error) {\r\n            console.error('Error while creating membership:', error);\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Drawer isOpen={isOpen} onClose={onClose} placement='right'>\r\n                <DrawerOverlay />\r\n                <DrawerContent>\r\n                    <DrawerHeader>\r\n                        <Heading>Settings</Heading>\r\n                    </DrawerHeader>\r\n                    <DrawerCloseButton />\r\n                    <DrawerBody>\r\n                        <Stack>\r\n\r\n                            <InputGroup size='md'>\r\n                                <Input pr='5em' type='text' id='nameInput' defaultValue={groupInfo[0].Name} />\r\n                                <InputRightElement width='4.5rem' pr='0.5em'>\r\n                                    <Button onClick={updateChat} h='1.75rem' size='sm'>\r\n                                        Rename\r\n                                    </Button>\r\n                                </InputRightElement>\r\n                            </InputGroup>\r\n\r\n                            <Select\r\n                                closeMenuOnSelect={false}\r\n                                selectedOptionColorScheme=\"purple\"\r\n                                isMulti\r\n                                name=\"employee-select\"\r\n                                options={addSelectOptions}\r\n                                onChange={handleChange}\r\n                                placeholder='Select Employees to add' />\r\n                            <Button onClick={addUser}>\r\n                                Add user\r\n                            </Button>\r\n                            <Select\r\n                                closeMenuOnSelect={false}\r\n                                selectedOptionColorScheme=\"purple\"\r\n                                isMulti\r\n                                name=\"employee-select\"\r\n                                options={removeSelectOptions}\r\n                                onChange={handleChange}\r\n                                placeholder='Select Employees to remove' />\r\n                            <Button onClick={deleteUser}>\r\n                                Remove user\r\n                            </Button>\r\n                        </Stack>\r\n                    </DrawerBody>\r\n\r\n                    <DrawerFooter>\r\n                        <HStack>\r\n                            <Button colorScheme='red' onClick={leaveGroup}>\r\n                                Leave Group\r\n                            </Button>\r\n                        </HStack>\r\n                    </DrawerFooter>\r\n                </DrawerContent>\r\n            </Drawer>\r\n            <Flex flexDir='column' flexGrow='1' position='relative'>\r\n                <Flex p='0.5em' justify='center' bg='#535357'>\r\n                    <Heading color='whiteAlpha.900' pl='0.5em'>{groupInfo[0].Name}</Heading>\r\n                    <IconButton size='lg' ml='auto' mr='0' color='whiteAlpha.700' bg='' aria-label='Data Analytics' icon={<SettingsIcon />} onClick={onOpen} _hover={{ color: 'white', backgroundColor: '#F4442E' }} _active={{ color: \"white\" }} />\r\n                </Flex>\r\n                <div id='chatMessages' className='messages'>\r\n                    {messages.map((message) => {\r\n                        const userId = parseInt(sessionStorage.getItem('userId'));\r\n                        const isCurrentUser = message.Sender === userId;\r\n                        if (lastSender !== message.Sender) {\r\n                            lastSender = message.Sender;\r\n                            return (\r\n                                <div key={message.idMessages} className='message-wrapper'>\r\n                                    <div className={isCurrentUser ? 'username user-username' : 'username'}>\r\n                                        {message.Name}\r\n                                    </div>\r\n                                    <div className={isCurrentUser ? 'message user-message' : 'message'}>\r\n                                        {message.Contents}\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        } else {\r\n                            lastSender = message.Sender;\r\n                            return (\r\n                                <div key={message.idMessages} className='message-wrapper'>\r\n                                    <div className={isCurrentUser ? 'message user-message' : 'message'}>\r\n                                        {message.Contents}\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n\r\n                    })}\r\n                </div>\r\n                <InputGroup\r\n                    w='100%'\r\n                    pb='1em'\r\n                    px='1em'>\r\n                    <Input\r\n                        pr='4.5rem'\r\n                        type='text'\r\n                        placeholder='Type your message'\r\n                        id='message'\r\n                        onKeyDown={send} />\r\n                </InputGroup>\r\n            </Flex>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ChatView;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,eAAe,EAAEC,QAAQ,QAAQ,OAAO;AACnE,SAASC,MAAM,EAAEC,MAAM,EAAEC,IAAI,EAAEC,OAAO,EAAEC,KAAK,EAAEC,UAAU,EAAEC,iBAAiB,EAAEC,aAAa,EAAEC,KAAK,EAAEC,UAAU,QAAQ,kBAAkB;AACxI,SAASC,MAAM,EAAEC,UAAU,EAAEC,YAAY,EAAEC,YAAY,EAAEC,aAAa,EAAEC,aAAa,EAAEC,iBAAiB,QAAQ,kBAAkB;AAClI,SAASC,MAAM,QAAQ,qBAAqB;AAC5C,SAASC,YAAY,QAAQ,kBAAkB;AAC/C,SAASC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1D,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM;IAAEC;EAAG,CAAC,GAAGP,SAAS,CAAC,CAAC;EAC1B,MAAMQ,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,IAAIU,UAAU,GAAG,EAAE;EACnB,MAAM;IAAEC,MAAM;IAAEC,MAAM;IAAEC;EAAQ,CAAC,GAAGzB,aAAa,CAAC,CAAC;EACnD,MAAM,CAAC0B,SAAS,EAAEC,QAAQ,CAAC,GAAGnC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACoC,QAAQ,EAAEC,WAAW,CAAC,GAAGrC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACsC,gBAAgB,EAAEC,eAAe,CAAC,GAAGvC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC1D,MAAM,CAACwC,WAAW,EAAEC,cAAc,CAAC,GAAGzC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACpD,MAAM,CAAC0C,mBAAmB,EAAEC,kBAAkB,CAAC,GAAG3C,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAChE,MAAM,CAAC4C,cAAc,EAAEC,iBAAiB,CAAC,GAAG7C,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAE1D,SAAS8C,cAAcA,CAACC,GAAG,EAAEC,IAAI,EAAE;IAC/B,IAAIC,CAAC;IACL,KAAKA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,IAAI,CAACE,MAAM,EAAED,CAAC,EAAE,EAAE;MAC9B,IAAID,IAAI,CAACC,CAAC,CAAC,CAACE,MAAM,KAAKJ,GAAG,CAACI,MAAM,EAAE;QAC/B,OAAO,IAAI;MACf;IACJ;IACA,OAAO,KAAK;EAChB;EAEA,eAAeC,cAAcA,CAAA,EAAG;IAC5B,IAAI;MACA,MAAMlB,SAAS,GAAG,MAAM,CAAC,MAAMmB,KAAK,CAAE,WAAUzB,EAAG,EAAC,CAAC,EAAE0B,IAAI,CAAC,CAAC;MAC7DnB,QAAQ,CAACD,SAAS,CAACqB,IAAI,CAAC;IAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACtD;EACJ;EAEA,eAAeE,aAAaA,CAAA,EAAG;IAC3B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAM,CAAC,MAAMN,KAAK,CAAC,QAAQ,CAAC,EAAEC,IAAI,CAAC,CAAC;MACrD,MAAMM,UAAU,GAAG,MAAM,CAAC,MAAMP,KAAK,CAAE,WAAUzB,EAAG,QAAO,CAAC,EAAE0B,IAAI,CAAC,CAAC;MACpE,MAAMO,IAAI,GAAG,EAAE;MACfF,QAAQ,CAACJ,IAAI,CAACO,OAAO,CAAEC,IAAI,IAAK;QAC5B,IAAI,CAACjB,cAAc,CAACiB,IAAI,EAAEH,UAAU,CAACL,IAAI,CAAC,EAAE;UACxCM,IAAI,CAACG,IAAI,CAAC;YACNC,KAAK,EAAEF,IAAI,CAACZ,MAAM;YAClBe,KAAK,EAAEH,IAAI,CAACI;UAChB,CAAC,CAAC;QACN;MACJ,CAAC,CAAC;MACF5B,eAAe,CAACsB,IAAI,CAAC;IAEzB,CAAC,CAAC,OAAOL,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IACjD;EACJ;EAEA,eAAeY,aAAaA,CAAA,EAAG;IAC3B,MAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAAE,WAAUzB,EAAG,WAAU,CAAC;IACtD,MAAMQ,QAAQ,GAAG,MAAMiC,QAAQ,CAACf,IAAI,CAAC,CAAC;IACtCjB,WAAW,CAACD,QAAQ,CAACmB,IAAI,CAAC;EAC9B;EAEA,eAAee,eAAeA,CAAA,EAAG;IAC7B,IAAI;MACA,MAAMD,QAAQ,GAAG,MAAMhB,KAAK,CAAE,WAAUzB,EAAG,QAAO,CAAC;MACnD,MAAM2B,IAAI,GAAG,MAAMc,QAAQ,CAACf,IAAI,CAAC,CAAC;MAClC,MAAMO,IAAI,GAAG,EAAE;MACfN,IAAI,CAACA,IAAI,CAACO,OAAO,CAAEC,IAAI,IAAK;QACxB,IAAIQ,QAAQ,CAACC,cAAc,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC,KAAKV,IAAI,CAACZ,MAAM,EAAE;UAC5DU,IAAI,CAACG,IAAI,CAAC;YACNC,KAAK,EAAEF,IAAI,CAACZ,MAAM;YAClBe,KAAK,EAAEH,IAAI,CAACI;UAChB,CAAC,CAAC;QACN;MACJ,CAAC,CAAC;MACFxB,kBAAkB,CAACkB,IAAI,CAAC;IAE5B,CAAC,CAAC,OAAOL,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IACjD;EACJ;EAGAzD,eAAe,CAAC,MAAM;IAClB0D,OAAO,CAACiB,GAAG,CAAC,UAAU,EAAE7C,QAAQ,CAAC;IACjCuB,cAAc,CAAC,CAAC;IAChBkB,eAAe,CAAC,CAAC;IACjBZ,aAAa,CAAC,CAAC;IACfU,aAAa,CAAC,CAAC;EACnB,CAAC,EAAE,CAACvC,QAAQ,CAAC,CAAC;EAEd,MAAM8C,IAAI,GAAG,MAAOC,CAAC,IAAK;IACtB,IAAIA,CAAC,CAACC,OAAO,KAAK,EAAE,EAAE;MAClBD,CAAC,CAACE,cAAc,CAAC,CAAC;MAClB,MAAMC,MAAM,GAAGR,QAAQ,CAACC,cAAc,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC;MACzD,MAAMO,WAAW,GAAGC,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC,CAACjB,KAAK;;MAE5D;MACA,IAAIe,WAAW,CAACG,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;QAE3B,MAAMC,WAAW,GAAG;UAChBC,QAAQ,EAAEL,WAAW;UACrBM,aAAa,EAAE1D,EAAE;UACjB2D,MAAM,EAAER;QACZ,CAAC;QAGD,MAAM1B,KAAK,CAAC,WAAW,EAAE;UACrBmC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACL,cAAc,EAAE;UACpB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,WAAW;QACpC,CAAC,CAAC;QAEFH,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC,CAACjB,KAAK,GAAG,EAAE;QAC7CgB,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC,CAACW,KAAK,CAAC,CAAC;QAC1CzB,aAAa,CAAC,CAAC;MACnB;IACJ;EACJ,CAAC;EAED,MAAM0B,UAAU,GAAIlB,CAAC,IAAK;IACtBA,CAAC,CAACE,cAAc,CAAC,CAAC;IAClB,MAAMiB,IAAI,GAAGd,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC,CAACjB,KAAK;IACvD,IAAI,CAEJ,CAAC,CAAC,OAAOT,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,2CAA2C,EAAEA,KAAK,CAAC;IACrE;EACJ,CAAC;EAED,MAAMwC,YAAY,GAAIC,eAAe,IAAK;IACtCxD,cAAc,CAACwD,eAAe,CAAC;EACnC,CAAC;EAED,MAAMC,OAAO,GAAG,MAAOtB,CAAC,IAAK;IACzBA,CAAC,CAACE,cAAc,CAAC,CAAC;IAClB,IAAIqB,cAAc,GAAG,EAAE;IACvB3D,WAAW,CAACsB,OAAO,CAAEC,IAAI,IAAK;MAC1BoC,cAAc,CAACnC,IAAI,CAACD,IAAI,CAACE,KAAK,CAAC;IACnC,CAAC,CAAC;IACF,IAAI;MACA,MAAMmC,OAAO,CAACC,GAAG,CAACF,cAAc,CAACG,GAAG,CAAC,MAAOC,KAAK,IAAK;QAClD,MAAMlC,QAAQ,GAAG,MAAMhB,KAAK,CAAC,aAAa,EAAE;UACxCmC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACL,cAAc,EAAE;UACpB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAAEb,MAAM,EAAER,QAAQ,CAACgC,KAAK,CAAC;YAAEC,OAAO,EAAEjC,QAAQ,CAAC3C,EAAE;UAAE,CAAC;QAC3E,CAAC,CAAC;QAEF,IAAI,CAACyC,QAAQ,CAACoC,EAAE,EAAE;UACdhD,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAE,MAAMa,QAAQ,CAACqC,IAAI,CAAC,CAAC,CAAC;QAC5E;MACJ,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,OAAOlD,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IAC5D;EACJ,CAAC;EAED,MAAMmD,UAAU,GAAG,MAAO/B,CAAC,IAAK;IAC5BA,CAAC,CAACE,cAAc,CAAC,CAAC;IAClB,IAAIqB,cAAc,GAAG,EAAE;IACvBvD,cAAc,CAACkB,OAAO,CAAEC,IAAI,IAAK;MAC7BoC,cAAc,CAACnC,IAAI,CAACD,IAAI,CAACE,KAAK,CAAC;IACnC,CAAC,CAAC;IACF,IAAI;MACA,MAAMmC,OAAO,CAACC,GAAG,CAACF,cAAc,CAACG,GAAG,CAAC,MAAOC,KAAK,IAAK;QAClD,MAAMlC,QAAQ,GAAG,MAAMhB,KAAK,CAAC,aAAa,EAAE;UACxCmC,MAAM,EAAE,QAAQ;UAChBC,OAAO,EAAE;YACL,cAAc,EAAE;UACpB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAAEb,MAAM,EAAER,QAAQ,CAACgC,KAAK,CAAC;YAAEC,OAAO,EAAEjC,QAAQ,CAAC3C,EAAE;UAAE,CAAC;QAC3E,CAAC,CAAC;QAEF,IAAI,CAACyC,QAAQ,CAACoC,EAAE,EAAE;UACdhD,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAE,MAAMa,QAAQ,CAACqC,IAAI,CAAC,CAAC,CAAC;QAC5E;MACJ,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,OAAOlD,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IAC5D;EACJ,CAAC;EAED,MAAMoD,UAAU,GAAG,MAAOhC,CAAC,IAAK;IAC5BA,CAAC,CAACE,cAAc,CAAC,CAAC;IAClB,IAAI;MACA,MAAMT,QAAQ,GAAG,MAAMhB,KAAK,CAAC,aAAa,EAAE;QACxCmC,MAAM,EAAE,QAAQ;QAChBC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEb,MAAM,EAAER,QAAQ,CAACC,cAAc,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC;UAAE+B,OAAO,EAAEjC,QAAQ,CAAC3C,EAAE;QAAE,CAAC;MACtG,CAAC,CAAC;MAEF,IAAI,CAACyC,QAAQ,CAACoC,EAAE,EAAE;QACdhD,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAE,MAAMa,QAAQ,CAACqC,IAAI,CAAC,CAAC,CAAC;MAC5E;IAEJ,CAAC,CAAC,OAAOlD,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IAC5D;EACJ,CAAC;EAGD,oBACIjC,OAAA,CAAAE,SAAA;IAAAoF,QAAA,gBACItF,OAAA,CAACZ,MAAM;MAACoB,MAAM,EAAEA,MAAO;MAACE,OAAO,EAAEA,OAAQ;MAAC6E,SAAS,EAAC,OAAO;MAAAD,QAAA,gBACvDtF,OAAA,CAACR,aAAa;QAAAgG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACjB3F,OAAA,CAACP,aAAa;QAAA6F,QAAA,gBACVtF,OAAA,CAACT,YAAY;UAAA+F,QAAA,eACTtF,OAAA,CAACnB,OAAO;YAAAyG,QAAA,EAAC;UAAQ;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjB,CAAC,eACf3F,OAAA,CAACN,iBAAiB;UAAA8F,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACrB3F,OAAA,CAACX,UAAU;UAAAiG,QAAA,eACPtF,OAAA,CAACd,KAAK;YAAAoG,QAAA,gBAEFtF,OAAA,CAACjB,UAAU;cAAC6G,IAAI,EAAC,IAAI;cAAAN,QAAA,gBACjBtF,OAAA,CAAClB,KAAK;gBAAC+G,EAAE,EAAC,KAAK;gBAACC,IAAI,EAAC,MAAM;gBAACzF,EAAE,EAAC,WAAW;gBAAC0F,YAAY,EAAEpF,SAAS,CAAC,CAAC,CAAC,CAACqF;cAAK;gBAAAR,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eAC9E3F,OAAA,CAAChB,iBAAiB;gBAACiH,KAAK,EAAC,QAAQ;gBAACJ,EAAE,EAAC,OAAO;gBAAAP,QAAA,eACxCtF,OAAA,CAACrB,MAAM;kBAACuH,OAAO,EAAE3B,UAAW;kBAAC4B,CAAC,EAAC,SAAS;kBAACP,IAAI,EAAC,IAAI;kBAAAN,QAAA,EAAC;gBAEnD;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACM,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACZ,CAAC,eAEb3F,OAAA,CAACL,MAAM;cACHyG,iBAAiB,EAAE,KAAM;cACzBC,yBAAyB,EAAC,QAAQ;cAClCC,OAAO;cACP9B,IAAI,EAAC,iBAAiB;cACtB+B,OAAO,EAAExF,gBAAiB;cAC1ByF,QAAQ,EAAE/B,YAAa;cACvBgC,WAAW,EAAC;YAAyB;cAAAjB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eAC5C3F,OAAA,CAACrB,MAAM;cAACuH,OAAO,EAAEvB,OAAQ;cAAAW,QAAA,EAAC;YAE1B;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACT3F,OAAA,CAACL,MAAM;cACHyG,iBAAiB,EAAE,KAAM;cACzBC,yBAAyB,EAAC,QAAQ;cAClCC,OAAO;cACP9B,IAAI,EAAC,iBAAiB;cACtB+B,OAAO,EAAEpF,mBAAoB;cAC7BqF,QAAQ,EAAE/B,YAAa;cACvBgC,WAAW,EAAC;YAA4B;cAAAjB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eAC/C3F,OAAA,CAACrB,MAAM;cAACuH,OAAO,EAAEd,UAAW;cAAAE,QAAA,EAAC;YAE7B;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eAEb3F,OAAA,CAACV,YAAY;UAAAgG,QAAA,eACTtF,OAAA,CAACtB,MAAM;YAAA4G,QAAA,eACHtF,OAAA,CAACrB,MAAM;cAAC+H,WAAW,EAAC,KAAK;cAACR,OAAO,EAAEb,UAAW;cAAAC,QAAA,EAAC;YAE/C;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC,eACT3F,OAAA,CAACpB,IAAI;MAAC+H,OAAO,EAAC,QAAQ;MAACC,QAAQ,EAAC,GAAG;MAACC,QAAQ,EAAC,UAAU;MAAAvB,QAAA,gBACnDtF,OAAA,CAACpB,IAAI;QAACkI,CAAC,EAAC,OAAO;QAACC,OAAO,EAAC,QAAQ;QAACC,EAAE,EAAC,SAAS;QAAA1B,QAAA,gBACzCtF,OAAA,CAACnB,OAAO;UAACoI,KAAK,EAAC,gBAAgB;UAACC,EAAE,EAAC,OAAO;UAAA5B,QAAA,EAAE3E,SAAS,CAAC,CAAC,CAAC,CAACqF;QAAI;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAU,CAAC,eACxE3F,OAAA,CAACb,UAAU;UAACyG,IAAI,EAAC,IAAI;UAACuB,EAAE,EAAC,MAAM;UAACC,EAAE,EAAC,GAAG;UAACH,KAAK,EAAC,gBAAgB;UAACD,EAAE,EAAC,EAAE;UAAC,cAAW,gBAAgB;UAACK,IAAI,eAAErH,OAAA,CAACJ,YAAY;YAAA4F,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAE;UAACO,OAAO,EAAEzF,MAAO;UAAC6G,MAAM,EAAE;YAAEL,KAAK,EAAE,OAAO;YAAEM,eAAe,EAAE;UAAU,CAAE;UAACC,OAAO,EAAE;YAAEP,KAAK,EAAE;UAAQ;QAAE;UAAAzB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9N,CAAC,eACP3F,OAAA;QAAKK,EAAE,EAAC,cAAc;QAACoH,SAAS,EAAC,UAAU;QAAAnC,QAAA,EACtCzE,QAAQ,CAACkE,GAAG,CAAE2C,OAAO,IAAK;UACvB,MAAMlE,MAAM,GAAGR,QAAQ,CAACC,cAAc,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC;UACzD,MAAMyE,aAAa,GAAGD,OAAO,CAAC1D,MAAM,KAAKR,MAAM;UAC/C,IAAIjD,UAAU,KAAKmH,OAAO,CAAC1D,MAAM,EAAE;YAC/BzD,UAAU,GAAGmH,OAAO,CAAC1D,MAAM;YAC3B,oBACIhE,OAAA;cAA8ByH,SAAS,EAAC,iBAAiB;cAAAnC,QAAA,gBACrDtF,OAAA;gBAAKyH,SAAS,EAAEE,aAAa,GAAG,wBAAwB,GAAG,UAAW;gBAAArC,QAAA,EACjEoC,OAAO,CAAC1B;cAAI;gBAAAR,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACZ,CAAC,eACN3F,OAAA;gBAAKyH,SAAS,EAAEE,aAAa,GAAG,sBAAsB,GAAG,SAAU;gBAAArC,QAAA,EAC9DoC,OAAO,CAAC5D;cAAQ;gBAAA0B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAChB,CAAC;YAAA,GANA+B,OAAO,CAACE,UAAU;cAAApC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAOvB,CAAC;UAEd,CAAC,MAAM;YACHpF,UAAU,GAAGmH,OAAO,CAAC1D,MAAM;YAC3B,oBACIhE,OAAA;cAA8ByH,SAAS,EAAC,iBAAiB;cAAAnC,QAAA,eACrDtF,OAAA;gBAAKyH,SAAS,EAAEE,aAAa,GAAG,sBAAsB,GAAG,SAAU;gBAAArC,QAAA,EAC9DoC,OAAO,CAAC5D;cAAQ;gBAAA0B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAChB;YAAC,GAHA+B,OAAO,CAACE,UAAU;cAAApC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAIvB,CAAC;UAEd;QAEJ,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACN3F,OAAA,CAACjB,UAAU;QACP8I,CAAC,EAAC,MAAM;QACRC,EAAE,EAAC,KAAK;QACRC,EAAE,EAAC,KAAK;QAAAzC,QAAA,eACRtF,OAAA,CAAClB,KAAK;UACF+G,EAAE,EAAC,QAAQ;UACXC,IAAI,EAAC,MAAM;UACXW,WAAW,EAAC,mBAAmB;UAC/BpG,EAAE,EAAC,SAAS;UACZ2H,SAAS,EAAE5E;QAAK;UAAAoC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACf,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC;EAAA,eACT,CAAC;AAEX;AAACvF,EAAA,CAjTQD,QAAQ;EAAA,QACEL,SAAS,EACPD,WAAW,EAEQZ,aAAa;AAAA;AAAAgJ,EAAA,GAJ5C9H,QAAQ;AAmTjB,eAAeA,QAAQ;AAAC,IAAA8H,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}